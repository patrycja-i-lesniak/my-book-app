{"version":3,"sources":["assets/icons/plus.svg","context/index.js","components/atoms/ButtonIcon/ButtonIcon.js","components/atoms/Button/Button.js","components/atoms/Header/Header.js","components/atoms/Paragraph/index.js","components/organisms/NewItemBar/styled.js","components/molecules/NewItemForm/validationSchema.js","components/molecules/RequredBox/RequiredBox.js","assets/icons/close.svg","components/molecules/Popups/ErrorPopup/styled.js","hoc/withContext.js","components/molecules/Popups/ErrorPopup/index.js","components/molecules/Popups/SuccessPopup/styled.js","components/molecules/Popups/SuccessPopup/index.js","components/molecules/NewItemForm/styled.js","components/molecules/NewItemForm/initialValues.js","components/molecules/NewItemForm/Options.js","api/index.js","components/molecules/NewItemForm/index.js","components/organisms/NewItemBar/index.js","assets/images/backgroundPattern.jpg","theme/GlobalStyle.js","theme/theme.js","airtable/base.js","customHooks/useFetchData.js","customHooks/useFetchDetailsData.js","customHooks/useGetCurrentPage.js","customHooks/useLocalStorage.js","templates/MainTemplate.js","components/organisms/Navigation/MobileNavigation/styled.js","components/organisms/Navigation/MobileNavigation/index.js","assets/logo/logoMyBooks.svg","components/organisms/Navigation/NavigationBar/styled.js","assets/icons/search.svg","components/atoms/SearchBox/styled.js","components/atoms/SearchBox/index.js","components/organisms/Navigation/NavigationBar/index.js","components/organisms/Navigation/FooterNavigation/styled.js","components/organisms/Navigation/FooterNavigation/ContactMe.js","components/organisms/Navigation/FooterNavigation/index.js","templates/UserPageTemplate.js","components/atoms/Container/index.js","assets/icons/bookIcon.svg","assets/images/book1.jpg","assets/icons/readingIcon.svg","assets/images/book2.jpg","assets/icons/buyIcon.svg","assets/images/book3.jpg","components/atoms/Box/styled.js","components/atoms/Box/index.js","components/molecules/RotaryBox/RotaryBox.js","assets/images/background.jpg","components/organisms/QuotesBox/styled.js","components/organisms/QuotesBox/index.js","helpers/capitalizeFirstLetter.js","templates/GridTemplate.js","components/atoms/Arrow/styled.js","components/atoms/Arrow/index.js","components/atoms/Wrapper/index.js","assets/logo/logoSmallWhite.svg","assets/logo/logoSmallPink.svg","components/molecules/Card/CardSmall/styled.js","components/molecules/Card/CardSmall/index.js","components/molecules/Card/QuoteCard/validationSchema.js","components/molecules/Card/QuoteCard/initialValues.js","components/molecules/Card/QuoteCard/styled.js","components/molecules/Card/QuoteCard/index.js","components/molecules/Popups/EditQuotePopup/styled.js","components/molecules/Popups/EditQuotePopup/index.js","GetData/GetAllData.js","components/molecules/Card/CardBig/styled.js","assets/icons/trash.svg","assets/icons/lcLogo.svg","assets/icons/link.svg","components/molecules/Popups/ConfirmationPopup/styled.js","components/molecules/Popups/ConfirmationPopup/index.js","components/molecules/Card/CardBig/index.js","views/Authors.js","views/Notes.js","views/Books.js","views/Home.js","components/molecules/NewQuoteForm/validationSchema.js","components/molecules/NewQuoteForm/styled.js","components/molecules/NewQuoteForm/initialValues.js","components/molecules/NewQuoteForm/index.js","views/Quotes.js","templates/DetailsPageTemplate.js","components/atoms/Loader/styled.js","views/DetailsPage.js","components/atoms/Error/styled.js","assets/icons/error.svg","routes/index.js","views/Root.js","index.js"],"names":["PageContext","React","createContext","ButtonIcon","styled","button","theme","colors","lipstick","shadows","boxShadow","icon","lightLipstick","secondary","css","Button","white","boxShadowDark","breakpoints","small","silver","Header","h1","bold","textShadow","gray","Paragraph","p","black","StyledWrapper","div","isVisible","medium","StyledHeader","StyledParagraph","CloseBarButton","Yup","this","transform","value","undefined","bookValidationSchema","shape","title","min","max","required","firstName","lastName","imageUrl","notRequired","series","date","isbn","translation","publishing","numberOfPages","content","LClink","status","oneOf","authorValidationSchema","oficialWebsite","default","noteValidationSchema","nullable","Box","RequiredBox","msg","ButtonWrapper","grey","CloseButton","withContext","Component","props","Consumer","context","pageContext","handlePopupClose","toggleNewItemBar","handleReset","closeIcon","type","onClick","StyledForm","Form","StyledButton","InputField","Field","textarea","select","StyledLabel","label","InputWrapper","DataWrapper","initialValues","Options","process","REACT_APP_DB_ID","REACT_APP_API_KEY","API_URL","request","endpoint","a","method","data","requestConfig","headers","Authorization","url","axios","response","Error","statusText","get","post","patch","delete","useState","popup","setPopup","errorPopup","setErrorPopup","console","log","history","useHistory","refresh","handler","useEffect","clearTimeout","push","setTimeout","UseRefresh","validationSchema","onSubmit","values","resetForm","location","pathname","book","records","fields","author","note","api","then","catch","err","error","handleChange","handleBlur","handleSubmit","autoComplete","as","htmlFor","name","onChange","onBlur","maxLenght","style","display","NewItemBar","defaultProps","GlobalStyle","createGlobalStyle","normalize","pattern","StyledBackdrop","webOrange","torchRed","darkBlue","japaneseLaurel","toreaBay","vividViolet","desertStorm","lightGrey","mineShaft","font","light","regular","xsmall","large","quoteBoxShadow","modalShadow","popupShadow","easeOut","BASE_URL","base","create","baseURL","Airtable","apiKey","useFetchData","items","setItems","table","pageSize","sort","view","eachPage","fetchNextPage","getRecordById","id","find","record","useGetCurrentPage","pageType","setPageType","useLocation","filter","page","includes","currentPage","setCurrentPage","StyledButtonIcon","MainTemplate","children","isNewItemBarVisible","setNewItemBarVisible","Provider","plusIcon","ul","activeClassName","StyledItem","NavLink","attrs","MobileNavigation","to","StyledNavigationWrapper","nav","StyledLogoLink","myBooksLogo","StyledLinkList","SearchWrapper","SearchField","searchIcon","SearchBox","query","setSubmitting","setInput","otherStuff","formikProps","NavigationBar","Wrapper","Link","List","Item","li","ContactMe","Icon","contact","FaGithub","map","href","target","rel","FooterNavigation","UserPageTemplate","Container","BoxFront","BoxBack","BoxText","Article","Book1","BookIcon","Book2","ReadingIcon","Book3","BuyIcon","header","RotaryBox","QuoteWrapper","background","QuoteSource","StyledQuote","h2","QuotesBox","quotes","setQuotes","getQuote","randomNumber","Math","floor","random","length","quote","capitalizeFirstLetter","string","firstLetter","charAt","toUpperCase","restString","slice","toLowerCase","StyledGrid","notes","GridTemplate","StyledArrow","svg","showMore","Arrow","width","height","fill","viewBox","version","xmlns","d","StyledImage","img","LogoSmallWhite","LogoSmallPink","StyledTitle","StyledAuthor","InnerWrapper","StyledDate","ShowMore","ButtonContentWrapper","span","StyledLink","CardSmall","item","setShowMore","src","checked","Top","Quote","mainShaft","Text","ButtonSmall","input","Label","Checkbox","QuoteCard","setChecked","toggleCheckbox","forHtml","UpperContainer","LowerContainer","Details","StyledData","ButtonsWrapper","Status","read","borrowed","toRead","toBuy","inProgress","StatusParagraph","ExtraWrapper","handleDeleteFalse","itemId","DeleteButton","className","trashIcon","destroy","deleteItem","goBack","CardBig","show","lcLogo","linkIcon","Authors","field","Notes","direction","Books","Home","NewQuoteForm","replace","Image","MyWrapper","columnsCountBreakPoints","Quotes","animationLeft","keyframes","animationRight","split","routes","Root","exact","path","render","component","DetailsPage","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40d83eb3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/plus.15c51fc0.svg\";","import React from 'react';\n\nconst PageContext = React.createContext('home');\n\nexport default PageContext;","import styled, {css} from 'styled-components';\n\nconst ButtonIcon = styled.button`\n  width: 48px;\n  height: 48px;\n  border: 2px solid ${({ theme }) => theme.colors.lipstick};\n  background: #ae0046;\n  border-radius: 3px;\n  cursor: pointer;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadow};\n  background-size: 60%;\n  background-position: 50%;\n  background-repeat: no-repeat;\n  background-image: url(${({ icon }) => icon});\n\n  &:active {\n    background-color: ${({ theme }) => theme.colors.lightLipstick};\n  }\n\n  ${({ secondary }) =>\n    secondary &&\n    css`\n      border: none;\n      background-color: transparent;\n      width: 38px;\n      height: 38px;\n      box-shadow: none;\n    `}\n`;\n\nexport default ButtonIcon;\n","import styled, { css } from 'styled-components';\n\nconst Button = styled.button`\n  border: 1px solid ${({ theme }) => theme.colors.lipstick};\n  color: ${({ theme }) => theme.colors.white};\n  background: ${({ theme }) => theme.colors.lipstick};\n  font-size: 1.4rem;\n  width: 140px;\n  padding: 10px;\n  border-radius: 3px;\n  cursor: pointer;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n  text-decoration: none;\n  text-align: center;\n\n  /* @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    max-width: 120px;\n  } */\n\n  &:active {\n    background-color: ${({ theme }) => theme.colors.lightLipstick};\n  }\n\n  ${({ secondary }) =>\n    secondary &&\n    css`\n      background-color: ${({ theme }) => theme.colors.white};\n      color: ${({ theme }) => theme.colors.lipstick};\n      box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n\n      &:active {\n        background-color: ${({ theme }) => theme.colors.silver};\n      }\n    `}\n`;\n\nexport default Button;\n","import styled, { css } from 'styled-components';\n\nconst Header = styled.h1`\n  font-size: 3.5rem;\n  font-weight: ${({ theme }) => theme.bold};\n  color: ${({ theme }) => theme.colors.lipstick};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.shadows.textShadow};\n  line-height: 1.3;\n\n  ${({ secondary }) =>\n    secondary &&\n    css`\n      color: ${({ theme }) => theme.colors.gray};\n      font-size: 2.6rem;\n      margin: 3rem 0;\n    `};\n`;\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst Paragraph = styled.p`\n  font-size: 1.4rem;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.colors.black};\n`;\n\nexport default Paragraph;\n","import styled from 'styled-components';\nimport Button from 'components/atoms/Button/Button';\nimport Header from 'components/atoms/Header/Header';\nimport Paragraph from 'components/atoms/Paragraph';\n\nexport const StyledWrapper = styled.div`\n  border-left: 3px solid ${({ theme }) => theme.colors.lipstick};\n  z-index: 0;\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  right: 0;\n  top: 0;\n  width: 50vw;\n  max-width: 600px;\n  padding-left: 50px;\n  height: 100vh;\n  background-color: white;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadow};\n  transform: translate(${({ isVisible }) => (isVisible ? '0' : '100%')});\n  transition: transform 0.6s ease-in-out;\n  overflow: scroll;\n  z-index: 4;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    width: 100vw;\n    border-left: none;\n    padding-left: 0;\n    align-items: center;\n    max-width: unset;\n  }\n`;\n\nexport const StyledHeader = styled(Header)`\n  margin: 100px 0 10px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    margin-top: 80px;\n  }\n`;\n\nexport const StyledParagraph = styled(Paragraph)`\n  width: 90%;\n  padding: 5px 0;\n  text-align: center;\n  font-size: 1.7rem;\n`;\n\nexport const CloseBarButton = styled(Button)`\n  position: fixed;\n  top: 43%;\n  width: 50px;\n  height: 100px;\n  left: -20px;\n  border-radius: 0 40px 40px 0;\n`;\n","import * as Yup from 'yup';\n\nYup.addMethod(Yup.date, 'stripEmptySDate', function () {\n  return this.transform(value => (value === '' ? undefined : value));\n});\n\nexport const bookValidationSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required field is empty'),\n  firstName: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required field is empty'),\n  lastName: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required field is empty'),\n  imageUrl: Yup.string().notRequired(),\n  series: Yup.string().notRequired(),\n  date: Yup.date().notRequired(),\n  isbn: Yup.number('Must be a number').notRequired(),\n  translation: Yup.string().notRequired(),\n  publishing: Yup.string().notRequired(),\n  numberOfPages: Yup.number('Must be a number').notRequired(),\n  content: Yup.string().required('Required field is empty'),\n  LClink: Yup.string().notRequired(),\n  status: Yup.string()\n    .oneOf(['read', 'to read', 'to buy', 'borrowed', 'in progress'])\n    .notRequired(),\n});\n\nexport const authorValidationSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required field is empty'),\n  lastName: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required field is empty'),\n  imageUrl: Yup.string().required('Required field is empty'),\n  content: Yup.string().required('Required field is empty'),\n  oficialWebsite: Yup.string().default(),\n});\n\nexport const noteValidationSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required field is empty'),\n  imageUrl: Yup.string().notRequired(),\n  date: Yup.date().nullable().notRequired(),\n  content: Yup.string().required('Required field is empty'),\n});","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Box = styled.div`\n  display: flex;\n  border: none;\n  background-color: #fce9f0;\n  border-radius: 5px;\n  margin: -0.7rem 0 0;\n  height: 30px;\n  align-items: center;\n  width: 100%;\n`;\n\nconst StyledParagraph = styled.p`\n  padding-left: 10px;\n  margin: 0;\n`;\n\nconst RequiredBox = ({ msg }) => (\n  <Box>\n    <StyledParagraph>{msg}</StyledParagraph>\n  </Box>\n);\n\nRequiredBox.propTypes = {\n  msg: PropTypes.string.isRequired,\n};\n\nexport default RequiredBox;\n","export default __webpack_public_path__ + \"static/media/close.c2cf8b48.svg\";","import styled from 'styled-components';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\n\nexport const StyledWrapper = styled.div`\n  transform: translateY(-50%);\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  left: 0;\n  right: 0;\n  top: 50%;\n  margin: 20px auto;\n  width: 400px;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.colors.white};\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n  z-index: 99999;\n  padding: 40px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    max-width: 90%;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 30px;\n  justify-content: center;\n  padding: 10px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    gap: 20px;\n  }\n`;\n\nexport const StyledParagraph = styled.p`\n  font-size: 2rem;\n  color: ${({ theme }) => theme.colors.grey};\n  text-align: center;\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    font-size: 1.7rem;\n  }\n`;\n\nexport const CloseButton = styled(ButtonIcon)`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  z-index: 99999;\n  width: 24px;\n  height: 24px;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n`;\n","import React from 'react';\nimport PageContext from 'context'; \n\nconst withContext = (Component) => {\n    return function contextComponent(props)\n    {\n        return (\n            <PageContext.Consumer>\n            {context =>(\n                <Component {...props} pageContext={context}/>\n            )}\n            </PageContext.Consumer>\n        )\n    }\n};\n\nexport default withContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'components/atoms/Button/Button';\nimport closeIcon from 'assets/icons/close.svg';\nimport { StyledWrapper, ButtonWrapper, StyledParagraph, CloseButton } from './styled';\nimport withContext from 'hoc/withContext';\n\n\nconst ErrorPopup = ({ handlePopupClose, toggleNewItemBar, pageContext, handleReset }) => {\n  const onClickActions = () => \n  [toggleNewItemBar(), handleReset()\n  ];\n  return (\n    <StyledWrapper>\n      <StyledParagraph>The item could not be added. </StyledParagraph>\n      <CloseButton icon={closeIcon} type=\"button\" onClick={handlePopupClose} />\n      <ButtonWrapper>\n        <Button type=\"button\" onClick={onClickActions}>\n          Back to {pageContext}\n        </Button>\n        <Button secondary type=\"button\" onClick={handlePopupClose}>\n          Try again\n        </Button>\n      </ButtonWrapper>\n    </StyledWrapper>\n  );\n};\n\nErrorPopup.propTypes = {\n  toggleNewItemBar: PropTypes.func.isRequired,\n  handlePopupClose: PropTypes.func.isRequired,\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'notes', 'quotes']),\n  handleReset: PropTypes.func,\n};\n\nexport default withContext(ErrorPopup);\n","import styled from 'styled-components';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\n\nexport const StyledWrapper = styled.div`\n  transform: translateY(-50%);\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  left: 0;\n  right: 0;\n  top: 50%;\n  margin: 20px auto;\n  width: 400px;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.colors.white};\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n  z-index: 99999;\n  padding: 40px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    max-width: 90%;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 30px;\n  justify-content: center;\n  padding: 10px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    gap: 20px;\n  }\n`;\n\nexport const StyledParagraph = styled.p`\n  font-size: 2rem;\n  color: ${({ theme }) => theme.colors.grey};\n  text-align: center;\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    font-size: 1.7rem;\n  }\n`;\n\nexport const CloseButton = styled(ButtonIcon)`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  z-index: 99999;\n  width: 24px;\n  height: 24px;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'components/atoms/Button/Button';\nimport closeIcon from 'assets/icons/close.svg';\nimport { StyledWrapper, ButtonWrapper, StyledParagraph, CloseButton } from './styled';\nimport withContext from 'hoc/withContext';\n\nconst SuccessPopup = ({ handlePopupClose, pageContext, toggleNewItemBar }) => {\n\n  const onClickActions = () => {\n    toggleNewItemBar(), handlePopupClose()\n  };\n\n  return (\n    <StyledWrapper>\n      <StyledParagraph>Successfully submitted.</StyledParagraph>\n      <CloseButton icon={closeIcon} type=\"button\" onClick={handlePopupClose} />\n      <ButtonWrapper>\n        <Button type=\"reset\" onClick={onClickActions}>\n          Back to {pageContext}\n        </Button>\n        <Button secondary type=\"button\" onClick={handlePopupClose}>\n          Add next item\n        </Button>\n      </ButtonWrapper>\n    </StyledWrapper>\n  );\n};\n\nSuccessPopup.propTypes = {\n  handlePopupClose: PropTypes.func.isRequired,\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'notes', 'quotes']),\n  toggleNewItemBar: PropTypes.func,\n  handleReset: PropTypes.func,\n};\n\nexport default withContext(SuccessPopup);\n","import styled, { css } from 'styled-components';\nimport { Form, Field } from 'formik';\nimport Button from 'components/atoms/Button/Button';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  justify-content: center;\n  gap: 1rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    width: 80%;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  margin: 10px auto 120px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: inline-block;\n    margin: 10px auto 100px;\n  }\n`;\n\nexport const InputField = styled(Field)`\n  color: ${({ theme }) => theme.colors.lipstick};\n  font-size: 1.5rem;\n  border: none;\n  line-height: 2.5;\n  border: 1px solid ${({ theme }) => theme.colors.silver};\n  border-radius: 5px;\n  outline: none;\n  padding: 5px 0 2px 10px;\n  font-weight: bold;\n  height: 4rem;\n\n  ::placeholder {\n    font-size: 1.2rem;\n    color: ${({ theme }) => theme.colors.grey};\n    :focus {\n      color: transparent;\n    }\n  }\n\n  :active {\n    outline: 1px solid ${({ theme }) => theme.colors.lipstick};\n  }\n\n  ${({ textarea }) =>\n    textarea &&\n    css`\n      height: 12rem;\n\n      line-height: 1.5;\n\n      resize: none;\n      outline: none;\n      width: 100%;\n      font-weight: 400;\n    `}\n\n  ${({ select }) =>\n    select &&\n    css`\n      margin-top: 0.7rem;\n      overflow: hidden;\n      outline: none;\n      border: 1px solid ${({ theme }) => theme.colors.lipstick};\n    `}\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 1.2rem;\n  color: ${({ theme }) => theme.colors.grey};\n  padding: 3px;\n  background-color: white;\n  display: inline-block;\n  max-width: 120px;\n  margin: 0 0 -20px 10px;\n  z-index: 2;\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const DataWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: no-wrap;\n  gap: 0.7rem;\n  width: 49%;\n`;\n","export const initialValues = {\n  type: '',\n  title: 'someTitle',\n  firstName: 'someFirstName',\n  lastName: 'someLastName',\n  imageUrl: 'http://someImage.pl',\n  series: 'someSeries',\n  date: '',\n  isbn: '',\n  translation: 'someTranslator',\n  publishing: 'somePublisher',\n  numberOfPages: '',\n  content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n  LClink: 'http://someImage.pl',\n  status: '',\n  oficialWebsite: 'http://someOficialWebsite.pl',\n};\n","export const Options = () => (\n  <>\n    <option value=\"\" label=\"Select status\" />\n    <option value=\"read\" label=\"read\" />\n    <option value=\"to read\" label=\"to read\" />\n    <option value=\"in progress\" label=\"in progress\" />\n    <option value=\"to buy\" label=\"to buy\" />\n    <option value=\"borrowed\" label=\"borrowed\" />\n  </>\n);\n","import axios from 'axios';\n\nconst { REACT_APP_DB_ID, REACT_APP_API_KEY } = process.env;\nconst API_URL = `https://api.airtable.com/v0/${REACT_APP_DB_ID}`;\n\nconst request = async (endpoint, method = 'GET', data = null) => {\n  const requestConfig = {\n    method,\n    headers: {\n      Authorization: `Bearer ${REACT_APP_API_KEY}`,\n      'Content-Type': 'application/json',\n    },\n    data: method === 'POST' || method === 'PATCH' ? data : null,\n  };\n\n  const url = `${API_URL}${endpoint}`;\n\n  const response = await axios(url, requestConfig);\n\n  if (!response) throw new Error(response.statusText);\n\n  return response.data;\n};\n\nconst get = endpoint => request(endpoint);\n\nconst post = (endpoint, data) => request(endpoint, 'POST', data);\n\nconst patch = (endpoint, data) => request(endpoint, 'PATCH', data);\n\nconst _delete = endpoint => request(endpoint, 'DELETE');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  get,\n  post,\n  patch,\n  delete: _delete,\n};\n","import React, { useState, useEffect } from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport PropTypes, { any } from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  bookValidationSchema,\n  authorValidationSchema,\n  noteValidationSchema,\n} from 'components/molecules/NewItemForm/validationSchema';\nimport RequiredBox from 'components/molecules/RequredBox/RequiredBox';\nimport ErrorPopup from 'components/molecules/Popups/ErrorPopup';\nimport SuccessPopup from 'components/molecules/Popups/SuccessPopup';\nimport {\n  StyledForm,\n  StyledButton,\n  InputField,\n  StyledLabel,\n  InputWrapper,\n  DataWrapper,\n} from './styled';\nimport withContext from 'hoc/withContext';\nimport { initialValues } from './initialValues';\nimport { Options } from './Options';\nimport api from 'api';\n\nconst NewItemForm = ({ pageContext, toggleNewItemBar }) => {\n  const [popup, setPopup] = useState(false);\n  const [errorPopup, setErrorPopup] = useState(false);\n\n  const handlePopupClose = () => {\n    setPopup(false);\n    setErrorPopup(false);\n    console.log('Close popup');\n  };\n\n  const endpoint = `/${pageContext}`;\n\n  const history = useHistory();\n\n  // VER.1\n\n  // const handleSuccess = () => {\n  //   history.push('/');\n  //   history.replace(endpoint);\n  // };\n\n  // VER. 2\n\n  const UseRefresh = () => {\n    let handler;\n    const refresh = () => {\n      history.push('/');\n      handler = setTimeout(() => history.push(endpoint), 10);\n    };\n\n    useEffect(() => {\n      return () => handler && clearTimeout(handler);\n    }, [handler]);\n    return refresh;\n  };\n\n  const refresh = UseRefresh(history, endpoint);\n\n  const handleSuccess = () => {\n    if (history.location.pathname === endpoint) {\n      refresh();\n    } else {\n      history.push(endpoint);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={\n        pageContext === 'books'\n          ? bookValidationSchema\n          : pageContext === 'authors'\n          ? authorValidationSchema\n          : noteValidationSchema\n      }\n      onSubmit={async (values, { resetForm }) => {\n        handleSuccess();\n\n        console.log(values);\n\n        const book = {\n          records: [\n            {\n              fields: {\n                title: values.title,\n                firstName: values.firstName,\n                lastName: values.lastName,\n                imageUrl: values.imageUrl,\n                series: values.series,\n                date: values.date,\n                numberOfPages: values.numberOfPages,\n                isbn: values.isbn,\n                translation: values.translation,\n                publishing: values.publishing,\n                status: values.status,\n                content: values.content,\n                LClink: values.LClink,\n              },\n            },\n          ],\n        };\n\n        const author = {\n          records: [\n            {\n              fields: {\n                firstName: values.firstName,\n                lastName: values.lastName,\n                content: values.content,\n                imageUrl: values.imageUrl,\n                oficialWebsite: values.oficialWebsite,\n              },\n            },\n          ],\n        };\n\n        const note = {\n          records: [\n            {\n              fields: {\n                title: values.title,\n                imageUrl: values.imageUrl,\n                date: values.date,\n                content: values.content,\n              },\n            },\n          ],\n        };\n\n        api\n          .post(\n            endpoint,\n            pageContext === 'books'\n              ? (endpoint, book)\n              : pageContext === 'authors'\n              ? (endpoint, author)\n              : (endpoint, note),\n          )\n          .then(response => {\n            setPopup(true);\n            resetForm();\n            console.log(response);\n            console.log('Successfully submitted.');\n          })\n          .catch(err => {\n            setErrorPopup(true);\n            console.error(err);\n            console.log('The form could not be sent.');\n          });\n      }}\n    >\n      {({ values, handleChange, handleBlur, handleSubmit, handleReset }) => (\n        <StyledForm method=\"POST\" autoComplete=\"off\" onSubmit={handleSubmit}>\n          <>\n            {errorPopup && (\n              <ErrorPopup\n                handlePopupClose={handlePopupClose}\n                toggleNewItemBar={toggleNewItemBar}\n                handleReset={handleReset}\n              />\n            )}\n            {popup && (\n              <SuccessPopup\n                handlePopupClose={handlePopupClose}\n                toggleNewItemBar={toggleNewItemBar}\n                handleReset={handleReset}\n              />\n            )}\n          </>\n          {pageContext === 'authors' ? null : (\n            <>\n              <StyledLabel as=\"label\" htmlFor=\"title\">\n                title\n              </StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"text\"\n                name=\"title\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.title}\n                autoComplete=\"given-name\"\n              />\n\n              <ErrorMessage name=\"title\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            </>\n          )}\n\n          {pageContext === 'notes' ? null : (\n            <InputWrapper>\n              <DataWrapper>\n                <StyledLabel htmlFor=\"first name\">first name</StyledLabel>\n                <InputField\n                  as=\"input\"\n                  type=\"text\"\n                  name=\"firstName\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.firstName}\n                />\n                <ErrorMessage name=\"firstName\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n              </DataWrapper>\n              <DataWrapper>\n                <StyledLabel htmlFor=\"last name\">last name</StyledLabel>\n                <InputField\n                  as=\"input\"\n                  type=\"text\"\n                  name=\"lastName\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.lastName}\n                />\n                <ErrorMessage name=\"lastName\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n              </DataWrapper>\n            </InputWrapper>\n          )}\n\n          <>\n            <StyledLabel htmlFor=\"image url\">image url</StyledLabel>\n            <InputField\n              as=\"input\"\n              type=\"url\"\n              name=\"imageUrl\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.imageUrl}\n            />\n\n            <ErrorMessage name=\"imageUrl\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n          </>\n\n          {pageContext === 'books' && (\n            <>\n              <StyledLabel htmlFor=\"series\">series</StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"text\"\n                name=\"series\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.series}\n              />\n              <ErrorMessage name=\"series\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            </>\n          )}\n\n          {pageContext === 'authors' ? null : (\n            <>\n              <StyledLabel htmlFor=\"date\">date of publication</StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"date\"\n                name=\"date\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.date}\n              />\n              <ErrorMessage name=\"date\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            </>\n          )}\n\n          {pageContext === 'books' && (\n            <>\n              <InputWrapper>\n                <DataWrapper>\n                  <StyledLabel htmlFor=\"ISBN\">ISBN</StyledLabel>\n                  <InputField\n                    as=\"input\"\n                    type=\"number\"\n                    name=\"isbn\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.isbn}\n                  />\n                  <ErrorMessage name=\"isbn\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n                </DataWrapper>\n                <DataWrapper>\n                  <StyledLabel htmlFor=\"number of pages\">number of pages</StyledLabel>\n                  <InputField\n                    as=\"input\"\n                    type=\"number\"\n                    name=\"numberOfPages\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.numberOfPages}\n                    maxLenght=\"4\"\n                  />\n                  <ErrorMessage name=\"numberOfPages\">\n                    {msg => <RequiredBox msg={msg} />}\n                  </ErrorMessage>\n                </DataWrapper>\n              </InputWrapper>\n\n              <StyledLabel htmlFor=\"translation\">translation</StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"text\"\n                name=\"translation\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.translation}\n              />\n              <ErrorMessage name=\"translation\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n\n              <StyledLabel htmlFor=\"publishing\">publishing</StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"text\"\n                name=\"publishing\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.publishing}\n              />\n              <ErrorMessage name=\"publishing\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n\n              <StyledLabel htmlFor=\"link LubimyCytać.pl\">link LubimyCytać.pl</StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"url\"\n                name=\"LClink\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.LClink}\n              />\n              <ErrorMessage name=\"LClink\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n\n              <InputField\n                select\n                as=\"select\"\n                name=\"status\"\n                value={values.status}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                style={{ display: 'block' }}\n              >\n                <Options />\n              </InputField>\n              <ErrorMessage name=\"status\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            </>\n          )}\n          {pageContext === 'authors' && (\n            <>\n              <StyledLabel htmlFor=\"oficial website\">oficial website</StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"url\"\n                name=\"oficialWebsite\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.oficialWebsite}\n              />\n              <ErrorMessage name=\"oficialWebsite\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            </>\n          )}\n\n          <StyledLabel htmlFor=\"content\">description</StyledLabel>\n          <InputField\n            textarea\n            type=\"text\"\n            name=\"content\"\n            as=\"textarea\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.content}\n          />\n          <ErrorMessage name=\"content\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n          <StyledButton type=\"submit\">Add new item</StyledButton>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n\nNewItemForm.propTypes = {\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'notes', 'quotes']),\n  toggleNewItemBar: PropTypes.func,\n};\n\nexport default withContext(NewItemForm);\n","import { BsCaretRightFill } from 'react-icons/bs';\nimport PropTypes from 'prop-types';\nimport { \n  StyledWrapper, \n  StyledHeader, \n  StyledParagraph, \n  CloseBarButton } \n  from './styled';\nimport NewItemForm from 'components/molecules/NewItemForm';\nimport withContext from 'hoc/withContext';\n\nconst NewItemBar = ({ isVisible, pageContext, toggleNewItemBar }) => (\n  <>\n    <StyledWrapper isVisible={isVisible}>\n      <StyledHeader secondary>Add new {pageContext}</StyledHeader>\n      <StyledParagraph>\n        Fill in all the fields and click the button.\n      </StyledParagraph>\n      <NewItemForm toggleNewItemBar={toggleNewItemBar} />\n      <CloseBarButton type=\"button\" onClick={toggleNewItemBar}>\n        <BsCaretRightFill />\n      </CloseBarButton>\n    </StyledWrapper>\n  </>\n);\n\nNewItemBar.propTypes = {\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'notes', 'quotes']),\n  isVisible: PropTypes.bool,\n  toggleNewItemBar: PropTypes.func,\n};\n\nNewItemBar.defaultProps = {\n  isVisible: false,\n};\n\nexport default withContext(NewItemBar);\n","export default __webpack_public_path__ + \"static/media/backgroundPattern.c1ddb424.jpg\";","import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\nimport styled from 'styled-components';\nimport pattern from 'assets/images/backgroundPattern.jpg'\n\nexport const GlobalStyle = createGlobalStyle`\n${normalize}\n\n*, ::after, ::before {\n  box-sizing: border-box;\n  -webkit-font-smoothing: antialiased;            //CSS antialiasing cheatsheet\n  -moz-osx-font-smoothing: grayscale;\n}\n\nhtml  {\n  font-size: 62.5%;\n}\n\nbody {\n  height: 100vh;\n    font-size: 1.6rem;\n    margin: 0 ;\n    font-family: \"Poppins\", sans-serif;\n    background-color: white;\n    word-break: break-word;\n    background-image: url(${pattern});\n    overscroll-behavior: none;\n`;\n\nexport const StyledBackdrop = styled.div`\n  width: 100vw;\n  height: 100vh;\n  opacity: 60%;\n  background-color: black;\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 0;\n  position: fixed;\n`;\n","export const theme = {\n  colors: {\n    white: '#FFFFFF',\n    webOrange: '#FFA502',\n    torchRed: '#FF0249',\n    darkBlue: '#111827',\n    japaneseLaurel: '#10830B',\n    toreaBay: '#15259D',\n    vividViolet: '#853597',\n    lightLipstick: '#E2005A',\n    lipstick: '#AE0046',\n    desertStorm: '#F1F1EF',\n    silver: '#CCCCCC',\n    grey: '#808080',\n    lightGrey: '#E0E0E0',\n    mineShaft: '#222222',\n    black: '#000000',\n  },\n\n  font: {\n    light: 300,\n    regular: 400,\n    bold: 600,\n  },\n\n  breakpoints: {\n    xsmall: 470,\n    small: 598,\n    medium: 768,\n    large: 1024,\n  },\n  shadows: {\n    boxShadow: '0 5px 20px -5px rgba(128, 128, 128, 0.8)',\n    boxShadowDark: '5px 5px 15px -5px rgba(0, 0, 0, 0.5)',\n    quoteBoxShadow: '-5px 5px 15px -5px rgba(0, 0, 0, 0.6)',\n    textShadow: '-1px 3px 3px #bfbfbf',\n    modalShadow: '0 10px 20px -5px rgba(0, 0, 0, .8);',\n    popupShadow: '0 10px 20px -5px rgba(0, 0, 0, .8);',\n  },\n\n  easeOut: 'cubic-bezier(0.4, 0.2, 0.2, 1)',\n};\n","import axios from 'axios';\n\nconst { REACT_APP_DB_ID, REACT_APP_API_KEY } = process.env;\n\nexport const BASE_URL = `https://api.airtable.com/v0/${REACT_APP_DB_ID}`;\n\nexport const axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    Authorization: `Bearer ${REACT_APP_API_KEY}`,\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const apiEndpoints = {\n  booksList: '/books?view=Grid%20view',\n  bookDetails: '/books',\n  authorsList: '/authors?view=Grid%20view',\n  authorDetails: '/authors',\n  notesList: '/notes?view=Grid%20view',\n  noteDetails: '/notes',\n};\n\n// export const axiosConfig = {\n//   headers: {\n//     Authorization: `Bearer ${REACT_APP_API_KEY}`,\n    \n//   },\n// };\n\n\n//==================================\n\nimport Airtable from 'airtable';\n\nexport const base = new Airtable({ apiKey: `${REACT_APP_API_KEY}`}).base(`${REACT_APP_DB_ID}`);\n\n\n\n\n\n\n\nconst API_URL = `https://api.airtable.com/v0/${REACT_APP_DB_ID}`;\n\nconst request = async (endpoint, method = 'GET', data = null) => {\n  const requestConfig = {\n    method,\n    headers: {\n      Authorization: `Bearer ${REACT_APP_API_KEY}`,\n      'Content-Type': 'application/json',\n    },\n  };\n\n  if (method === 'POST' || method === 'PATCH') requestConfig.body = JSON.stringify(data);\n\n  const url = `${API_URL}${endpoint}`;\n\n  const response = await fetch(url, requestConfig);\n\n  if (!response.ok) throw new Error(response.statusText);\n\n  const getData = await response.json();\n\n  if (!getData) {\n    throw new Error('Something happened - no data');\n  }\n\n  return getData;\n};\n\nconst get = endpoint => request(endpoint);\n\nconst post = (endpoint, data) => request(endpoint, 'POST', data);\n\nconst patch = (endpoint, data) => request(endpoint, 'PATCH', data);\n\nconst _delete = endpoint => request(endpoint, 'DELETE');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  get,\n  post,\n  patch,\n  delete: _delete,\n};\n","import React, { useState, useEffect } from 'react';\nimport { base } from 'airtable/base';\n\nconst useFetchData = data => {\n  const [items, setItems] = useState([]);\n  const { table, pageSize, sort } = data;\n\n  useEffect(() => {\n    base(`${table}`)\n      .select({\n        view: 'Grid view',\n        pageSize: pageSize,\n        sort: sort,\n        // filterByFormula: {filterByFormula}\n      })\n      .eachPage(\n        (records, fetchNextPage) => {\n          setItems(records);\n          // fetchNextPage();\n        },\n        function (err) {\n          if (err) {\n            console.error(err);\n            return;\n          }\n        },\n      );\n  }, [pageSize, sort, table]);\n\n  return {\n    items,\n    setItems,\n  };\n};\n\nexport default useFetchData;\n","import { useState, useEffect } from 'react';\nimport { base } from 'airtable/base';\n\nconst useFetchDetailsData = (id) => {\n// console.log('id from useFetchDetailsData:', id);\n\n\n\n  // useEffect(() => { \n  //     base('books').find(`${id}`, function (err, record) {\n  //       if (err) {\n  //         console.error(err);\n  //         return;\n  //       }\n  //       console.log('Retrieved', record.id);\n  //     });\n  // });\n};\n\nexport default useFetchDetailsData;\n\nconst table = base('books');\nexport const getRecordById = async id => {\n  const record = await table.find(id);\n  console.log('getRecordById:',record);\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router';\n\nconst useGetCurrentPage = () => {\n  const [pageType, setPageType] = useState();\n  const location = useLocation();\n\n  const setCurrentPage = () => {\n    const pageTypes = ['home', 'books', 'authors', 'notes', 'quotes'];\n\n    const [currentPage] = pageTypes.filter(page => location.pathname.includes(page));\n    if (pageType !== currentPage) {\n      setPageType(currentPage);\n    }\n    console.log('current page from GetCurrentPage:', currentPage);\n  };\n\n  useEffect(() => {\n    setCurrentPage();\n  });\n\n  return pageType\n};\n\nexport default useGetCurrentPage;\n","import { useState, useEffect } from 'react';\n\nfunction getStorageValue(key, defaultValue) {\n  // getting stored value\n  if (typeof window !== 'undefined') {\n    const saved = localStorage.getItem(key);\n    const initial = saved !== null ? JSON.parse(saved) : defaultValue;\n    return initial;\n  }\n}\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [value, setValue] = useState(() => {\n    return getStorageValue(key, defaultValue);\n  });\n\n  useEffect(() => {\n    // storing input name\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return [value, setValue];\n};\n\nexport default useLocalStorage;\n","import { useState, useEffect } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router';\n\nimport plusIcon from 'assets/icons/plus.svg';\nimport PageContext from 'context';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport NewItemBar from 'components/organisms/NewItemBar';\nimport { GlobalStyle, StyledBackdrop } from 'theme/GlobalStyle';\nimport { theme } from 'theme/theme';\n\nimport {useGetCurrentPage} from 'customHooks'\n\nconst StyledButtonIcon = styled(ButtonIcon)`\n  border-radius: 50%;\n  position: fixed;\n  bottom: 100px;\n  right: 20px;\n  z-index: 999;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n`;\n\nconst MainTemplate = ({ children}) => {\n  const [isNewItemBarVisible, setNewItemBarVisible] = useState(false);\n\n  const pageType = useGetCurrentPage();\n\n  const toggleNewItemBar = () => {\n    setNewItemBarVisible(!isNewItemBarVisible);\n  };\n\n  return (\n    <div>\n      <PageContext.Provider value={pageType}>\n        <GlobalStyle />\n        <ThemeProvider theme={theme}>\n          {children}\n          <NewItemBar isVisible={isNewItemBarVisible} toggleNewItemBar={toggleNewItemBar} />\n          {pageType === 'home' || pageType === 'quotes' || isNewItemBarVisible ? null : (\n            <StyledButtonIcon icon={plusIcon} onClick={toggleNewItemBar} />\n          )}\n          {isNewItemBarVisible && <StyledBackdrop onClick={toggleNewItemBar} />}\n        </ThemeProvider>\n      </PageContext.Provider>\n    </div>\n  );\n};\n\nMainTemplate.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default MainTemplate;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledWrapper = styled.ul`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-evenly;\n  margin: 0;\n  padding: 0;\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: none;\n  }\n`;\n\nconst activeClassName = 'active';\n\nexport const StyledItem = styled(NavLink).attrs(() => ({ activeClassName }))`\n  color: ${({ theme }) => theme.colors.white};\n  font-size: 5rem;\n  list-style: none;\n  text-decoration: none;\n\n  &.${activeClassName} {\n    color: ${({ theme }) => theme.colors.black};\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    font-size: 4.5rem;\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: none;\n  }\n`;","import { NavLink } from 'react-router-dom';\nimport { ImQuotesLeft } from 'react-icons/im';\nimport { FaBars, FaBookOpen, FaUserEdit, FaPencilAlt } from 'react-icons/fa';\n\nimport { StyledWrapper, StyledItem } from './styled';\n\nconst MobileNavigation = () => (\n  <StyledWrapper>\n    <StyledItem as={NavLink} to=\"/home\">\n      <FaBars />\n    </StyledItem>\n    <StyledItem as={NavLink} to=\"/books\">\n      <FaBookOpen />\n    </StyledItem>\n    <StyledItem as={NavLink} to=\"/authors\">\n      <FaUserEdit />\n    </StyledItem>\n    <StyledItem as={NavLink} to=\"/notes\">\n      <FaPencilAlt />\n    </StyledItem>\n    <StyledItem as={NavLink} to=\"/quotes\">\n      <ImQuotesLeft />\n    </StyledItem>\n  </StyledWrapper>\n);\n\nexport default MobileNavigation;","export default __webpack_public_path__ + \"static/media/logoMyBooks.806bb37d.svg\";","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nimport myBooksLogo from 'assets/logo/logoMyBooks.svg';\nimport Button from 'components/atoms/Button/Button';\n\nexport const StyledWrapper = styled.div`\n  display: grid;\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  background-color: ${({ theme }) => theme.colors.lipstick};\n  grid-template-columns: 1fr 260px 120px;\n  align-items: end;\n  height: 80px;\n  padding: 15px 40px;\n  z-index: 9999;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.large}px) {\n    grid-template-columns: 1fr 120px;\n  }\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    grid-template-columns: 1fr;\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    align-items: center;\n  }\n`;\n\nexport const StyledNavigationWrapper = styled.nav`\n  display: grid;\n  grid-template-columns: repeat(5, auto);\n  align-items: end;\n  justify-content: start;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    justify-content: center;\n  }\n`;\n\nexport const StyledLogoLink = styled(NavLink)`\n  display: block;\n  width: 200px;\n  height: 50px;\n  background-position: 50% 50%;\n  background-image: url(${myBooksLogo});\n  background-repeat: no-repeat;\n`;\n\nexport const StyledLinkList = styled.ul`\n  margin: 0;\n  list-style: none;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    padding: 0;\n  }\n`;\n\nconst activeClassName = 'active';\n\nexport const StyledItem = styled(NavLink).attrs(() => ({ activeClassName }))`\n  padding: 0 20px 0 0;\n  list-style: none;\n  text-decoration: none;\n  font-size: 1.7rem;\n  color: ${({ theme }) => theme.colors.white};\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: none;\n  }\n\n  &.${activeClassName} {\n    font-weight: 700;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  font-weight: 600;\n  font-size: 1.6rem;\n  height: 36px;\n  text-transform: uppercase;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: none;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/search.c8fb929d.svg\";","import styled from 'styled-components';\nimport searchIcon from 'assets/icons/search.svg';\nimport { Field } from 'formik';\n\nexport const SearchWrapper = styled.div`\n  @media (max-width: ${({ theme }) => theme.breakpoints.large}px) {\n    display: none;\n  }\n`;\n\nexport const SearchField = styled(Field)`\n  position: relative;\n  color: ${({ theme }) => theme.colors.lipstick};\n  padding: 10px 20px 10px 40px;\n  font-size: 1.2rem;\n  background-image: url(${searchIcon});\n  background-size: 15px;\n  background-position: 15px 50%;\n  background-repeat: no-repeat;\n  transition: 0.1s all;\n  outline: none;\n  border: 1px solid ${({ theme }) => theme.colors.desertStorm};\n  width: 240px;\n  height: 36px;\n  border-radius: 3px;\n\n  &:focus {\n    border: 1px solid ${({ theme }) => theme.colors.lipstick};\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.grey};\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { SearchField, SearchWrapper } from './styled';\nimport Button from 'components/atoms/Button/Button';\nimport { Formik, Form, Field } from 'formik';\n\nconst SearchBox = () => {\n  const [text, setText] = useState([]);\n\n  return (\n <SearchWrapper>\n    <Formik\n      initialValues={{ query: '' }}\n      onSubmit={(values, { setSubmitting }) => {\n        setInput('');\n        otherStuff();\n\n        const book = {\n          records: [\n            {\n              fields: {\n                title: values.title,\n                firstName: values.firstName,\n                lastName: values.lastName,\n              },\n            },\n          ],\n        };\n\n        base('books').find('recEGlb6fFv9fItYx', function (err, record) {\n          if (err) {\n            console.error(err);\n            return;\n          }\n          console.log('Retrieved', record.id);\n        });\n      }}\n    >\n      {formikProps => (\n        <Form>\n          <div>\n            <SearchField\n              name=\"query\"\n              onChange={formikProps.handleChange}\n              value={formikProps.values.query}\n            />\n          </div>\n        </Form>\n      )}\n    </Formik>\n    </SearchWrapper>\n  );\n};\n\nexport default SearchBox;\n","import { NavLink } from 'react-router-dom';\n\nimport {\n  StyledWrapper,\n  StyledNavigationWrapper,\n  StyledLogoLink,\n  StyledLinkList,\n  StyledItem,\n  StyledButton,\n} from './styled';\nimport SearchBox from 'components/atoms/SearchBox';\n\nconst NavigationBar = () => (\n  <StyledWrapper>\n    <StyledNavigationWrapper>\n      <StyledLogoLink to=\"/\" />\n      <StyledLinkList>\n        <StyledItem as={NavLink} to=\"/books\">\n          books\n        </StyledItem>\n        <StyledItem as={NavLink} to=\"/authors\">\n          authors\n        </StyledItem>\n        <StyledItem as={NavLink} to=\"/notes\">\n          notes\n        </StyledItem>\n        <StyledItem as={NavLink} to=\"/quotes\">\n          quotes\n        </StyledItem>\n      </StyledLinkList>\n    </StyledNavigationWrapper>\n    <SearchBox />\n    <StyledButton secondary>log in</StyledButton>\n  </StyledWrapper>\n);\n\nexport default NavigationBar;\n","import styled from 'styled-components';\n\nexport const StyledWrapper = styled.div`\n  padding: 15px 0;\n  color: ${({ theme }) => theme.colors.white};\n  background-color: ${({ theme }) => theme.colors.lipstick};\n  height: 8rem;\n  width: 100vw;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  z-index: 9999;\n`;\n","import styled from 'styled-components';\nimport { FaGithub } from 'react-icons/fa';\nimport Paragraph from 'components/atoms/Paragraph';\n\nconst Wrapper = styled.div`\n  text-align: center;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: none;\n  }\n`;\n\nconst StyledParagraph = styled(Paragraph)`\n  margin: 0;\n  color: ${({ theme }) => theme.colors.white};\n`;\n\nconst Link = styled.a`\n  color: ${({ theme }) => theme.colors.white};\n  transition: color 0.3s;\n  margin: 0;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: none;\n  }\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.black};\n  }\n`;\nconst List = styled.ul`\n  margin: 0;\n  padding: 0;\n  display: inline-flex;\n  gap: 10px;\n`;\n\nconst Item = styled.li`\n  list-style: none;\n`;\n\nconst styleIcon = Icon => styled(Icon)`\n  font-size: 3rem;\n`;\n\nexport const ContactMe = () => {\n  const contact = [\n    {\n      name: 'github',\n      url: 'https://github.com/patrycja-i-lesniak',\n      Icon: styleIcon(FaGithub),\n    },\n\n    // {\n    //   name: 'email',\n    //   url: 'mailto: patrycja.lesniak@gmail.com',\n    //   Icon: styleIcon(MdAlternateEmail),\n    // },\n  ];\n\n  return (\n    <Wrapper>\n      <StyledParagraph>© 2021 | Coded by Patrycja Leśniak</StyledParagraph>\n      <List>\n        {contact.map(({ name, url, Icon }) => (\n          <Item key={name}>\n            <Link href={url} title={name} target=\"_blank\" rel=\"noreferrer\">\n              <Icon />\n            </Link>\n          </Item>\n        ))}\n      </List>\n    </Wrapper>\n  );\n};\n","import { StyledWrapper} from './styled';\nimport { MobileNavigation } from 'components/organisms/Navigation';\nimport { ContactMe } from './ContactMe';\n\nconst FooterNavigation = () => {\n  return (\n    <StyledWrapper>\n      <ContactMe />\n      <MobileNavigation />\n    </StyledWrapper>\n  );\n};\n\nexport default FooterNavigation;\n","import PropTypes from 'prop-types';\nimport { NavigationBar } from 'components/organisms/Navigation';\nimport { FooterNavigation } from 'components/organisms/Navigation';\nimport withContext from 'hoc/withContext';\n\nconst UserPageTemplate = ({ children, pageContext }) => (\n  <>\n    <NavigationBar pageContext={pageContext} />\n    {children}\n    <FooterNavigation />\n  </>\n);\n\nUserPageTemplate.propTypes = {\n  children: PropTypes.object,\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'notes', 'quotes']),\n};\n\nUserPageTemplate.defaultProps = {\n  pageContext: 'home',\n};\n\nexport default withContext(UserPageTemplate);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1080px;\n  max-width: calc(100% - 2 * 20px);\n  margin: 100px auto;\n  padding-bottom: 80px;\n`;\n","export default __webpack_public_path__ + \"static/media/bookIcon.be9287dd.svg\";","export default __webpack_public_path__ + \"static/media/book1.69689256.jpg\";","export default __webpack_public_path__ + \"static/media/readingIcon.6c279f8f.svg\";","export default __webpack_public_path__ + \"static/media/book2.dec47e20.jpg\";","export default __webpack_public_path__ + \"static/media/buyIcon.df481aba.svg\";","export default __webpack_public_path__ + \"static/media/book3.6655dd05.jpg\";","import styled from 'styled-components';\n\nimport BookIcon from 'assets/icons/bookIcon.svg';\nimport Book1 from 'assets/images/book1.jpg';\nimport ReadingIcon from 'assets/icons/readingIcon.svg';\nimport Book2 from 'assets/images/book2.jpg';\nimport BuyIcon from 'assets/icons/buyIcon.svg';\nimport Book3 from 'assets/images/book3.jpg';\n\nexport const Header = styled.h1``;\n\nexport const Paragraph = styled.p`\n  line-height: 1.5;\n  font-size: 1.3rem;\n`;\n\nexport const BoxFront = styled.div`\n  ${Header} {\n    font-size: 2.5rem;\n    font-weight: 600;\n    display: inline-block;\n    vertical-align: middle;\n    color: white;\n\n    &:before {\n      display: block;\n      width: 80px;\n      height: 80px;\n      margin: 0 auto 0.7rem;\n      background-size: contain;\n      background-position: center;\n    }\n  }\n`;\nexport const BoxBack = styled.div``;\nexport const BoxText = styled.div``;\n\nexport const Article = styled.div`\n  width: 100%;\n  height: 450px;\n  color: #fff;\n  perspective: 1200px;\n  position: relative;\n  text-align: center;\n  display: flex;\n  flex-shrink: 1;\n\n  ${BoxFront}, ${BoxBack} {\n    transition: transform 1s cubic-bezier(0.4, 0.2, 0.2, 1);\n    backface-visibility: hidden;\n    overflow: hidden;\n    position: relative;\n    display: flex;\n\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n  }\n\n  ${BoxFront} {\n    position: absolute;\n    z-index: 2;\n    /* width: 100%;\n    height: 100%; */\n    top: 0;\n    left: 0;\n    transform: rotateY(0deg);\n    background-size: cover;\n    background-position: center;\n    background-color: hsl(0, 0%, 18%);\n    background-blend-mode: overlay;\n\n    ${BoxText} {\n      transform: translate3d(0, 0, 0);\n      opacity: 1;\n    }\n  }\n\n  ${BoxBack} {\n    transform: rotateY(180deg);\n    background: #ae0046;\n    position: relative;\n    z-index: 1;\n\n    ${BoxText} {\n      padding: 0 1.7rem;\n      transform: translate3d(80%, 0, 0);\n    }\n  }\n\n  ${BoxText} {\n    transition: transform 0.75s cubic-bezier(0.4, 0.2, 0.2, 1) opacity 0.5s linear;\n    opacity: 0;\n  }\n\n  &:hover {\n    ${BoxFront} {\n      transform: rotateY(-180deg);\n\n      ${BoxText} {\n        transform: translate3d(-200%, 0, 0);\n        opacity: 0;\n      }\n    }\n\n    ${BoxBack} {\n      transform: rotateY(0deg);\n\n      ${BoxText} {\n        transform: translate3d(0, 0, 0);\n        opacity: 1;\n      }\n    }\n  }\n\n  &:nth-child(1) {\n    ${BoxFront} {\n      background-image: url(${Book1});\n\n      ${Header}:before {\n        background-image: url(${BookIcon});\n      }\n    }\n  }\n\n  &:nth-child(2) {\n    ${BoxFront} {\n      background-image: url(${Book2});\n      ${Header}:before {\n        background-image: url(${ReadingIcon});\n      }\n    }\n  }\n\n  &:nth-child(3) {\n    ${BoxFront} {\n      background-image: url(${Book3});\n      ${Header}:before {\n        background-image: url(${BuyIcon});\n      }\n    }\n  }\n`;\n","// import styles from 'components/atoms/Box/Box.module.scss';\nimport PropTypes from 'prop-types';\n\nimport { Header, Paragraph, Article, BoxFront, BoxBack, BoxText } from './styled';\n\nconst Box = ({ header, content }) => (\n  <Article>\n    <BoxFront>\n      <BoxText>\n        <Header>{header}</Header>\n      </BoxText>\n    </BoxFront>\n    <BoxBack>\n      <BoxText>\n        <Paragraph>{content}</Paragraph>\n      </BoxText>\n    </BoxBack>\n  </Article>\n\n  //  <article className={styles.article}>\n  //   <div className={styles.boxFront}>\n  //     <div className={styles.text}>\n  //       <h1>{header}</h1>\n  //     </div>\n  //   </div>\n  //   <div className={styles.boxBack}>\n  //     <div className={styles.text}>\n  //       <p>{content}</p>\n  //     </div>\n  //   </div>\n  // </article>\n);\n\nBox.propTypes = {\n  header: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nexport default Box;\n","import styled from 'styled-components';\nimport Box from \"components/atoms/Box\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  gap: 20px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n   flex-wrap: wrap;\n  }\n`;\n\nconst RotaryBox = () => (\n  <>\n    <Wrapper>\n      <Box\n        header=\"I read\"\n        content=\"Lorem, ipsum dolor sit amet consectetur adipisicing elit.Molestias aut, repellat ipsum facere voluptate dicta obcaecati deserunt nobis suscipit eaque?\"\n      />\n      <Box\n        header=\"Want to read\"\n        content=\"Lorem, ipsum dolor sit amet consectetur adipisicing elit.Molestias aut, repellat ipsum facere voluptate dicta obcaecati deserunt nobis suscipit eaque?\"\n      />\n      <Box\n       header=\"I want to buy\"\n        content=\"Lorem, ipsum dolor sit amet consectetur adipisicing elit.Molestias aut, repellat ipsum facere voluptate dicta obcaecati deserunt nobis suscipit eaque?\"\n      />\n    </Wrapper>\n  </>\n);\n\nexport default RotaryBox;\n\n","export default __webpack_public_path__ + \"static/media/background.06d094c3.jpg\";","import styled, {css} from 'styled-components';\nimport Button from 'components/atoms/Button/Button'\nimport background from 'assets/images/background.jpg';\n\nexport const QuoteWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 300px;\n  margin: 120px auto 50px;\n  padding: 50px;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadow};\n  position: relative;\n  justify-content: center;\n  background: linear-gradient(-45deg, rgba(174, 0, 70, 0.9), rgba(0, 0, 0, 0.7)),\n    url(${background}) center center / cover no-repeat;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    padding: 30px 20px;\n    margin: 60px auto 40px;\n  }\n`;\nexport const QuoteSource = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  font-size: 1rem;\n  font-style: italic;\n  padding: 20px 50px 0 0;\n  gap: 10px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    padding: 20px 30px 40px 0;\n    gap: 0;\n  }\n`;\n\nexport const StyledQuote = styled.h2`\n  color: ${({ theme }) => theme.colors.white};\n  line-height: 1.3;\n  margin: 0;\n  text-align: center;\n  font-family: 'Caveat', cursive;\n  font-size: 2.7rem;\n  font-weight: 200;\n\n  ${({ secondary }) =>\n    secondary &&\n    css`\n      font-size: 2.2rem;\n      line-height:1;\n\n    `}\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    padding: 0 0 10px;\n    margin: 0;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  position: absolute;\n  font-weight: 600;\n  left: 50px;\n  bottom: 50px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    left: 20px;\n    bottom: 20px;\n  }\n`;\n\n","import React, { useState, useEffect } from 'react';\n\nimport api from 'api';\n// import Button from 'components/atoms/Button/Button';\n\nimport { QuoteWrapper, QuoteSource, StyledQuote, StyledButton } from './styled.js';\n\nconst QuotesBox = () => {\n  const [quotes, setQuotes] = useState({\n    fields: {\n      content: '',\n      author: '',\n      title: '',\n    },\n  });\n\n  const getQuote = async () => {\n    const data = await api.get('/quotes');\n    let randomNumber = Math.floor(Math.random() * data.records.length);\n    setQuotes(data.records[randomNumber]);\n  };\n\n  useEffect(() => {\n    getQuote();\n    return () => {\n      setQuotes();\n    };\n  }, []);\n\n  return (\n    <QuoteWrapper>\n      <StyledQuote>{quotes.fields.quote}</StyledQuote>\n      <QuoteSource>\n        <StyledQuote secondary>{quotes.fields.title}</StyledQuote>\n        <StyledQuote secondary>{quotes.fields.author}</StyledQuote>\n      </QuoteSource>\n      <StyledButton onClick={getQuote}>Get new quote</StyledButton>\n    </QuoteWrapper>\n  );\n};\n\nexport default QuotesBox;\n","export const capitalizeFirstLetter = string => {\n  const firstLetter = string.charAt(0).toUpperCase();\n  const restString = string.slice(1).toLowerCase();\n\n  return `${firstLetter}${restString}`;\n};\n","import styled, { css } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport UserPageTemplate from './UserPageTemplate';\nimport Header from 'components/atoms/Header/Header';\nimport { Container } from 'components/atoms/Container';\nimport withContext from 'hoc/withContext';\nimport RotaryBox from 'components/molecules/RotaryBox/RotaryBox';\nimport QuotesBox from 'components/organisms/QuotesBox';\nimport { capitalizeFirstLetter } from 'helpers/capitalizeFirstLetter';\n\nconst StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 200px);\n  grid-gap: 2rem;\n  margin: 4rem auto 4rem ;\n  justify-items: center;\n  justify-content: center;\n  position: relative;\n\n  ${({ notes }) =>\n    notes &&\n    css`\n      grid-template-columns: repeat(auto-fill, 340px);\n    `}\n\n  ${({ quotes }) =>\n    quotes &&\n    css`\n      grid-template-columns: 1fr;\n    `}\n`;\n\nconst GridTemplate = ({ children, pageContext }) => (\n  <UserPageTemplate>\n    <Container>\n      {pageContext === 'home' ? (\n        <>\n          <QuotesBox />\n          <RotaryBox />\n\n          <Header>Last added books</Header>\n        </>\n      ) : (\n        <Header>{capitalizeFirstLetter(pageContext)}</Header>\n      )}\n\n      {pageContext === 'notes' ? (\n        <StyledGrid notes>{children}</StyledGrid>\n      ) : pageContext === 'quotes' ? (\n        <StyledGrid quotes>{children}</StyledGrid>\n      ) : (\n        <StyledGrid>{children}</StyledGrid>\n      )}\n    </Container>\n  </UserPageTemplate>\n);\n\nGridTemplate.propTypes = {\n  children: PropTypes.node,\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'notes', 'quotes']),\n};\n\nGridTemplate.defaultProps = {\n  pageContext: 'home',\n};\n\nexport default withContext(GridTemplate);\n","import styled, { css } from \"styled-components\";\n\nexport const StyledArrow = styled.svg`\n    ${({ showMore }) => showMore && css`\n        transform: rotate(180deg);  \n    `}\n`;","import { StyledArrow } from \"./styled\";\nimport PropTypes from 'prop-types';\n\nexport const Arrow = ({ showMore }) => (\n    <StyledArrow\n        showMore={showMore}\n        width=\"12\"\n        height=\"12\"\n        fill=\"currentColor\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"M979.0208 301.99808l-47.104-47.04768-419.98848 419.9424-419.89632-419.9424-47.0528 47.0528 419.89632 419.93728v0.00512l47.09888 47.104 47.04256-47.0528z\"\n        />\n    </StyledArrow>\n);\n\nArrow.propTypes = {\n    showMore: PropTypes.bool,\n}\n\n\n\n\n\n","import styled, { css } from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-content: space-between;\n  width: 200px;\n  padding: 20px;\n  margin: 0;\n  transition: transform 0.3s;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadow};\n  background-color: ${({ theme }) => theme.colors.white};\n  position: relative;\n\n  &:hover {\n    transform: scale(1.03);\n    background-color: ${({ theme }) => theme.colors.lipstick};\n  }\n\n  ${({ notes }) =>\n    notes &&\n    css`\n      width: 340px;\n      &:hover {\n        background-color: ${({ theme }) => theme.colors.silver};\n      }\n    `}\n`;\n\nexport default Wrapper;","export default __webpack_public_path__ + \"static/media/logoSmallWhite.0a309783.svg\";","export default __webpack_public_path__ + \"static/media/logoSmallPink.dbcd3045.svg\";","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Paragraph from 'components/atoms/Paragraph';\nimport Wrapper from 'components/atoms/Wrapper';\nimport LogoSmallWhite from 'assets/logo/logoSmallWhite.svg';\nimport LogoSmallPink from 'assets/logo/logoSmallPink.svg';\n\nexport const StyledImage = styled.img`\n  width: 165px;\n  height: 225px;\n  background-color: ${({ theme }) => theme.colors.silver};\n  background-image: url(${LogoSmallWhite});\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n  background-size: 45%;\n  margin-bottom: 10px;\n  cursor: pointer;\n\n  ${Wrapper}:hover & {\n    background-image: url(${LogoSmallPink});\n  }\n`;\n\nexport const StyledTitle = styled.h1`\n  color: ${({ theme }) => theme.colors.black};\n  font-size: 1.6rem;\n  font-weight: ${({ theme }) => theme.font.bold};\n  text-align: center;\n  margin-top: 10px 0 0;\n\n  ${Wrapper}:hover & {\n    color: white;\n  }\n`;\n\nexport const StyledAuthor = styled.h2`\n  color: ${({ theme }) => theme.colors.black};\n  font-size: 1.4rem;\n  font-weight: ${({ theme }) => theme.font.regular};\n  margin: 0;\n  text-align: center;\n\n  ${Wrapper}:hover & {\n    color: white;\n  }\n`;\n\nexport const StyledParagraph = styled(Paragraph)`\n  font-size: 1rem;\n  color: ${({ theme }) => theme.colors.grey};\n  \n  ${Wrapper}:hover & {\n    color: white;\n  }\n`;\n\nexport const InnerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  ${Wrapper}:hover & {\n    background-color: ${({ theme }) => theme.colors.lipstick};\n  }\n`;\n\nexport const StyledDate = styled.p``;\n\nexport const ShowMore = styled.button`\n  display: block;\n  border: none;\n  background: none;\n  padding: 2px;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 500;\n  margin: 0 auto 0;\n  color: ${({ theme }) => theme.colors.lipstick};\n  padding: 10px;\n\n  ${Wrapper}:hover & {\n    color: white;\n  }\n`;\n\nexport const ButtonContentWrapper = styled.span`\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-gap: 6px;\n  align-items: center;\n`;\n\nexport const StyledLink = styled(Link)`\ntext-decoration: none;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Arrow } from 'components/atoms/Arrow';\nimport {\n  StyledImage,\n  StyledTitle,\n  StyledAuthor,\n  InnerWrapper,\n  StyledDate,\n  ButtonContentWrapper,\n  ShowMore,\n  StyledLink,\n} from './styled';\nimport Wrapper from 'components/atoms/Wrapper';\nimport withContext from 'hoc/withContext';\n\nconst CardSmall = ({ item, pageContext }) => {\n  const [showMore, setShowMore] = useState(false);\n  return (\n    <>\n      <Wrapper>\n        <InnerWrapper>\n          {(pageContext === 'home' || pageContext === 'books') && (\n            <>\n              <StyledLink to={`books/${item.id}`}>\n                <StyledImage src={item.fields.imageUrl} />\n                <StyledTitle>{item.fields.title}</StyledTitle>\n                <StyledAuthor>\n                  {item.fields.firstName} {item.fields.lastName}\n                </StyledAuthor>\n              </StyledLink>\n            </>\n          )}\n          {pageContext === 'authors' && (\n            <>\n              <StyledLink to={`authors/${item.id}`}>\n                <StyledImage src={item.fields.imageUrl} />\n              </StyledLink>\n              <StyledTitle>\n                {item.fields.firstName} {item.fields.lastName}\n              </StyledTitle>\n            </>\n          )}\n        </InnerWrapper>\n      </Wrapper>\n      {/* </>\n\n\n<> */}\n      {pageContext === 'notes' && (\n        <Wrapper notes>\n          <InnerWrapper>\n            <>\n              <StyledImage src={item.fields.imageUrl} />\n              <StyledTitle>{item.fields.title} </StyledTitle>\n              <StyledDate>{item.fields.date}</StyledDate>\n              {item.fields.content.length > 300 ? (\n                <>\n                  {showMore ? item.fields.content : `${item.fields.content.slice(0, 300)}...`}\n                  <ShowMore onClick={() => setShowMore(!showMore)}>\n                    <ButtonContentWrapper>\n                      <span>\n                        {showMore ? 'Show less' : 'Show more'}\n                        <Arrow showMore={showMore} />\n                      </span>\n                    </ButtonContentWrapper>\n                  </ShowMore>\n                </>\n              ) : (\n                <>{item.fields.content}</>\n              )}\n            </>\n          </InnerWrapper>\n        </Wrapper>\n      )}\n    </>\n  );\n};\n\nCardSmall.propTypes = {\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'notes', 'quotes']),\n  item: PropTypes.object,\n  handleDelete: PropTypes.func,\n};\n\nCardSmall.defaultProps = {\n  item: {},\n};\n\nexport default withContext(CardSmall);\n","import * as Yup from 'yup';\n\nYup.addMethod(Yup.date, 'stripEmptySDate', function () {\n  return this.transform(value => (value === '' ? undefined : value));\n});\n\nexport const validationSchema = Yup.object().shape({\n  quote: Yup.string().required('Required field is empty'),\n  author: Yup.string(),\n  title: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!'),\n  checked: Yup.boolean().oneOf([false, true]),\n});\n","export const initialValues = {\n  quote: '',\n  author: '',\n  title: '',\n  checked: false,\n};\n","import styled, { css } from 'styled-components';\nimport Button from 'components/atoms/Button/Button.js';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon.js';\n\nexport const Top = styled.div`\n  height: 0.7rem;\n  background-color: ${({ theme }) => theme.colors.lipstick};\n`;\nexport const StyledWrapper = styled.div`\n  display: grid;\n  padding-bottom: 2rem;\n  border-radius: 1rem;\n  overflow: hidden;\n  background-color: ${({ theme }) => theme.colors.lightGrey};\n  box-shadow: ${({ theme }) => theme.shadows.quoteBoxShadow};\n  &:hover {\n    ${Top} {\n      background-color: ${({ theme }) => theme.colors.lightLipstick};\n    }\n  }\n`;\n\nexport const QuoteWrapper = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr;\n`;\n\nexport const Quote = styled.p`\n  padding: 0 1.5rem 1rem;\n  margin: 1rem 1rem;\n  font-sie: 2rem;\n  line-height: 1.5;\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.mainShaft};\n`;\n\nexport const Text = styled.h1`\n  font-size: 1.3rem;\n  color: ${({ theme }) => theme.colors.lipstick};\n  padding: 0 1.5rem;\n  text-align: right;\n  font-weight: 600;\n`;\n\nexport const ButtonSmall = styled.button`\n  width: 50px;\n  height: 30px;\n  margin: 5px 0 5px 20px;\n  border-radius: 0.5rem;\n  font-size: 1.3rem;\n  font-weight: 600;\n  padding: 0.5rem 1rem;\n  color: ${({ theme }) => theme.colors.white};\n  border: 1px solid ${({ theme }) => theme.colors.lipstick};\n  background-color: ${({ theme }) => theme.colors.lipstick};\n  ${({ secondary }) =>\n    secondary &&\n    css`\n      width: 70px;\n      border: 1px solid ${({ theme }) => theme.colors.grey};\n      background-color: ${({ theme }) => theme.colors.grey};\n    `};\n`;\n\nexport const StyledButtonIcon = styled(ButtonIcon)`\n  position: absolute;\n  top: 20px;\n  right: 60px;\n  width: 50px;\n  border-radius: 50%;\n  color: ${({ theme }) => theme.colors.white};\n  border: 1px solid ${({ theme }) => theme.colors.lipstick};\n  background: ${({ theme }) => theme.colors.lipstick};\n`;\n\nexport const Wrapper = styled.div`\n  display: grid;\n  justify-content: end;\n  padding: 10px 10px 0 0;\n  margin: 0;\n`;\n\nexport const Checkbox = styled.input.attrs({ type: 'checkbox' })`\n  width: 3rem;\n  height: 3rem;\n`;\n\nexport const Label = styled.label`\n  width: 3rem;\n  height: 3rem;\n  font-size: 3rem;\n  color: ${({ theme }) => theme.colors.lipstick};\n`;\n\nexport const Icon = styled.div`\n`;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Formik, Form, Field } from 'formik';\n\nimport api from 'api';\nimport { validationSchema } from './validationSchema.js';\nimport { initialValues } from './initialValues.js';\nimport { StyledWrapper, Top, Text, Quote, ButtonSmall, QuoteWrapper } from './styled.js';\nimport { AiFillHeart, AiOutlineHeart } from 'react-icons/ai';\nimport EditQuotePopup from 'components/molecules/Popups/EditQuotePopup/index.js';\n\nconst Label = styled.label`\n  width: 3rem;\n  height: 3rem;\n  font-size: 3rem;\n  color: ${({ theme }) => theme.colors.lipstick};\n  display: block;\n`;\n\nconst Checkbox = styled.input.attrs({ type: 'submit' })`\n  width: 3rem;\n  height: 3rem;\n  display: none;\n`;\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n  justify-content: center;\n  gap: 1rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    width: 100%;\n  }\n`;\n\nconst QuoteCard = ({ item }) => {\n  const [checked, setChecked] = useState(false);\n\n  const toggleCheckbox = () => {\n    setChecked(!checked);\n  };\n\n  // const [isEditPopupOpen, setEditPopupOpen] = useState(true);\n\n  // const toggleEditPopup = () => {\n  //     setEditPopupOpen(!isEditPopupOpen);\n  //     console.log('Edit popup is open');\n  // };\n\n  // const handleEditQuotePopupClose = () => {\n  //   setEditQuotePopupOpen(false);\n  //   console.log('Close EditQuotePopup');\n  // };\n\n  return (\n    <StyledWrapper>\n      <Top />\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async values => {\n          // handleSuccess();\n          console.log('Values from formik', values);\n\n          const quote = {\n            records: [\n              {\n                fields: {\n                  checked: values.checked,\n                },\n              },\n            ],\n          };\n\n          api\n            .post('/quotes', quote)\n            .then(response => {\n              // setPopup(true);\n              // resetForm();\n              console.log('Response from API in formik', response);\n              console.log('Successfully submitted.');\n            })\n            .catch(err => {\n              // setErrorPopup(true);\n              console.error(err);\n              console.log('The form could not be sent.');\n            });\n        }}\n      >\n        {({ values, handleChange, handleBlur, handleSubmit, handleReset }) => (\n          <StyledForm method=\"POST\" autoComplete=\"off\" onSubmit={handleSubmit}>\n            <Label forHtml=\"checked\">\n              {checked ? <AiFillHeart /> : <AiOutlineHeart type=\"submit\" />}\n              <Checkbox\n                type=\"checkbox\"\n                name=\"checked\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.checked}\n                checked={checked}\n                onClick={toggleCheckbox}\n              />\n            </Label>\n          </StyledForm>\n        )}\n      </Formik>\n      <Quote>{item.fields.quote}</Quote>\n      <QuoteWrapper>\n        <ButtonSmall>edit</ButtonSmall>\n        <Text>{item.fields.title}</Text>\n      </QuoteWrapper>\n      <QuoteWrapper>\n        <ButtonSmall secondary>delete</ButtonSmall>\n        <Text>{item.fields.author}</Text>\n      </QuoteWrapper>\n\n      {/* <EditQuotePopup isVisible={isEditPopupOpen} toggleEditPopup={toggleEditPopup} /> */}\n    </StyledWrapper>\n  );\n};\n\nQuoteCard.propTypes = {\n  item: PropTypes.object,\n};\n\nexport default QuoteCard;\n","import styled, {css} from \"styled-components\";\nimport {Form, Field } from 'formik';\nimport Button from \"components/atoms/Button/Button\";\n\nexport const StyledWrapper = styled.div`\n  transform: translateY(-50%);\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  left: 0;\n  right: 0;\n  top: 50%;\n  margin: 20px auto;\n  width: 400px;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.colors.white};\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n  z-index: 99999;\n  padding: 40px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    max-width: 90%;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n  justify-content: center;\n  gap: 1rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    width: 100%;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  margin: 20px auto 30px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: inline-block;\n    margin: 10px auto 20px;\n  }\n`;\n\nexport const InputField = styled(Field)`\n  color: ${({ theme }) => theme.colors.lipstick};\n  font-size: 1.5rem;\n  border: none;\n  line-height: 2.5;\n  border: 1px solid ${({ theme }) => theme.colors.silver};\n  border-radius: 5px;\n  outline: none;\n  padding: 5px 0 2px 10px;\n  font-weight: bold;\n  height: 4rem;\n\n  ::placeholder {\n    font-size: 1.2rem;\n    color: ${({ theme }) => theme.colors.grey};\n    :focus {\n      color: transparent;\n    }\n  }\n\n  :active {\n    outline: 1px solid ${({ theme }) => theme.colors.lipstick};\n  }\n\n  ${({ textarea }) =>\n    textarea &&\n    css`\n      height: 12rem;\n\n      line-height: 1.5;\n\n      resize: none;\n      outline: none;\n      width: 100%;\n      font-weight: 400;\n    `}\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 1.2rem;\n  color: ${({ theme }) => theme.colors.grey};\n  padding: 3px;\n  background-color: white;\n  display: inline-block;\n  max-width: 120px;\n  margin: 0 0 -20px 10px;\n  z-index: 2;\n`;\n\n\n\n","import { useState } from 'react';\n\nimport { StyledWrapper } from './styled';\nimport styled from 'styled-components';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport api from 'api';\nimport { validationSchema } from 'components/molecules/Card/QuoteCard/validationSchema.js';\nimport { initialValues } from 'components/molecules/Card/QuoteCard/initialValues.js';\nimport RequiredBox from 'components/molecules/RequredBox/RequiredBox';\nimport ErrorPopup from 'components/molecules/Popups/ErrorPopup';\nimport SuccessPopup from 'components/molecules/Popups/SuccessPopup';\nimport { StyledForm, StyledButton, InputField, StyledLabel } from './styled';\n\nimport { AiFillHeart, AiOutlineHeart } from 'react-icons/ai';\n\nexport const Checkbox = styled.input.attrs({ type: 'checkbox' })`\n  width: 3rem;\n  height: 3rem;\n`;\n\nexport const Label = styled.label`\n  width: 3rem;\n  height: 3rem;\n  font-size: 3rem;\n  color: ${({ theme }) => theme.colors.lipstick};\n`;\n\nconst EditQuotePopup = ({isVisible, toggleEditPopup}) => {\n  const [isChecked, setChecked] = useState(false);\n\n  const handleChecked = () => {\n    setChecked(!isChecked);\n  };\n\n  return (\n    <StyledWrapper>\n        <button onClick={toggleEditPopup}>close</button> \n      <p>To jest popup do edycji cytatów</p>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async values => {\n          console.log(values);\n\n          const quote = {\n            records: [\n              {\n                fields: {\n                  quote: values.quote,\n                  title: values.title,\n                  author: values.author,\n                  checked: values.checked,\n                },\n              },\n            ],\n          };\n\n          api\n            .update('/quotes', quote)\n            .then(response => {\n              // setPopup(true);\n              // resetForm();\n              // handleClicked();\n              console.log(response);\n              console.log('Successfully submitted.');\n            })\n            .catch(err => {\n              // setErrorPopup(true);\n              console.error(err);\n              console.log('The form could not be sent.');\n            });\n        }}\n      >\n        {({ values, handleChange, handleBlur, handleSubmit }) => (\n          <Form method=\"POST\" autoComplete=\"off\" onSubmit={handleSubmit}>\n            {/* <>\n              {errorPopup && (\n                <ErrorPopup handlePopupClose={handlePopupClose} handleReset={handleReset} />\n              )}\n              {popup && (\n                <SuccessPopup handlePopupClose={handlePopupClose} handleReset={handleReset} />\n              )}\n            </> */}\n            <>\n              <StyledLabel as=\"label\" htmlFor=\"quote\">\n                quote\n              </StyledLabel>\n              <InputField\n                textarea\n                type=\"text\"\n                name=\"quote\"\n                as=\"textarea\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                values={values.quote}\n              />\n              <ErrorMessage name=\"quote\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            </>\n            <>\n              <StyledLabel as=\"label\" htmlFor=\"title\">\n                title\n              </StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"text\"\n                name=\"title\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.title}\n                autoComplete=\"given-name\"\n              />\n              <ErrorMessage name=\"title\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            </>\n            <>\n              <StyledLabel as=\"label\" htmlFor=\"author\">\n                author\n              </StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"text\"\n                name=\"author\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.author}\n                autoComplete=\"given-name\"\n              />\n\n              <ErrorMessage name=\"author\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            </>\n\n            <Label forHtml=\"checked\" checked={isChecked}>\n              {isChecked ? <AiFillHeart /> : <AiOutlineHeart />}\n            </Label>\n            <Checkbox\n              type=\"checkbox\"\n              name=\"checked\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.checked}\n              checked={isChecked}\n              onClick={handleChecked}\n            />\n          </Form>\n        )}\n      </Formik>\n      <StyledButton type=\"submit\">\n        Update quote\n      </StyledButton>\n    </StyledWrapper>\n  );\n};\n\nexport default EditQuotePopup;\n","import CardSmall from 'components/molecules/Card/CardSmall';\nimport QuoteCard from 'components/molecules/Card/QuoteCard';\nimport { useFetchData } from 'customHooks';\nimport withContext from 'hoc/withContext';\n\nconst GetAllData = ({data, pageContext}) => {\n  const { items } = useFetchData(data);\n\n  console.log('items from GetData:', items);\n\n  return (\n    <>\n      {items &&\n        items.map(item => (\n          <>\n            {pageContext === 'quotes' ? (\n              <QuoteCard item={item} key={item.id} />\n            ) : (\n              <CardSmall item={item} key={item.id} />\n            )}\n          </>\n        ))}\n    </>\n  );\n};\n\nexport default withContext(GetAllData);\n","import styled, { css } from 'styled-components';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport LogoSmallWhite from 'assets/logo/logoSmallWhite.svg';\nimport Header from 'components/atoms/Header/Header';\nimport Button from 'components/atoms/Button/Button';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  min-height: 500px;\n  justify-content: center;\n  margin: 120px auto 50px;\n  padding: 50px;\n  background-color: ${({ theme }) => theme.colors.white};\n  position: relative;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadow};\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    padding: 50px 20px;\n    margin: 80px auto 40px;\n  }\n`;\n\nexport const InnerWrapper = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-rows: auto 1fr;\n  gap: 20px;\n`;\n\nexport const UpperContainer = styled.div`\n  display: grid;\n  align-items: start;\n  grid-template-columns: auto 1fr auto;\n  line-height: 2;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.large}px) {\n    grid-template-columns: auto 1fr;\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    grid-template-columns: 1fr;\n    justify-items: center;\n  }\n`;\n\nexport const LowerContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  line-height: 1.5;\n`;\n\nexport const Details = styled.div``;\n\nexport const StyledImage = styled.img`\n  width: 250px;\n  height: 350px;\n  background-color: ${({ theme }) => theme.colors.silver};\n  background-image: url(${LogoSmallWhite});\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n  background-size: 45%;\n  margin-right: 40px;\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    width: 200px;\n    height: 280px;\n  }\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    align-self: center;\n    width: 250px;\n    height: 350px;\n    margin: 0 0 20px;\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    max-width: 150px;\n    height: 200px;\n  }\n`;\n\nexport const StyledTitle = styled(Header)`\n  font-size: 3rem;\n  text-align: left;\n  margin: 0;\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    text-align: center;\n  }\n`;\n\nexport const StyledAuthor = styled.h2`\n  color: ${({ theme }) => theme.colors.black};\n  font-size: 2.5rem;\n  font-weight: ${({ theme }) => theme.font.bold};\n  text-align: left;\n  color: ${({ theme }) => theme.colors.black};\n  margin: 0;\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    text-align: center;\n  }\n`;\n\nexport const StyledParagraph = styled.p`\n  font-size: 1rem;\n  color: ${({ theme }) => theme.colors.grey};\n`;\n\nexport const DataWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 200px auto;\n  align-items: start;\n  margin-top: 10px;\n  column-gap: 20px;\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    grid-template-columns: auto;\n  }\n`;\n\nexport const Label = styled.p`\n  text-transform: uppercase;\n\n  font-size: 1.5rem;\n  margin: 0;\n  padding: 0;\n  color: ${({ theme }) => theme.colors.grey};\n  @media (max-width: ${({ theme }) => theme.breakpoints.large}px) {\n    display: none;\n  }\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    display: block;\n  }\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    display: none;\n  }\n`;\n\nexport const StyledData = styled.p`\n  font-size: 1.5rem;\n  margin: 0;\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    text-align: center;\n  }\n`;\n\nexport const ShowMore = styled.button`\n  display: block;\n  border: none;\n  background: none;\n  padding: 2px;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: ${({ theme }) => theme.font.bold};\n  margin: 0 auto 0;\n  color: ${({ theme }) => theme.colors.lipstick};\n  padding-top: 20px;\n\n  /* ${Wrapper}:hover & {\n    color: grey;\n  } */\n`;\n\nexport const ButtonContentWrapper = styled.span`\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-gap: 6px;\n  align-items: center;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    flex-direction: row;\n    justify-content: center;\n    margin-top: 20px;\n  }\n`;\n\nexport const Icon = styled(ButtonIcon)`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n`;\n\nexport const DeleteIcon = styled(ButtonIcon)`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n`;\n\n\nexport const Status = styled(Button)`\n  background-color: unset;\n  color: black;\n  border: none;\n  display: flex;\n  width: 50px;\n  height: 50px;\n  margin: 50px 0 0;\n  border-radius: 50%;\n  justify-content: center;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    margin: 0;\n  }\n\n  ${({ read }) =>\n    read &&\n    css`\n      background-color: ${({ theme }) => theme.colors.japaneseLaurel};\n    `};\n\n  ${({ borrowed }) =>\n    borrowed &&\n    css`\n      background-color: ${({ theme }) => theme.colors.toreaBay};\n    `}\n\n  ${({ toRead }) =>\n    toRead &&\n    css`\n      background-color: ${({ theme }) => theme.colors.torchRed};\n    `};\n\n  ${({ toBuy }) =>\n    toBuy &&\n    css`\n      background-color: ${({ theme }) => theme.colors.vividViolet};\n    `};\n\n  ${({ inProgress }) =>\n    inProgress &&\n    css`\n      background-color: ${({ theme }) => theme.colors.webOrange};\n    `};\n`;\n\nexport const StatusParagraph = styled.p`\n  margin: -15px 0 50px;\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.grey};\n`;\n\nexport const ExtraWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    grid-template-columns: unset;\n    grid-template-rows: 1fr auto;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/trash.3dbc8c55.svg\";","export default __webpack_public_path__ + \"static/media/lcLogo.d8002aa1.svg\";","export default __webpack_public_path__ + \"static/media/link.99466d54.svg\";","import styled from 'styled-components';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\n\nexport const StyledWrapper = styled.div`\n  transform: translateY(-50%);\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  left: 0;\n  right: 0;\n  top: 50%;\n  margin: 0 auto;\n  width: 70vw;\n  max-width: 500px;\n  height: 50vh;\n  min-height: 100px;\n  max-height: 250px;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.colors.white};\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n  z-index: 99999;\n  padding: 40px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    width: 90%;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 30px;\n  justify-content: center;\n  padding: 10px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    gap: 20px;\n  }\n`;\n\nexport const StyledParagraph = styled.p`\n  font-size: 2rem;\n  color: ${({ theme }) => theme.colors.grey};\n  text-align: center;\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    font-size: 1.7rem;\n  }\n`;\n\nexport const CloseButton = styled(ButtonIcon)`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  z-index: 99999;\n  width: 32px;\n  height: 32px;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n`;\n","import PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nimport Button from 'components/atoms/Button/Button';\nimport closeIcon from 'assets/icons/close.svg';\nimport { StyledWrapper, ButtonWrapper, StyledParagraph, CloseButton } from './styled';\nimport { base } from 'airtable/base';\nimport trashIcon from 'assets/icons/trash.svg';\nimport withContext from 'hoc/withContext';\n\nconst ConfirmationPopup = ({ handleDeleteFalse, itemId, pageContext }) => {\n  const DeleteButton = () => {\n    const history = useHistory();\n    const deleteItem = () => {\n      base(pageContext).destroy(itemId, function (err, deleteItem) {\n        if (err) {\n          console.error(err);\n\n          return;\n        }\n        return console.log('Deleted record with id', itemId), history.goBack();\n      });\n    };\n    return (\n      <div className=\"position-absolute\">\n        <Button type=\"submit\" icon={trashIcon} onClick={deleteItem}>\n          Yes\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <StyledWrapper>\n      <StyledParagraph>Do you want to delete this item?</StyledParagraph>\n      <CloseButton icon={closeIcon} onClick={handleDeleteFalse} />\n      <ButtonWrapper>\n        <DeleteButton>Yes</DeleteButton>\n        <Button secondary onClick={handleDeleteFalse}>\n          No\n        </Button>\n      </ButtonWrapper>\n    </StyledWrapper>\n  );\n};\n\nConfirmationPopup.propTypes = {\n  handleDeleteTrue: PropTypes.func,\n  handleDeleteFalse: PropTypes.func,\n  itemId: PropTypes.string.isRequired,\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'note', 'quotes']),\n};\n\nexport default withContext(ConfirmationPopup);\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyledImage,\n  StyledTitle,\n  StyledAuthor,\n  InnerWrapper,\n  Icon,\n  Wrapper,\n  UpperContainer,\n  LowerContainer,\n  DataWrapper,\n  Label,\n  StyledData,\n  Details,\n  ButtonsWrapper,\n  Status,\n  ExtraWrapper,\n  ShowMore,\n  ButtonContentWrapper,\n  StatusParagraph,\n} from './styled';\nimport trashIcon from 'assets/icons/trash.svg';\nimport lcLogo from 'assets/icons/lcLogo.svg';\nimport linkIcon from 'assets/icons/link.svg';\nimport { Arrow } from 'components/atoms/Arrow';\nimport ConfirmationPopup from 'components/molecules/Popups/ConfirmationPopup';\nimport withContext from 'hoc/withContext';\n\nconst CardBig = ({ item, pageContext }) => {\n  const [showMore, setShowMore] = useState(false);\n  const [popup, setPopup] = useState({\n    show: false,\n    id: null,\n  });\n\n  const itemId = item.id;\n\n  const handleDelete = id => {\n    setPopup({\n      show: true,\n      id,\n    });\n    console.log('open popup');\n  };\n\n  const handleDeleteFalse = () => {\n    setPopup({\n      show: false,\n      id: null,\n    });\n    console.log('Close popup');\n  };\n\n  const {\n    status,\n    imageUrl,\n    firstName,\n    lastName,\n    title,\n    series,\n    date,\n    isbn,\n    numberOfPages,\n    translation,\n    publishing,\n    LClink,\n    oficialWebsite,\n    content,\n  } = item;\n  console.log(item)\n\n  return (\n    <>\n      <Wrapper>\n        <InnerWrapper>\n          <UpperContainer>\n            <StyledImage src={imageUrl} />\n            <ExtraWrapper>\n              <div>\n                {pageContext === 'authors' ? (\n                  <>\n                    <StyledTitle>\n                      {firstName} {lastName}\n                    </StyledTitle>\n                  </>\n                ) : (\n                  <StyledTitle>{title}</StyledTitle>\n                )}\n                {pageContext === 'authors' ? null : (\n                  <StyledAuthor>\n                    {firstName} {lastName}\n                  </StyledAuthor>\n                )}\n                {pageContext === 'books' && (\n                  <Details>\n                    <DataWrapper>\n                      <Label>series:</Label>\n                      <StyledData>{series}</StyledData>\n                    </DataWrapper>\n\n                    <DataWrapper>\n                      <Label>date of publication:</Label>\n                      <StyledData>{date}</StyledData>\n                    </DataWrapper>\n\n                    <DataWrapper>\n                      <Label>ISBN:</Label>\n                      <StyledData>{isbn}</StyledData>\n                    </DataWrapper>\n\n                    <DataWrapper>\n                      <Label>pages:</Label>\n                      <StyledData>{numberOfPages}</StyledData>\n                    </DataWrapper>\n\n                    <DataWrapper>\n                      <Label>translate:</Label>\n                      <StyledData>{translation}</StyledData>\n                    </DataWrapper>\n\n                    <DataWrapper>\n                      <Label>publisher:</Label>\n                      <StyledData>{publishing}</StyledData>\n                    </DataWrapper>\n                  </Details>\n                )}\n              </div>\n              <div>\n                <ButtonsWrapper>\n                  {status && status === 'to read' && <Status toRead />}\n                  {status && status === 'read' && <Status read />}\n                  {status && status === 'to buy' && <Status toBuy />}\n                  {status && status === 'borrowed' && <Status borrowed />}\n                  {status && status === 'in progress' && <Status inProgress />}\n                  <StatusParagraph>{status}</StatusParagraph>\n\n                  <Icon target=\"_blank\" rel=\"noreferrer\" href={LClink} icon={lcLogo} />\n                  {pageContext === 'authors' && oficialWebsite ? (\n                    <Icon target=\"_blank\" rel=\"noreferrer\" href={oficialWebsite} icon={linkIcon} />\n                  ) : null}\n                  <Icon icon={trashIcon} onClick={handleDelete} />\n                </ButtonsWrapper>\n              </div>\n            </ExtraWrapper>\n          </UpperContainer>\n          {content && content.length > 400 ? (\n            <LowerContainer>\n              {showMore ? content : `${content.slice(0, 400)}...`}\n              <ShowMore onClick={() => setShowMore(!showMore)}>\n                <ButtonContentWrapper>\n                  <span>\n                    {showMore ? 'Show less' : 'Show more'}\n                    <Arrow showMore={showMore} />\n                  </span>\n                </ButtonContentWrapper>\n              </ShowMore>\n            </LowerContainer>\n          ) : (\n            <LowerContainer>{content}</LowerContainer>\n          )}\n        </InnerWrapper>\n        {popup.show && (\n          <ConfirmationPopup handleDeleteFalse={handleDeleteFalse} item={item} itemId={itemId} />\n        )}\n      </Wrapper>\n    </>\n  );\n};\n\nCardBig.propTypes = {\n  item: PropTypes.object,\n  author: PropTypes.object,\n  note: PropTypes.object,\n  handleDelete: PropTypes.func,\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'notes', 'quotes']),\n};\n\nCardBig.defaultProps = {\n  book: {},\n  author: {},\n  note: {},\n};\n\nexport default withContext(CardBig);\n","import GridTemplate from 'templates/GridTemplate';\nimport { GetAllData } from 'GetData';\n\nconst Authors = () => {\n  const data = {\n    table: 'authors',\n    pageSize: 12,\n    sort: [{ field: 'lastName' }],\n  };\n\n  return (\n    <GridTemplate pageType=\"authors\">\n      <GetAllData data={data} />\n    </GridTemplate>\n  );\n};\n\nexport default Authors;\n","import GridTemplate from 'templates/GridTemplate';\nimport { GetAllData } from 'GetData';\n\nconst Notes = () => {\n  const data = {\n    table: 'notes',\n    pageSize: 6,\n    sort: [{ field: 'date', direction: 'asc' }],\n  };\n\n  return (\n    <GridTemplate pageType=\"notes\">\n      <GetAllData data={data} />\n    </GridTemplate>\n  );\n};\n\nexport default Notes;\n","import GridTemplate from 'templates/GridTemplate';\nimport { GetAllData } from 'GetData';\n\nconst Books = () => {\n  const data = {\n    table: 'books',\n    pageSize: 50,\n    sort: [{ field: 'title', direction: 'asc' }],\n  };\n\n  return (\n    <GridTemplate pageType=\"books\">\n      <GetAllData data={data} />\n    </GridTemplate>\n  );\n};\n\nexport default Books;\n","import GridTemplate from 'templates/GridTemplate';\nimport { GetAllData } from 'GetData';\n\nconst Home = () => {\n  const data = {\n    table: 'books',\n    pageSize: 5,\n    sort: [{ field: 'title', direction: 'asc' }],\n  };\n\n  return (\n    <GridTemplate pageType=\"home\">\n      <GetAllData data={data} />\n    </GridTemplate>\n  );\n};\n\nexport default Home;\n","import * as Yup from 'yup';\n\nYup.addMethod(Yup.date, 'stripEmptySDate', function () {\n  return this.transform(value => (value === '' ? undefined : value));\n});\n\nexport const validationSchema = Yup.object().shape({\n  quote: Yup.string().required('Required field is empty'),\n  author: Yup.string().min(2, 'Too Short!'),\n  title: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!'),\n  checked:  Yup.boolean().oneOf([true, false]),\n});\n","import styled, { css } from 'styled-components';\nimport { Form, Field } from 'formik';\nimport Button from 'components/atoms/Button/Button';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n  justify-content: center;\n  gap: 1rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    width: 100%;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  margin: 20px auto 30px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: inline-block;\n    margin: 10px auto 20px;\n  }\n`;\n\nexport const InputField = styled(Field)`\n  color: ${({ theme }) => theme.colors.lipstick};\n  font-size: 1.5rem;\n  border: none;\n  line-height: 2.5;\n  border: 1px solid ${({ theme }) => theme.colors.silver};\n  border-radius: 5px;\n  outline: none;\n  padding: 5px 0 2px 10px;\n  font-weight: bold;\n  height: 4rem;\n\n  ::placeholder {\n    font-size: 1.2rem;\n    color: ${({ theme }) => theme.colors.grey};\n    :focus {\n      color: transparent;\n    }\n  }\n\n  :active {\n    outline: 1px solid ${({ theme }) => theme.colors.lipstick};\n  }\n\n  ${({ textarea }) =>\n    textarea &&\n    css`\n      height: 12rem;\n\n      line-height: 1.5;\n\n      resize: none;\n      outline: none;\n      width: 100%;\n      font-weight: 400;\n    `}\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 1.2rem;\n  color: ${({ theme }) => theme.colors.grey};\n  padding: 3px;\n  background-color: white;\n  display: inline-block;\n  max-width: 120px;\n  margin: 0 0 -20px 10px;\n  z-index: 2;\n`;\n\nexport const Label = styled.label`\n  width: 3rem;\n  height: 3rem;\n  font-size: 3rem;\n  color: ${({ theme }) => theme.colors.lipstick};\n`;\n\nexport const Checkbox = styled.input.attrs({ type: 'checkbox' })`\n  width: 3rem;\n  height: 3rem;\n  display: none;\n`;\n"," export const initialValues = {\n  quote: '',\n  author: '',\n  title: '',\n  checked: false,\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Formik, ErrorMessage } from 'formik';\n\nimport api from 'api';\nimport { validationSchema } from './validationSchema';\nimport RequiredBox from 'components/molecules/RequredBox/RequiredBox';\nimport ErrorPopup from 'components/molecules/Popups/ErrorPopup';\nimport SuccessPopup from 'components/molecules/Popups/SuccessPopup';\nimport { StyledForm, StyledButton, InputField, StyledLabel, Checkbox, Label } from './styled';\nimport { initialValues } from 'components/molecules/NewQuoteForm/initialValues';\nimport { AiFillHeart, AiOutlineHeart } from 'react-icons/ai';\n\nconst NewQuoteForm = (...props) => {\n  const [popup, setPopup] = useState(false);\n  const [errorPopup, setErrorPopup] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [state, setState] = useState();\n\n\n  const toggleCheckbox = () => {\n    setChecked(!checked);\n  };\n\n  const history = useHistory();\n\n  const handlePopupClose = () => {\n    setPopup(false);\n    setErrorPopup(false);\n    console.log('Close popup');\n  };\n\n  const handleSuccess = () => {\n    history.push('/');\n    history.replace('quotes');\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={async (values, { resetForm }) => {\n        handleSuccess();\n        console.log('Values from formik', values);\n\n        const quote = {\n          records: [\n            {\n              fields: {\n                quote: values.quote,\n                title: values.title,\n                author: values.author,\n                checked: values.checked,\n              },\n            },\n          ],\n        };\n\n        api\n          .post('/quotes', quote)\n          .then(response => {\n            setPopup(true);\n            resetForm();\n            console.log('Response from API in formik', response);\n            console.log('Successfully submitted.');\n          })\n          .catch(err => {\n            setErrorPopup(true);\n            console.error(err);\n            console.log('The form could not be sent.');\n          });\n      }}\n    >\n      {({ values, handleChange, handleBlur, handleSubmit, handleReset }) => (\n        <StyledForm method=\"POST\" autoComplete=\"off\" onSubmit={handleSubmit}>\n          <>\n            {errorPopup && (\n              <ErrorPopup handlePopupClose={handlePopupClose} handleReset={handleReset} />\n            )}\n            {popup && (\n              <SuccessPopup handlePopupClose={handlePopupClose} handleReset={handleReset} />\n            )}\n          </>\n          <>\n            <StyledLabel as=\"label\" htmlFor=\"quote\">\n              quote\n            </StyledLabel>\n            <InputField\n              textarea\n              type=\"text\"\n              name=\"quote\"\n              as=\"textarea\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              values={values.quote}\n            />\n            <ErrorMessage name=\"quote\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            <StyledLabel as=\"label\" htmlFor=\"title\">\n              title\n            </StyledLabel>\n            <InputField\n              as=\"input\"\n              type=\"text\"\n              name=\"title\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.title}\n              autoComplete=\"given-name\"\n            />\n            <ErrorMessage name=\"title\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            <StyledLabel as=\"label\" htmlFor=\"author\">\n              author\n            </StyledLabel>\n            <InputField\n              as=\"input\"\n              type=\"text\"\n              name=\"author\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.author}\n              autoComplete=\"given-name\"\n            />\n            <ErrorMessage name=\"author\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            <Label forHtml=\"checked\">\n              {checked ? <AiFillHeart /> : <AiOutlineHeart />}\n              <Checkbox\n                type=\"checkbox\"\n                name=\"checked\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.checked}\n                checked={checked}\n                onClick={toggleCheckbox}\n              />\n            </Label>\n          </>\n          <StyledButton type=\"submit\">Add new quote</StyledButton>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewQuoteForm;\n","import React, { useState, useEffect, Children } from 'react';\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\nimport styled from 'styled-components';\n\nimport GridTemplate from 'templates/GridTemplate';\nimport NewQuoteForm from 'components/molecules/NewQuoteForm';\nimport QuoteCard from 'components/molecules/Card/QuoteCard';\nimport { useFetchData } from 'customHooks';\nimport { GetAllData } from 'GetData';\n\nconst Image =styled.div`\nbackground-color: green;\nwidth: 200px;\nheight: 300px;\nmargin: 10px;\n`;\n\nconst MyWrapper = () => {\n  return (\n    <ResponsiveMasonry columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3 }}>\n      <Masonry>\n        <Image />\n        <Image />\n        <Image />\n        <Image />\n        <Image />\n        <Image />\n        <Image />\n        <Image />\n      </Masonry>\n    </ResponsiveMasonry>\n  );\n};\n\nconst Quotes = () => {\n  const data = {\n    table: 'quotes',\n    pageSize: 100,\n    sort: [{ field: 'author', direction: 'asc' }],\n  };\n\n  return (\n    <GridTemplate pageType=\"quotes\">\n      <NewQuoteForm />\n      {/* <Masonry column={3}>\n        {quotes && quotes.map(quote => <QuoteCard quote={quote} key={quote.id} />)}\n      </Masonry> */}\n      {/* <MyWrapper>\n        <GetAllData data={data} />\n      </MyWrapper> */}\n      <MyWrapper/>\n    </GridTemplate>\n  );\n};\n\nexport default Quotes;\n","import PropTypes from 'prop-types';\nimport UserPageTemplate from 'templates/UserPageTemplate';\nimport withContext from 'hoc/withContext';\nimport { Container } from 'components/atoms/Container';\n\nconst DetailsPageTemplate = ({ children, pageContext }) => (\n  <UserPageTemplate pageContext={pageContext}>\n    <Container>{children}</Container>\n  </UserPageTemplate>\n);\n\nDetailsPageTemplate.propTypes = {\n  pageContext: PropTypes.oneOf(['home','books', 'authors', 'notes', 'quotes']),\n  children: PropTypes.object,\n};\n\nexport default withContext(DetailsPageTemplate);\n\n\n","import styled, { keyframes } from 'styled-components';\n\nconst animationLeft = keyframes`\n0%{left:20%;}\n\t50%{left:50%;}\n\t100%{left:20%;}\n`;\n\nconst animationRight = keyframes`\n\t0%{left:80%;}\n\t50%{left:50%;}\n\t100%{left:80%;}\n`;\n\nexport const Centred = styled.div`\n  width: 400px;\n  height: 400px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: ${({ theme }) => theme.colors.white};\n  /* filter: contrast(10); */\n`;\n\nexport const BlobLeft = styled.div`\n  width: 70px;\n  height: 70px;\n  position: absolute;\n  background: ${({ theme }) => theme.colors.lipstick};\n  border-radius: 50%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  left: 20%;\n  animation: ${animationLeft} 2.5s ease infinite;\n`;\n\nexport const BlobRight = styled.div`\n  width: 70px;\n  height: 70px;\n  position: absolute;\n  background: #fff;\n  border-radius: 50%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  left: 80%;\n  animation: ${animationRight} 2.5s ease infinite;\n  background: ${({ theme }) => theme.colors.black};\n`;\n\nexport const StyledParagraph = styled.p`\n  font-size: 2rem;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.grey};\n`;\n","import PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nimport DetailsPageTemplate from 'templates/DetailsPageTemplate';\nimport Loader from 'components/atoms/Loader';\nimport Error from 'components/atoms/Error';\nimport CardBig from 'components/molecules/Card/CardBig';\nimport Button from 'components/atoms/Button/Button';\n// import useFetchDetailsData from 'actions/useFetchDetailsData';\nimport withContext from 'hoc/withContext';\n\nimport { useFetchDetailsData } from 'customHooks';\n\nimport { getRecordById } from 'customHooks/useFetchDetailsData';\n\nconst DetailsPage = pageContext => {\n  const pathname = pageContext.location.pathname;\n  const id = pathname.split('/')[2];\n\n  // const itemData = useFetchDetailsData(id);\n  // console.log('itemData from DetailsPage - ', itemData);\n\n  const item = getRecordById(id);\n  console.log(item);\n\n  return (\n    <>\n      <DetailsPageTemplate>\n        {/* {itemData &&\n          [itemData.data].map((item, index) => (\n            <CardBig key={item.id} item={item} index={index} endpoint={endpoint} />\n          ))} */}\n        {/* {itemData &&\n          [itemData.data].map((item, index) => ( */}\n        <CardBig key={item.id} item={item} />\n        {/* ))} */}\n      </DetailsPageTemplate>\n    </>\n  );\n};\n\nDetailsPage.propTypes = {\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'books', 'quotes']),\n};\n\nexport default withContext(DetailsPage);\n\n// const DetailsPage = pageContext => {\n//   const endpoint = pageContext.location.pathname;\n\n//   const { itemData } = useFetchDetailsData(endpoint);\n//   console.log(itemData)\n//   const history = useHistory();\n\n//   return (\n//     <>\n//       <DetailsPageTemplate>\n//         {itemData.status === 'loading' ? (\n//           <Loader />\n//         ) : itemData.status === 'error' ? (\n//           <Error reloadButton />\n//         ) : (\n//           <>\n//             {itemData &&\n//               [itemData.data].map((item, index) => (\n//                 <CardBig key={item.id} item={item} index={index} endpoint={endpoint} />\n//               ))}\n\n//             <Button\n//               onClick={() => {\n//                 history.goBack();\n//               }}\n//             >\n//               Back\n//             </Button>\n//           </>\n//         )}\n//       </DetailsPageTemplate>\n//     </>\n//   );\n// };\n\n// DetailsPage.propTypes = {\n//   pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'books', 'quotes']),\n// };\n\n// export default withContext(DetailsPage);\n","import styled from 'styled-components';\nimport Header from '../Header/Header';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 200px auto;\n  align-items: center;\n  justify-content: center;\n\n`;\n\nexport const ErrorIcon = styled.img`\n  width: 100px;\n  margin-bottom: 5rem;\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    width: 80px;\n  }\n`;\n\nexport const Title = styled(Header)`\n  font-size: 3rem;\n  margin-bottom: 2.5rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    font-size: 2rem;\n    margin-bottom: 1.5rem;\n  }\n`;\nexport const Subtitle = styled.p`\n  font-size: 2rem;\n  color: ${({ theme }) => theme.colors.grey};\n  text-align: center;\n  padding-bottom: 5rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    font-size: 1.6rem;\n    padding-bottom: 3rem;\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: inline-block;\n  margin-top: 24px;\n  padding: 16px 24px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.colors.lipstick};\n  color: ${({ theme }) => theme.colors.white};\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 19px;\n  font-family: 'Open Sans', sans-serif;\n  text-decoration: none;\n  outline: none;\n\n  &:hover {\n    box-shadow: 2px -2px 0px #8cc2ff, -2px 2px 0px #8cc2ff, 2px 2px 0px #8cc2ff,\n      -2px -2px 0px #8cc2ff;\n  }\n\n  &:active {\n    box-shadow: inset 0px 2px 0px rgba(20, 70, 32, 0.2);\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    padding: 12px 16px;\n    font-size: 12px;\n  }\n`;","export default __webpack_public_path__ + \"static/media/error.46513cbc.svg\";","export const routes = {\n  home: '/home',\n  notes: '/notes',\n  note: '/notes/:id',\n  books: '/books',\n  book: '/books/:id',\n  authors: '/authors',\n  author: '/authors/:id',\n  quotes: '/quotes',\n};\n","import React from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport MainTemplate from 'templates/MainTemplate';\nimport Authors from 'views/Authors';\nimport Notes from 'views/Notes';\nimport Books from 'views/Books';\nimport Home from 'views/Home';\nimport Quotes from 'views/Quotes';\nimport DetailsPage from 'views/DetailsPage';\nimport { routes } from 'routes';\n\nconst Root = () => (\n    <HashRouter>\n      <MainTemplate>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Redirect to={routes.home} />} />\n          <Route exact path={routes.home} component={Home} />\n          <Route exact path={routes.books} component={Books} />\n          <Route path={routes.book} component={DetailsPage} />\n          <Route exact path={routes.authors} component={Authors} />\n          <Route path={routes.author} component={DetailsPage} />\n          <Route exact path={routes.notes} component={Notes} />\n          <Route path={routes.note} component={DetailsPage} />\n          <Route exact path={routes.quotes} component={Quotes} />\n        </Switch>\n      </MainTemplate>\n    </HashRouter>\n);\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'views/Root';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}