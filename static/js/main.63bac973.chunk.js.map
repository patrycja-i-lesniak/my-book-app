{"version":3,"sources":["assets/icons/plus.svg","context/index.js","components/atoms/ButtonIcon/ButtonIcon.js","components/atoms/Button/Button.js","components/atoms/Header/Header.js","components/atoms/Paragraph/Paragraph.js","components/organisms/NewItemBar/styled.js","components/molecules/NewItemForm/validationSchema.js","components/molecules/RequredBox/RequiredBox.js","assets/icons/close.svg","components/molecules/Popups/ErrorPopup/styled.js","hoc/withContext.js","components/molecules/Popups/ErrorPopup/index.js","components/molecules/Popups/SuccessPopup/styled.js","components/molecules/Popups/SuccessPopup/index.js","components/molecules/NewItemForm/styled.js","components/molecules/NewItemForm/initialValues.js","components/molecules/NewItemForm/Options.js","api/index.js","components/molecules/NewItemForm/index.js","components/organisms/NewItemBar/index.js","assets/images/backgroundPattern.jpg","theme/GlobalStyle.js","theme/theme.js","airtable/base.js","customHooks/useFetchData.js","customHooks/useGetCurrentPage.js","customHooks/useLocalStorage.js","components/molecules/FooterNavigation/index.js","templates/MainTemplate.js","assets/icons/myBooksLogoBlack.svg","components/organisms/NavigationBar/styled.js","assets/icons/search.svg","components/atoms/SearchBox/styled.js","components/atoms/SearchBox/index.js","components/organisms/NavigationBar/NavigationBar.js","components/organisms/MobileNavigation/index.js","templates/UserPageTemplate.js","components/atoms/Container/index.js","assets/icons/bookIcon.svg","assets/images/book1.jpg","assets/icons/readingIcon.svg","assets/images/book2.jpg","assets/icons/buyIcon.svg","assets/images/book3.jpg","components/atoms/Box/styled.js","components/atoms/Box/index.js","components/molecules/RotaryBox/RotaryBox.js","assets/images/background.jpg","components/organisms/QuotesBox/styled.js","components/organisms/QuotesBox/index.js","helpers/capitalizeFirstLetter.js","templates/GridTemplate.js","components/atoms/Arrow/styled.js","components/atoms/Arrow/index.js","components/atoms/Wrapper/index.js","assets/icons/mblSmall.svg","components/molecules/Card/CardSmall/styled.js","components/molecules/Card/CardSmall/index.js","views/Authors.js","views/Notes.js","views/Books.js","components/molecules/LastAddedBooks/index.js","views/Home.js","components/molecules/NewQuoteForm/validationSchema.js","components/molecules/NewQuoteForm/styled.js","components/molecules/NewQuoteForm/initialValues.js","components/molecules/NewQuoteForm/index.js","components/molecules/Card/QuoteCard/validationSchema.js","components/molecules/Card/QuoteCard/initialValues.js","components/molecules/Card/QuoteCard/styled.js","components/molecules/Card/QuoteCard/index.js","components/molecules/Popups/EditQuotePopup/styled.js","components/molecules/Popups/EditQuotePopup/index.js","components/molecules/Masonry/styled.js","components/molecules/Masonry/index.js","views/Quotes.js","templates/DetailsPageTemplate.js","components/atoms/Loader/styled.js","components/atoms/Loader/index.js","components/atoms/Error/styled.js","assets/icons/error.svg","components/atoms/Error/index.js","components/molecules/Card/CardBig/styled.js","assets/icons/trash.svg","assets/icons/lcLogo.svg","assets/icons/link.svg","components/molecules/Popups/ConfirmationPopup/styled.js","components/molecules/Popups/ConfirmationPopup/index.js","components/molecules/Card/CardBig/index.js","actions/useFetchDetailsData.js","actions/useFetchBooksData.js","views/DetailsPage.js","routes/index.js","views/Root.js","index.js"],"names":["PageContext","React","createContext","ButtonIcon","styled","button","theme","colors","lipstick","shadows","boxShadow","icon","lightLipstick","secondary","css","Button","white","boxShadowDark","breakpoints","small","silver","Header","h1","bold","textShadow","gray","Paragraph","p","black","StyledWrapper","div","isVisible","medium","StyledHeader","StyledParagraph","CloseBarButton","Yup","this","transform","value","undefined","bookValidationSchema","shape","title","min","max","required","firstName","lastName","imageUrl","notRequired","series","date","isbn","translation","publishing","numberOfPages","content","LClink","status","oneOf","authorValidationSchema","oficialWebsite","default","noteValidationSchema","nullable","Box","RequiredBox","msg","ButtonWrapper","grey","CloseButton","withContext","Component","props","Consumer","context","pageContext","handlePopupClose","toggleNewItemBar","handleReset","closeIcon","type","onClick","StyledForm","Form","StyledButton","InputField","Field","textarea","select","StyledLabel","label","InputWrapper","DataWrapper","initialValues","Options","process","REACT_APP_DB_ID","REACT_APP_API_KEY","API_URL","request","endpoint","a","method","data","requestConfig","headers","Authorization","url","axios","response","Error","statusText","get","post","patch","delete","useState","popup","setPopup","errorPopup","setErrorPopup","console","log","history","useHistory","refresh","handler","useEffect","clearTimeout","push","setTimeout","UseRefresh","validationSchema","onSubmit","values","resetForm","location","pathname","book","records","fields","author","note","api","then","catch","err","error","handleChange","handleBlur","handleSubmit","autoComplete","as","htmlFor","name","onChange","onBlur","maxLenght","style","display","NewItemBar","defaultProps","GlobalStyle","createGlobalStyle","normalize","pattern","StyledBackdrop","webOrange","torchRed","japaneseLaurel","toreaBay","vividViolet","desertStorm","lightGrey","mineShaft","font","light","regular","xsmall","large","quoteBoxShadow","modalShadow","popupShadow","easeOut","BASE_URL","base","create","baseURL","Airtable","apiKey","useFetchData","pageSize","sort","table","items","setItems","view","eachPage","fetchNextPage","useGetCurrentPage","pageType","setPageType","useLocation","filter","page","includes","currentPage","setCurrentPage","Icon","StyledButtonIcon","MainTemplate","children","isNewItemBarVisible","setNewItemBarVisible","Provider","plusIcon","StyledNavigationWrapper","nav","StyledLogoLink","NavLink","myBooksLogoBlack","StyledLinkList","ul","activeClassName","StyledItem","attrs","Search","searchIcon","SearchBox","query","setSubmitting","setInput","otherStuff","find","record","id","formikProps","disabled","NavigationBar","to","placeholder","xmall","MobileNavigation","Link","List","Item","li","contact","FaGithub","ItemList","map","href","target","rel","Footer","UserPageTemplate","Container","BoxFront","BoxBack","BoxText","Article","Book1","BookIcon","Book2","ReadingIcon","Book3","BuyIcon","header","Wrapper","RotaryBox","QuoteWrapper","background","QuoteSource","StyledQuote","h2","QuotesBox","quotes","setQuotes","getQuote","randomNumber","Math","floor","random","length","quote","capitalizeFirstLetter","string","firstLetter","charAt","toUpperCase","restString","slice","toLowerCase","StyledGrid","notes","GridTemplate","StyledArrow","svg","showMore","Arrow","width","height","fill","viewBox","version","xmlns","d","StyledImage","img","LogoSmall","StyledTitle","StyledAuthor","InnerWrapper","StyledDate","ShowMore","ButtonContentWrapper","span","CardSmall","setShowMore","src","Authors","authors","field","Notes","direction","Books","books","index","LastAddedBooks","Home","checked","Label","Checkbox","input","NewQuoteForm","setChecked","toggleCheckbox","replace","forHtml","Top","Quote","mainShaft","Text","ButtonSmall","QuoteCard","MasonryWrapper","columns","gridGap","MasonryColumn","Masonry","isProvideLi","output","Children","toArray","reduce","acc","child","i","key","Array","column","Quotes","animationLeft","keyframes","animationRight","Centred","BlobLeft","BlobRight","Loader","ErrorIcon","Title","Subtitle","reloadButton","errorIcon","alt","window","reload","UpperContainer","LowerContainer","Details","StyledData","ButtonsWrapper","Status","read","borrowed","toRead","toBuy","inProgress","StatusParagraph","ExtraWrapper","handleDeleteFalse","itemId","DeleteButton","className","trashIcon","destroy","deleteItem","goBack","CardBig","item","show","lcLogo","linkIcon","useFetchDetailsData","itemData","setItemData","getItemData","delayGetData","useFetchBooksData","setBooks","getData","useMemo","routes","Root","exact","path","render","component","DetailsPage","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63bac973.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/plus.15c51fc0.svg\";","import React from 'react';\n\nconst PageContext = React.createContext('home');\n\nexport default PageContext;","import styled, {css} from 'styled-components';\n\nconst ButtonIcon = styled.button`\n  width: 48px;\n  height: 48px;\n  border: 2px solid ${({ theme }) => theme.colors.lipstick};\n  background: #ae0046;\n  border-radius: 3px;\n  cursor: pointer;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadow};\n  background-size: 60%;\n  background-position: 50%;\n  background-repeat: no-repeat;\n  background-image: url(${({ icon }) => icon});\n\n  &:active {\n    background-color: ${({ theme }) => theme.colors.lightLipstick};\n  }\n\n  ${({ secondary }) =>\n    secondary &&\n    css`\n      border: none;\n      background-color: transparent;\n      width: 38px;\n      height: 38px;\n      box-shadow: none;\n    `}\n`;\n\nexport default ButtonIcon;\n","import styled, { css } from 'styled-components';\n\nconst Button = styled.button`\n  border: 1px solid ${({ theme }) => theme.colors.lipstick};\n  color: ${({ theme }) => theme.colors.white};\n  background: ${({ theme }) => theme.colors.lipstick};\n  font-size: 1.4rem;\n  width: 140px;\n  padding: 10px;\n  border-radius: 3px;\n  cursor: pointer;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n  text-decoration: none;\n  text-align: center;\n\n  /* @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    max-width: 120px;\n  } */\n\n  &:active {\n    background-color: ${({ theme }) => theme.colors.lightLipstick};\n  }\n\n  ${({ secondary }) =>\n    secondary &&\n    css`\n      background-color: ${({ theme }) => theme.colors.white};\n      color: ${({ theme }) => theme.colors.lipstick};\n      box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n\n      &:active {\n        background-color: ${({ theme }) => theme.colors.silver};\n      }\n    `}\n`;\n\nexport default Button;\n","import styled, { css } from 'styled-components';\n\nconst Header = styled.h1`\n  font-size: 3.5rem;\n  font-weight: ${({ theme }) => theme.bold};\n  color: ${({ theme }) => theme.colors.lipstick};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.shadows.textShadow};\n  line-height: 1.3;\n\n  ${({ secondary }) =>\n    secondary &&\n    css`\n      color: ${({ theme }) => theme.colors.gray};\n      font-size: 2.6rem;\n      margin: 3rem 0;\n    `};\n`;\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst Paragraph = styled.p`\n  font-size: 1.4rem;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.colors.black};\n`;\n\nexport default Paragraph;\n","import styled from 'styled-components';\nimport Button from 'components/atoms/Button/Button';\nimport Header from 'components/atoms/Header/Header';\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\n\nexport const StyledWrapper = styled.div`\n  border-left: 3px solid ${({ theme }) => theme.colors.lipstick};\n  z-index: 0;\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  right: 0;\n  top: 0;\n  width: 50vw;\n  max-width: 600px;\n  padding-left: 50px;\n  height: 100vh;\n  background-color: white;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadow};\n  transform: translate(${({ isVisible }) => (isVisible ? '0' : '100%')});\n  transition: transform 0.6s ease-in-out;\n  overflow: scroll;\n  z-index: 4;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    width: 100vw;\n    border-left: none;\n    padding-left: 0;\n    align-items: center;\n    max-width: unset;\n  }\n`;\n\nexport const StyledHeader = styled(Header)`\n  margin: 100px 0 10px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    margin-top: 80px;\n  }\n`;\n\nexport const StyledParagraph = styled(Paragraph)`\n  width: 90%;\n  padding: 5px 0;\n  text-align: center;\n  font-size: 1.7rem;\n`;\n\nexport const CloseBarButton = styled(Button)`\n  position: fixed;\n  top: 43%;\n  width: 50px;\n  height: 100px;\n  left: -20px;\n  border-radius: 0 40px 40px 0;\n`;\n","import * as Yup from 'yup';\n\nYup.addMethod(Yup.date, 'stripEmptySDate', function () {\n  return this.transform(value => (value === '' ? undefined : value));\n});\n\nexport const bookValidationSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required field is empty'),\n  firstName: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required field is empty'),\n  lastName: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required field is empty'),\n  imageUrl: Yup.string().notRequired(),\n  series: Yup.string().notRequired(),\n  date: Yup.date().notRequired(),\n  isbn: Yup.number('Must be a number').notRequired(),\n  translation: Yup.string().notRequired(),\n  publishing: Yup.string().notRequired(),\n  numberOfPages: Yup.number('Must be a number').notRequired(),\n  content: Yup.string().required('Required field is empty'),\n  LClink: Yup.string().notRequired(),\n  status: Yup.string()\n    .oneOf(['read', 'to read', 'to buy', 'borrowed', 'in progress'])\n    .notRequired(),\n});\n\nexport const authorValidationSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required field is empty'),\n  lastName: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required field is empty'),\n  imageUrl: Yup.string().required('Required field is empty'),\n  content: Yup.string().required('Required field is empty'),\n  oficialWebsite: Yup.string().default(),\n});\n\nexport const noteValidationSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required field is empty'),\n  imageUrl: Yup.string().notRequired(),\n  date: Yup.date().nullable().notRequired(),\n  content: Yup.string().required('Required field is empty'),\n});","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Box = styled.div`\n  display: flex;\n  border: none;\n  background-color: #fce9f0;\n  border-radius: 5px;\n  margin: -0.7rem 0 0;\n  height: 30px;\n  align-items: center;\n  width: 100%;\n`;\n\nconst StyledParagraph = styled.p`\n  padding-left: 10px;\n  margin: 0;\n`;\n\nconst RequiredBox = ({ msg }) => (\n  <Box>\n    <StyledParagraph>{msg}</StyledParagraph>\n  </Box>\n);\n\nRequiredBox.propTypes = {\n  msg: PropTypes.string.isRequired,\n};\n\nexport default RequiredBox;\n","export default __webpack_public_path__ + \"static/media/close.c2cf8b48.svg\";","import styled from 'styled-components';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\n\nexport const StyledWrapper = styled.div`\n  transform: translateY(-50%);\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  left: 0;\n  right: 0;\n  top: 50%;\n  margin: 20px auto;\n  width: 400px;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.colors.white};\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n  z-index: 99999;\n  padding: 40px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    max-width: 90%;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 30px;\n  justify-content: center;\n  padding: 10px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    gap: 20px;\n  }\n`;\n\nexport const StyledParagraph = styled.p`\n  font-size: 2rem;\n  color: ${({ theme }) => theme.colors.grey};\n  text-align: center;\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    font-size: 1.7rem;\n  }\n`;\n\nexport const CloseButton = styled(ButtonIcon)`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  z-index: 99999;\n  width: 24px;\n  height: 24px;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n`;\n","import React from 'react';\nimport PageContext from 'context'; \n\nconst withContext = (Component) => {\n    return function contextComponent(props)\n    {\n        return (\n            <PageContext.Consumer>\n            {context =>(\n                <Component {...props} pageContext={context}/>\n            )}\n            </PageContext.Consumer>\n        )\n    }\n};\n\nexport default withContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'components/atoms/Button/Button';\nimport closeIcon from 'assets/icons/close.svg';\nimport { StyledWrapper, ButtonWrapper, StyledParagraph, CloseButton } from './styled';\nimport withContext from 'hoc/withContext';\n\n\nconst ErrorPopup = ({ handlePopupClose, toggleNewItemBar, pageContext, handleReset }) => {\n  const onClickActions = () => \n  [toggleNewItemBar(), handleReset()\n  ];\n  return (\n    <StyledWrapper>\n      <StyledParagraph>The item could not be added. </StyledParagraph>\n      <CloseButton icon={closeIcon} type=\"button\" onClick={handlePopupClose} />\n      <ButtonWrapper>\n        <Button type=\"button\" onClick={onClickActions}>\n          Back to {pageContext}\n        </Button>\n        <Button secondary type=\"button\" onClick={handlePopupClose}>\n          Try again\n        </Button>\n      </ButtonWrapper>\n    </StyledWrapper>\n  );\n};\n\nErrorPopup.propTypes = {\n  toggleNewItemBar: PropTypes.func.isRequired,\n  handlePopupClose: PropTypes.func.isRequired,\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'notes', 'quotes']),\n  handleReset: PropTypes.func,\n};\n\nexport default withContext(ErrorPopup);\n","import styled from 'styled-components';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\n\nexport const StyledWrapper = styled.div`\n  transform: translateY(-50%);\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  left: 0;\n  right: 0;\n  top: 50%;\n  margin: 20px auto;\n  width: 400px;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.colors.white};\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n  z-index: 99999;\n  padding: 40px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    max-width: 90%;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 30px;\n  justify-content: center;\n  padding: 10px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    gap: 20px;\n  }\n`;\n\nexport const StyledParagraph = styled.p`\n  font-size: 2rem;\n  color: ${({ theme }) => theme.colors.grey};\n  text-align: center;\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    font-size: 1.7rem;\n  }\n`;\n\nexport const CloseButton = styled(ButtonIcon)`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  z-index: 99999;\n  width: 24px;\n  height: 24px;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'components/atoms/Button/Button';\nimport closeIcon from 'assets/icons/close.svg';\nimport { StyledWrapper, ButtonWrapper, StyledParagraph, CloseButton } from './styled';\nimport withContext from 'hoc/withContext';\n\nconst SuccessPopup = ({ handlePopupClose, pageContext, toggleNewItemBar }) => {\n\n  const onClickActions = () => {\n    toggleNewItemBar(), handlePopupClose()\n  };\n\n  return (\n    <StyledWrapper>\n      <StyledParagraph>Successfully submitted.</StyledParagraph>\n      <CloseButton icon={closeIcon} type=\"button\" onClick={handlePopupClose} />\n      <ButtonWrapper>\n        <Button type=\"reset\" onClick={onClickActions}>\n          Back to {pageContext}\n        </Button>\n        <Button secondary type=\"button\" onClick={handlePopupClose}>\n          Add next item\n        </Button>\n      </ButtonWrapper>\n    </StyledWrapper>\n  );\n};\n\nSuccessPopup.propTypes = {\n  handlePopupClose: PropTypes.func.isRequired,\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'notes', 'quotes']),\n  toggleNewItemBar: PropTypes.func,\n  handleReset: PropTypes.func,\n};\n\nexport default withContext(SuccessPopup);\n","import styled, { css } from 'styled-components';\nimport { Form, Field } from 'formik';\nimport Button from 'components/atoms/Button/Button';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  justify-content: center;\n  gap: 1rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    width: 80%;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  margin: 10px auto 120px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: inline-block;\n    margin: 10px auto 100px;\n  }\n`;\n\nexport const InputField = styled(Field)`\n  color: ${({ theme }) => theme.colors.lipstick};\n  font-size: 1.5rem;\n  border: none;\n  line-height: 2.5;\n  border: 1px solid ${({ theme }) => theme.colors.silver};\n  border-radius: 5px;\n  outline: none;\n  padding: 5px 0 2px 10px;\n  font-weight: bold;\n  height: 4rem;\n\n  ::placeholder {\n    font-size: 1.2rem;\n    color: ${({ theme }) => theme.colors.grey};\n    :focus {\n      color: transparent;\n    }\n  }\n\n  :active {\n    outline: 1px solid ${({ theme }) => theme.colors.lipstick};\n  }\n\n  ${({ textarea }) =>\n    textarea &&\n    css`\n      height: 12rem;\n\n      line-height: 1.5;\n\n      resize: none;\n      outline: none;\n      width: 100%;\n      font-weight: 400;\n    `}\n\n  ${({ select }) =>\n    select &&\n    css`\n      margin-top: 0.7rem;\n      overflow: hidden;\n      outline: none;\n      border: 1px solid ${({ theme }) => theme.colors.lipstick};\n    `}\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 1.2rem;\n  color: ${({ theme }) => theme.colors.grey};\n  padding: 3px;\n  background-color: white;\n  display: inline-block;\n  max-width: 120px;\n  margin: 0 0 -20px 10px;\n  z-index: 2;\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const DataWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: no-wrap;\n  gap: 0.7rem;\n  width: 49%;\n`;\n","export const initialValues = {\n  type: '',\n  title: '',\n  firstName: '',\n  lastName: '',\n  imageUrl: '',\n  series: '',\n  date: '',\n  isbn: '',\n  translation: '',\n  publishing: '',\n  numberOfPages: '',\n  content: '',\n  LClink: '',\n  status: '',\n  oficialWebsite: '',\n};\n","export const Options = () => (\n  <>\n    <option value=\"\" label=\"Select status\" />\n    <option value=\"read\" label=\"read\" />\n    <option value=\"to read\" label=\"to read\" />\n    <option value=\"in progress\" label=\"in progress\" />\n    <option value=\"to buy\" label=\"to buy\" />\n    <option value=\"borrowed\" label=\"borrowed\" />\n  </>\n);\n","import axios from 'axios';\n\nconst { REACT_APP_DB_ID, REACT_APP_API_KEY } = process.env;\nconst API_URL = `https://api.airtable.com/v0/${REACT_APP_DB_ID}`;\n\nconst request = async (endpoint, method = 'GET', data = null) => {\n  const requestConfig = {\n    method,\n    headers: {\n      Authorization: `Bearer ${REACT_APP_API_KEY}`,\n      'Content-Type': 'application/json',\n    },\n    data: method === 'POST' || method === 'PATCH' ? data : null,\n  };\n\n  const url = `${API_URL}${endpoint}`;\n\n  const response = await axios(url, requestConfig);\n\n  if (!response) throw new Error(response.statusText);\n\n  return response.data;\n};\n\nconst get = endpoint => request(endpoint);\n\nconst post = (endpoint, data) => request(endpoint, 'POST', data);\n\nconst patch = (endpoint, data) => request(endpoint, 'PATCH', data);\n\nconst _delete = endpoint => request(endpoint, 'DELETE');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  get,\n  post,\n  patch,\n  delete: _delete,\n};\n","import React, { useState, useEffect } from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport PropTypes, { any } from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  bookValidationSchema,\n  authorValidationSchema,\n  noteValidationSchema,\n} from 'components/molecules/NewItemForm/validationSchema';\nimport RequiredBox from 'components/molecules/RequredBox/RequiredBox';\nimport ErrorPopup from 'components/molecules/Popups/ErrorPopup';\nimport SuccessPopup from 'components/molecules/Popups/SuccessPopup';\nimport {\n  StyledForm,\n  StyledButton,\n  InputField,\n  StyledLabel,\n  InputWrapper,\n  DataWrapper,\n} from './styled';\nimport withContext from 'hoc/withContext';\nimport { initialValues } from './initialValues';\nimport { Options } from './Options';\nimport api from 'api';\n\nconst NewItemForm = ({ pageContext, toggleNewItemBar }) => {\n  const [popup, setPopup] = useState(false);\n  const [errorPopup, setErrorPopup] = useState(false);\n\n  const handlePopupClose = () => {\n    setPopup(false);\n    setErrorPopup(false);\n    console.log('Close popup');\n  };\n\n  // console.log(pageContext);\n\n  const endpoint = `/${pageContext}`;\n\n  const history = useHistory();\n\n  // VER.1\n\n  // const handleSuccess = () => {\n  //   history.push('/');\n  //   history.replace(endpoint);\n  // };\n\n  // VER. 2\n\n  const UseRefresh = () => {\n    let handler;\n    const refresh = () => {\n      history.push('/');\n      handler = setTimeout(() => history.push(endpoint), 10);\n    };\n\n    useEffect(() => {\n      return () => handler && clearTimeout(handler);\n    }, [handler]);\n    return refresh;\n  };\n\n  const refresh = UseRefresh(history, endpoint);\n\n  const handleSuccess = () => {\n    if (history.location.pathname === endpoint) {\n      refresh();\n    } else {\n      history.push(endpoint);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={\n        pageContext === 'books'\n          ? bookValidationSchema\n          : pageContext === 'authors'\n          ? authorValidationSchema\n          : noteValidationSchema\n      }\n      onSubmit={async (values, { resetForm }) => {\n        handleSuccess();\n\n        console.log(values);\n\n        const book = {\n          records: [\n            {\n              fields: {\n                title: values.title,\n                firstName: values.firstName,\n                lastName: values.lastName,\n                imageUrl: values.imageUrl,\n                series: values.series,\n                date: values.date,\n                numberOfPages: values.numberOfPages,\n                isbn: values.isbn,\n                translation: values.translation,\n                publishing: values.publishing,\n                status: values.status,\n                content: values.content,\n                LClink: values.LClink,\n              },\n            },\n          ],\n        };\n\n        const author = {\n          records: [\n            {\n              fields: {\n                firstName: values.firstName,\n                lastName: values.lastName,\n                content: values.content,\n                imageUrl: values.imageUrl,\n                oficialWebsite: values.oficialWebsite,\n              },\n            },\n          ],\n        };\n\n        const note = {\n          records: [\n            {\n              fields: {\n                title: values.title,\n                imageUrl: values.imageUrl,\n                date: values.date,\n                content: values.content,\n              },\n            },\n          ],\n        };\n\n        api\n          .post(\n            endpoint,\n            pageContext === 'books'\n              ? (endpoint, book)\n              : pageContext === 'authors'\n              ? (endpoint, author)\n              : (endpoint, note),\n          )\n          .then(response => {\n            setPopup(true);\n            resetForm();\n            console.log(response);\n            console.log('Successfully submitted.');\n          })\n          .catch(err => {\n            setErrorPopup(true);\n            console.error(err);\n            console.log('The form could not be sent.');\n          });\n      }}\n    >\n      {({ values, handleChange, handleBlur, handleSubmit, handleReset }) => (\n        <StyledForm method=\"POST\" autoComplete=\"off\" onSubmit={handleSubmit}>\n          <>\n            {errorPopup && (\n              <ErrorPopup\n                handlePopupClose={handlePopupClose}\n                toggleNewItemBar={toggleNewItemBar}\n                handleReset={handleReset}\n              />\n            )}\n            {popup && (\n              <SuccessPopup\n                handlePopupClose={handlePopupClose}\n                toggleNewItemBar={toggleNewItemBar}\n                handleReset={handleReset}\n              />\n            )}\n          </>\n          {pageContext === 'authors' ? null : (\n            <>\n              <StyledLabel as=\"label\" htmlFor=\"title\">\n                title\n              </StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"text\"\n                name=\"title\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.title}\n                autoComplete=\"given-name\"\n              />\n\n              <ErrorMessage name=\"title\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            </>\n          )}\n\n          {pageContext === 'notes' ? null : (\n            <InputWrapper>\n              <DataWrapper>\n                <StyledLabel htmlFor=\"first name\">first name</StyledLabel>\n                <InputField\n                  as=\"input\"\n                  type=\"text\"\n                  name=\"firstName\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.firstName}\n                />\n                <ErrorMessage name=\"firstName\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n              </DataWrapper>\n              <DataWrapper>\n                <StyledLabel htmlFor=\"last name\">last name</StyledLabel>\n                <InputField\n                  as=\"input\"\n                  type=\"text\"\n                  name=\"lastName\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.lastName}\n                />\n                <ErrorMessage name=\"lastName\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n              </DataWrapper>\n            </InputWrapper>\n          )}\n\n          <>\n            <StyledLabel htmlFor=\"image url\">image url</StyledLabel>\n            <InputField\n              as=\"input\"\n              type=\"url\"\n              name=\"imageUrl\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.imageUrl}\n            />\n\n            <ErrorMessage name=\"imageUrl\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n          </>\n\n          {pageContext === 'books' && (\n            <>\n              <StyledLabel htmlFor=\"series\">series</StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"text\"\n                name=\"series\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.series}\n              />\n              <ErrorMessage name=\"series\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            </>\n          )}\n\n          {pageContext === 'authors' ? null : (\n            <>\n              <StyledLabel htmlFor=\"date\">date of publication</StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"date\"\n                name=\"date\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.date}\n              />\n              <ErrorMessage name=\"date\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            </>\n          )}\n\n          {pageContext === 'books' && (\n            <>\n              <InputWrapper>\n                <DataWrapper>\n                  <StyledLabel htmlFor=\"ISBN\">ISBN</StyledLabel>\n                  <InputField\n                    as=\"input\"\n                    type=\"number\"\n                    name=\"isbn\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.isbn}\n                  />\n                  <ErrorMessage name=\"isbn\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n                </DataWrapper>\n                <DataWrapper>\n                  <StyledLabel htmlFor=\"number of pages\">number of pages</StyledLabel>\n                  <InputField\n                    as=\"input\"\n                    type=\"number\"\n                    name=\"numberOfPages\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.numberOfPages}\n                    maxLenght=\"4\"\n                  />\n                  <ErrorMessage name=\"numberOfPages\">\n                    {msg => <RequiredBox msg={msg} />}\n                  </ErrorMessage>\n                </DataWrapper>\n              </InputWrapper>\n\n              <StyledLabel htmlFor=\"translation\">translation</StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"text\"\n                name=\"translation\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.translation}\n              />\n              <ErrorMessage name=\"translation\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n\n              <StyledLabel htmlFor=\"publishing\">publishing</StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"text\"\n                name=\"publishing\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.publishing}\n              />\n              <ErrorMessage name=\"publishing\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n\n              <StyledLabel htmlFor=\"link LubimyCytać.pl\">link LubimyCytać.pl</StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"url\"\n                name=\"LClink\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.LClink}\n              />\n              <ErrorMessage name=\"LClink\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n\n              <InputField\n                select\n                as=\"select\"\n                name=\"status\"\n                value={values.status}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                style={{ display: 'block' }}\n              >\n                <Options />\n              </InputField>\n              <ErrorMessage name=\"status\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            </>\n          )}\n          {pageContext === 'authors' && (\n            <>\n              <StyledLabel htmlFor=\"oficial website\">oficial website</StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"url\"\n                name=\"oficialWebsite\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.oficialWebsite}\n              />\n              <ErrorMessage name=\"oficialWebsite\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            </>\n          )}\n\n          <StyledLabel htmlFor=\"content\">description</StyledLabel>\n          <InputField\n            textarea\n            type=\"text\"\n            name=\"content\"\n            as=\"textarea\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.content}\n          />\n          <ErrorMessage name=\"content\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n          <StyledButton type=\"submit\">Add new item</StyledButton>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n\nNewItemForm.propTypes = {\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'notes', 'quotes']),\n  toggleNewItemBar: PropTypes.func,\n};\n\nexport default withContext(NewItemForm);\n","import { BsCaretRightFill } from 'react-icons/bs';\nimport PropTypes from 'prop-types';\nimport { \n  StyledWrapper, \n  StyledHeader, \n  StyledParagraph, \n  CloseBarButton } \n  from './styled';\nimport NewItemForm from 'components/molecules/NewItemForm';\nimport withContext from 'hoc/withContext';\n\nconst NewItemBar = ({ isVisible, pageContext, toggleNewItemBar }) => (\n  <>\n    <StyledWrapper isVisible={isVisible}>\n      <StyledHeader secondary>Add new {pageContext}</StyledHeader>\n      <StyledParagraph>\n        Fill in all the fields and click the button.\n      </StyledParagraph>\n      <NewItemForm toggleNewItemBar={toggleNewItemBar} />\n      <CloseBarButton type=\"button\" onClick={toggleNewItemBar}>\n        <BsCaretRightFill />\n      </CloseBarButton>\n    </StyledWrapper>\n  </>\n);\n\nNewItemBar.propTypes = {\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'notes', 'quotes']),\n  isVisible: PropTypes.bool,\n  toggleNewItemBar: PropTypes.func,\n};\n\nNewItemBar.defaultProps = {\n  isVisible: false,\n};\n\nexport default withContext(NewItemBar);\n","export default __webpack_public_path__ + \"static/media/backgroundPattern.c1ddb424.jpg\";","import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\nimport styled from 'styled-components';\nimport pattern from 'assets/images/backgroundPattern.jpg'\n\nexport const GlobalStyle = createGlobalStyle`\n${normalize}\n\n*, ::after, ::before {\n  box-sizing: border-box;\n  -webkit-font-smoothing: antialiased;            //CSS antialiasing cheatsheet\n  -moz-osx-font-smoothing: grayscale;\n}\n\nhtml  {\n  font-size: 62.5%;\n}\n\nbody {\n  height: 100vh;\n    font-size: 1.6rem;\n    margin: 0 ;\n    font-family: \"Poppins\", sans-serif;\n    background-color: white;\n    word-break: break-word;\n    background-image: url(${pattern});\n    overscroll-behavior: none;\n`;\n\nexport const StyledBackdrop = styled.div`\n  width: 100vw;\n  height: 100vh;\n  opacity: 60%;\n  background-color: black;\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 0;\n  position: fixed;\n`;\n","export const theme = {\n  colors: {\n    white: '#FFFFFF',\n    webOrange: '#FFA502',\n    torchRed: '#FF0249',\n    japaneseLaurel: '#10830B',\n    toreaBay: '#15259D',\n    vividViolet: '#853597',\n    lightLipstick: '#E2005A',\n    lipstick: '#AE0046',\n    desertStorm: '#F1F1EF',\n    silver: '#CCCCCC',\n    grey: '#808080',\n    lightGrey: '#E0E0E0',\n    mineShaft: '#222222',\n    black: '#000000',\n  },\n\n  font: {\n    light: 300,\n    regular: 400,\n    bold: 600,\n  },\n\n  breakpoints: {\n    xsmall: 470,\n    small: 598,\n    medium: 768,\n    large: 1024,\n  },\n  shadows: {\n    boxShadow: '0 5px 20px -5px rgba(128, 128, 128, 0.8)',\n    boxShadowDark: '5px 5px 15px -5px rgba(0, 0, 0, 0.5)',\n    quoteBoxShadow: '-5px 5px 15px -5px rgba(0, 0, 0, 0.6)',\n    textShadow: '-1px 3px 3px #bfbfbf',\n    modalShadow: '0 10px 20px -5px rgba(0, 0, 0, .8);',\n    popupShadow: '0 10px 20px -5px rgba(0, 0, 0, .8);',\n  },\n\n  easeOut: 'cubic-bezier(0.4, 0.2, 0.2, 1)',\n};\n","import axios from 'axios';\n\nconst { REACT_APP_DB_ID, REACT_APP_API_KEY } = process.env;\n\nexport const BASE_URL = `https://api.airtable.com/v0/${REACT_APP_DB_ID}`;\n\nexport const axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    Authorization: `Bearer ${REACT_APP_API_KEY}`,\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const apiEndpoints = {\n  booksList: '/books?view=Grid%20view',\n  bookDetails: '/books',\n  authorsList: '/authors?view=Grid%20view',\n  authorDetails: '/authors',\n  notesList: '/notes?view=Grid%20view',\n  noteDetails: '/notes',\n};\n\n// export const axiosConfig = {\n//   headers: {\n//     Authorization: `Bearer ${REACT_APP_API_KEY}`,\n    \n//   },\n// };\n\n\n//==================================\n\nimport Airtable from 'airtable';\n\nexport const base = new Airtable({ apiKey: `${REACT_APP_API_KEY}`}).base(`${REACT_APP_DB_ID}`);\n\n\n\n\n\n\n\nconst API_URL = `https://api.airtable.com/v0/${REACT_APP_DB_ID}`;\n\nconst request = async (endpoint, method = 'GET', data = null) => {\n  const requestConfig = {\n    method,\n    headers: {\n      Authorization: `Bearer ${REACT_APP_API_KEY}`,\n      'Content-Type': 'application/json',\n    },\n  };\n\n  if (method === 'POST' || method === 'PATCH') requestConfig.body = JSON.stringify(data);\n\n  const url = `${API_URL}${endpoint}`;\n\n  const response = await fetch(url, requestConfig);\n\n  if (!response.ok) throw new Error(response.statusText);\n\n  const getData = await response.json();\n\n  if (!getData) {\n    throw new Error('Something happened - no data');\n  }\n\n  return getData;\n};\n\nconst get = endpoint => request(endpoint);\n\nconst post = (endpoint, data) => request(endpoint, 'POST', data);\n\nconst patch = (endpoint, data) => request(endpoint, 'PATCH', data);\n\nconst _delete = endpoint => request(endpoint, 'DELETE');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  get,\n  post,\n  patch,\n  delete: _delete,\n};\n","import { useState, useEffect } from 'react';\nimport { base } from 'airtable/base';\n\n\nconst useFetchData = (pageSize, sort, table) => {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    base(`${table}`)\n      .select({ view: 'Grid view', pageSize: pageSize, sort: sort })\n      .eachPage(\n        (records, fetchNextPage) => {\n          setItems(records);\n          // fetchNextPage();\n        },\n        function (err) {\n          if (err) {\n            console.error(err);\n            return;\n          }\n        },\n      );\n  }, []);\n\n  return {\n    items,\n    setItems,\n  };\n};\n\nexport default useFetchData;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router';\n\nconst useGetCurrentPage = () => {\n  const [pageType, setPageType] = useState();\n  const location = useLocation();\n\n  const setCurrentPage = () => {\n    const pageTypes = ['home', 'books', 'authors', 'notes', 'quotes'];\n\n    const [currentPage] = pageTypes.filter(page => location.pathname.includes(page));\n    if (pageType !== currentPage) {\n      setPageType(currentPage);\n    }\n    console.log('current page from GetCurrentPage:', currentPage);\n  };\n\n  useEffect(() => {\n    setCurrentPage();\n  });\n\n  return pageType\n};\n\nexport default useGetCurrentPage;\n","import { useState, useEffect } from 'react';\n\nfunction getStorageValue(key, defaultValue) {\n  // getting stored value\n  if (typeof window !== 'undefined') {\n    const saved = localStorage.getItem(key);\n    const initial = saved !== null ? JSON.parse(saved) : defaultValue;\n    return initial;\n  }\n}\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [value, setValue] = useState(() => {\n    return getStorageValue(key, defaultValue);\n  });\n\n  useEffect(() => {\n    // storing input name\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return [value, setValue];\n};\n\nexport default useLocalStorage;\n","import styled from 'styled-components';\nimport Paragraph from '../../atoms/Paragraph/Paragraph';\nimport MobileNavigation from 'components/organisms/MobileNavigation';\n// import { MdAlternateEmail } from 'react-icons/md';\nimport { FaGithub } from 'react-icons/fa';\n\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.white};\n  background-color: ${({ theme }) => theme.colors.lipstick};\n  height: 8rem;\n  width: 100vw;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  z-index: 9999;\n`;\n\nconst StyledParagraph = styled(Paragraph)`\n  margin: 0;\n  color: ${({theme}) => theme.colors.white};\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: none;\n  }\n`;\n\nconst Link = styled.a`\n  color: ${({ theme }) => theme.colors.white};\n  transition: color 0.3s;\n  margin: 0;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: none;\n  }\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.black};\n  }\n`;\n\nconst List = styled.ul`\n  margin: 0;\n  padding: 0;\n  display: inline-flex;\n  gap: 10px;\n`;\n\nconst Item = styled.li`\n  list-style: none;\n`;\n\nexport const styleIcon = (Icon) => styled(Icon)`\nfont-size: 3rem;\n`;\n\nexport const contact = [\n  {\n    name: 'github',\n    url: 'https://github.com/patrycja-i-lesniak',\n    Icon: styleIcon(FaGithub),\n  },\n\n  // {\n  //   name: 'email',\n  //   url: 'mailto: patrycja.lesniak@gmail.com',\n  //   Icon: styleIcon(MdAlternateEmail),\n  // },\n];\n\nconst ItemList = () => (\n  <List>\n    {contact.map(({ name, url, Icon }) => (\n      <Item key={name}>\n        <Link href={url} title={name} target=\"_blank\" rel=\"noreferrer\">\n          <Icon />\n        </Link>\n      </Item>\n    ))}\n  </List>\n);\n\nconst Footer = () => (\n  <StyledWrapper>\n    <StyledParagraph>© 2021 | Coded by Patrycja Leśniak</StyledParagraph>\n    <ItemList />\n    <MobileNavigation />\n  </StyledWrapper>\n);\n\nexport default Footer;\n","import { useState, useEffect } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router';\n\nimport plusIcon from 'assets/icons/plus.svg';\nimport PageContext from 'context';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport NewItemBar from 'components/organisms/NewItemBar';\nimport { GlobalStyle, StyledBackdrop } from 'theme/GlobalStyle';\nimport { theme } from 'theme/theme';\n\nimport {useGetCurrentPage} from 'customHooks'\n\nconst StyledButtonIcon = styled(ButtonIcon)`\n  border-radius: 50%;\n  position: fixed;\n  bottom: 100px;\n  right: 20px;\n  z-index: 999;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n`;\n\nconst MainTemplate = ({ children}) => {\n  const [isNewItemBarVisible, setNewItemBarVisible] = useState(false);\n\n  const pageType = useGetCurrentPage();\n\n  const toggleNewItemBar = () => {\n    setNewItemBarVisible(!isNewItemBarVisible);\n  };\n\n  return (\n    <div>\n      <PageContext.Provider value={pageType}>\n        <GlobalStyle />\n        <ThemeProvider theme={theme}>\n          {children}\n          <NewItemBar isVisible={isNewItemBarVisible} toggleNewItemBar={toggleNewItemBar} />\n          {pageType === 'home' || pageType === 'quotes' || isNewItemBarVisible ? null : (\n            <StyledButtonIcon icon={plusIcon} onClick={toggleNewItemBar} />\n          )}\n          {isNewItemBarVisible && <StyledBackdrop onClick={toggleNewItemBar} />}\n        </ThemeProvider>\n      </PageContext.Provider>\n    </div>\n  );\n};\n\nMainTemplate.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default MainTemplate;\n","export default __webpack_public_path__ + \"static/media/myBooksLogoBlack.a9a80186.svg\";","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nimport myBooksLogoBlack from 'assets/icons/myBooksLogoBlack.svg';\nimport Button from 'components/atoms/Button/Button';\n\nexport const StyledWrapper = styled.div`\n  display: grid;\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  background-color: ${({ theme }) => theme.colors.lipstick};\n  grid-template-columns: 1fr 280px 120px;\n  align-items: end;\n  height: 80px;\n  padding: 20px 40px;\n  z-index: 9999;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.large}px) {\n    grid-template-columns: 1fr 120px;\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    grid-template-columns: 1fr;\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    height: 60px;\n    padding: 0;\n    align-items: center;\n  }\n`;\n\nexport const StyledNavigationWrapper = styled.nav`\n  display: grid;\n  grid-template-columns: repeat(4, auto);\n  align-items: end;\n  justify-content: start;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    justify-content: center;\n  }\n`;\n\nexport const StyledLogoLink = styled(NavLink)`\n  display: block;\n  width: 200px;\n  height: 40px;\n  background-position: 50% 50%;\n  background-image: url(${myBooksLogoBlack});\n  background-repeat: no-repeat;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    width: 150px;\n  }\n`;\n\nexport const StyledLinkList = styled.ul`\n  margin: 0;\n  list-style: none;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    padding: 0;\n  }\n`;\n\nconst activeClassName = 'active';\n\nexport const StyledItem = styled(NavLink).attrs(() => ({ activeClassName }))`\n  padding: 0 20px 0 0;\n  list-style: none;\n  text-decoration: none;\n  font-size: 1.7rem;\n  color: ${({ theme }) => theme.colors.white};\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: none;\n  }\n\n  &.${activeClassName} {\n    font-weight: 700;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  font-weight: 600;\n  font-size: 1.6rem;\n  height: 36px;\n  text-transform: uppercase;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: none;\n  }\n`;\n\n","export default __webpack_public_path__ + \"static/media/search.c8fb929d.svg\";","import styled from 'styled-components';\nimport searchIcon from 'assets/icons/search.svg';\nimport {Field} from 'formik';\n\nexport const Search = styled(Field)`\n  position: relative;\n  color: ${({ theme }) => theme.colors.lipstick};\n  padding: 10px 20px 10px 40px;\n  font-size: 1.2rem;\n  background-image: url(${searchIcon});\n  background-size: 15px;\n  background-position: 15px 50%;\n  background-repeat: no-repeat;\n  transition: 0.1s all;\n  outline: none;\n  border: 1px solid ${({ theme }) => theme.colors.desertStorm};\n  width: 200px;\n  height: 36px;\n  border-radius: 3px;\n\n  &:focus {\n    border: 1px solid ${({ theme }) => theme.colors.lipstick};\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.grey};\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.large}px) {\n    display: none;\n  }\n`;\n\nexport default Search;\n","import { useState, useEffect } from 'react';\nimport { Search } from './styled';\nimport Button from 'components/atoms/Button/Button';\n// import { useLocalStorage } from 'useLocalStorage';\nimport { Formik, Form, Field } from 'formik';\n\nconst SearchBox = () => {\n  const [text, setText] = useState([]);\n\n  return (\n    <Formik\n      initialValues={{ query: '' }}\n      onSubmit={(values, { setSubmitting }) => {\n        setInput('');\n        otherStuff();\n\n        const book = {\n          records: [\n            {\n              fields: {\n                title: values.title,\n                firstName: values.firstName,\n                lastName: values.lastName,\n              },\n            },\n          ],\n        };\n\n        base('books').find('recEGlb6fFv9fItYx', function (err, record) {\n          if (err) {\n            console.error(err);\n            return;\n          }\n          console.log('Retrieved', record.id);\n        });\n      }}\n    >\n      {formikProps => (\n        <Form>\n          <div>\n            <Search\n              name=\"query\"\n              onChange={formikProps.handleChange}\n              value={formikProps.values.query}\n            />\n\n            <button type=\"submit\" disabled={!formikProps.values.query}>\n              Submit\n            </button>\n\n            {/* <button\n              type=\"reset\"\n              disabled={!formikProps.values.query}\n              onClick={formikProps.resetForm}\n            >\n              Reset\n            </button> */}\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default SearchBox;\n","import { NavLink } from 'react-router-dom';\nimport {\n  StyledWrapper,\n  StyledNavigationWrapper,\n  StyledLogoLink,\n  StyledLinkList,\n  StyledItem,\n  StyledButton,\n} from './styled';\n\nimport SearchBox from 'components/atoms/SearchBox';\n\nconst NavigationBar = () => (\n  <StyledWrapper>\n    <StyledNavigationWrapper>\n      <StyledLogoLink to=\"/\" />\n      <StyledLinkList>\n        <StyledItem as={NavLink} to=\"/books\">\n          books\n        </StyledItem>\n        <StyledItem as={NavLink} to=\"/authors\">\n          authors\n        </StyledItem>\n        <StyledItem as={NavLink} to=\"/notes\">\n          notes\n        </StyledItem>\n        <StyledItem as={NavLink} to=\"/quotes\">\n          quotes\n        </StyledItem>\n      </StyledLinkList>\n    </StyledNavigationWrapper>\n    <SearchBox placeholder=\"search by title, author or ISBN\" />\n    <StyledButton secondary>log in</StyledButton>\n  </StyledWrapper>\n);\n\nexport default NavigationBar;\n","import styled from 'styled-components';\nimport { FaBars, FaBookOpen, FaUserEdit, FaPencilAlt } from 'react-icons/fa';\nimport { ImQuotesLeft } from 'react-icons/im';\nimport { NavLink } from 'react-router-dom';\n\nconst StyledWrapper = styled.ul`\n  display: flex;\n  flex-wrap: nowrap;\n  gap: 5rem;\n  padding: 0;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    gap: 3rem;\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.xmall}px) {\n    gap: 1rem;\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: none;\n  }\n`;\n\nconst activeClassName = 'active';\n\nconst StyledItem = styled(NavLink).attrs(() => ({ activeClassName }))`\n  color: ${({ theme }) => theme.colors.white};\n  font-size: 4.5rem;\n  list-style: none;\n  text-decoration: none;\n\n  &.${activeClassName} {\n    color: ${({ theme }) => theme.colors.black};\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    font-size: 4rem;\n  }\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    font-size: 3.5rem;\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: none;\n  }\n`;\n\nconst MobileNavigation = () => (\n  <StyledWrapper>\n    <StyledItem as={NavLink} to=\"/home\">\n      <FaBars />\n    </StyledItem>\n    <StyledItem as={NavLink} to=\"/books\">\n      <FaBookOpen />\n    </StyledItem>\n    <StyledItem as={NavLink} to=\"/authors\">\n      <FaUserEdit />\n    </StyledItem>\n    <StyledItem as={NavLink} to=\"/notes\">\n      <FaPencilAlt />\n    </StyledItem>\n    <StyledItem as={NavLink} to=\"/quotes\">\n      <ImQuotesLeft />\n    </StyledItem>\n  </StyledWrapper>\n);\n\nexport default MobileNavigation;\n","import PropTypes from 'prop-types';\nimport NavigationBar from 'components/organisms/NavigationBar/NavigationBar';\nimport Footer from 'components/molecules/FooterNavigation';\nimport withContext from 'hoc/withContext';\n\nconst UserPageTemplate = ({ children, pageContext}) => (\n  <>\n    <NavigationBar pageContext={pageContext}/>\n    {children}\n    <Footer />\n  </>\n);\n\nUserPageTemplate.propTypes = {\n  children: PropTypes.object,\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'notes', 'quotes']),\n};\n\nUserPageTemplate.defaultProps = {\n  pageContext: 'home',\n};\n\nexport default withContext(UserPageTemplate);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1080px;\n  max-width: calc(100% - 2 * 20px);\n  margin: 100px auto 150px;\n`;\n","export default __webpack_public_path__ + \"static/media/bookIcon.be9287dd.svg\";","export default __webpack_public_path__ + \"static/media/book1.69689256.jpg\";","export default __webpack_public_path__ + \"static/media/readingIcon.6c279f8f.svg\";","export default __webpack_public_path__ + \"static/media/book2.dec47e20.jpg\";","export default __webpack_public_path__ + \"static/media/buyIcon.df481aba.svg\";","export default __webpack_public_path__ + \"static/media/book3.6655dd05.jpg\";","import styled from 'styled-components';\n\nimport BookIcon from 'assets/icons/bookIcon.svg';\nimport Book1 from 'assets/images/book1.jpg';\nimport ReadingIcon from 'assets/icons/readingIcon.svg';\nimport Book2 from 'assets/images/book2.jpg';\nimport BuyIcon from 'assets/icons/buyIcon.svg';\nimport Book3 from 'assets/images/book3.jpg';\n\nexport const Header = styled.h1``;\n\nexport const Paragraph = styled.p`\n  line-height: 1.5;\n  font-size: 1.3rem;\n`;\n\nexport const BoxFront = styled.div`\n  ${Header} {\n    font-size: 2.5rem;\n    font-weight: 600;\n    display: inline-block;\n    vertical-align: middle;\n    color: white;\n\n    &:before {\n      display: block;\n      width: 80px;\n      height: 80px;\n      margin: 0 auto 0.7rem;\n      background-size: contain;\n      background-position: center;\n    }\n  }\n`;\nexport const BoxBack = styled.div``;\nexport const BoxText = styled.div``;\n\nexport const Article = styled.div`\n  width: 100%;\n  height: 450px;\n  color: #fff;\n  perspective: 1200px;\n  position: relative;\n  text-align: center;\n  display: flex;\n  flex-shrink: 1;\n\n  ${BoxFront}, ${BoxBack} {\n    transition: transform 1s cubic-bezier(0.4, 0.2, 0.2, 1);\n    backface-visibility: hidden;\n    overflow: hidden;\n    position: relative;\n    display: flex;\n\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n  }\n\n  ${BoxFront} {\n    position: absolute;\n    z-index: 2;\n    /* width: 100%;\n    height: 100%; */\n    top: 0;\n    left: 0;\n    transform: rotateY(0deg);\n    background-size: cover;\n    background-position: center;\n    background-color: hsl(0, 0%, 18%);\n    background-blend-mode: overlay;\n\n    ${BoxText} {\n      transform: translate3d(0, 0, 0);\n      opacity: 1;\n    }\n  }\n\n  ${BoxBack} {\n    transform: rotateY(180deg);\n    background: #ae0046;\n    position: relative;\n    z-index: 1;\n\n    ${BoxText} {\n      padding: 0 1.7rem;\n      transform: translate3d(80%, 0, 0);\n    }\n  }\n\n  ${BoxText} {\n    transition: transform 0.75s cubic-bezier(0.4, 0.2, 0.2, 1) opacity 0.5s linear;\n    opacity: 0;\n  }\n\n  &:hover {\n    ${BoxFront} {\n      transform: rotateY(-180deg);\n\n      ${BoxText} {\n        transform: translate3d(-200%, 0, 0);\n        opacity: 0;\n      }\n    }\n\n    ${BoxBack} {\n      transform: rotateY(0deg);\n\n      ${BoxText} {\n        transform: translate3d(0, 0, 0);\n        opacity: 1;\n      }\n    }\n  }\n\n  &:nth-child(1) {\n    ${BoxFront} {\n      background-image: url(${Book1});\n\n      ${Header}:before {\n        background-image: url(${BookIcon});\n      }\n    }\n  }\n\n  &:nth-child(2) {\n    ${BoxFront} {\n      background-image: url(${Book2});\n      ${Header}:before {\n        background-image: url(${ReadingIcon});\n      }\n    }\n  }\n\n  &:nth-child(3) {\n    ${BoxFront} {\n      background-image: url(${Book3});\n      ${Header}:before {\n        background-image: url(${BuyIcon});\n      }\n    }\n  }\n`;\n","// import styles from 'components/atoms/Box/Box.module.scss';\nimport PropTypes from 'prop-types';\n\nimport { Header, Paragraph, Article, BoxFront, BoxBack, BoxText } from './styled';\n\nconst Box = ({ header, content }) => (\n  <Article>\n    <BoxFront>\n      <BoxText>\n        <Header>{header}</Header>\n      </BoxText>\n    </BoxFront>\n    <BoxBack>\n      <BoxText>\n        <Paragraph>{content}</Paragraph>\n      </BoxText>\n    </BoxBack>\n  </Article>\n\n  //  <article className={styles.article}>\n  //   <div className={styles.boxFront}>\n  //     <div className={styles.text}>\n  //       <h1>{header}</h1>\n  //     </div>\n  //   </div>\n  //   <div className={styles.boxBack}>\n  //     <div className={styles.text}>\n  //       <p>{content}</p>\n  //     </div>\n  //   </div>\n  // </article>\n);\n\nBox.propTypes = {\n  header: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nexport default Box;\n","import styled from 'styled-components';\nimport Box from \"components/atoms/Box\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  gap: 20px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n   flex-wrap: wrap;\n  }\n`;\n\nconst RotaryBox = () => (\n  <>\n    <Wrapper>\n      <Box\n        header=\"I read\"\n        content=\"Lorem, ipsum dolor sit amet consectetur adipisicing elit.Molestias aut, repellat ipsum facere voluptate dicta obcaecati deserunt nobis suscipit eaque?\"\n      />\n      <Box\n        header=\"Want to read\"\n        content=\"Lorem, ipsum dolor sit amet consectetur adipisicing elit.Molestias aut, repellat ipsum facere voluptate dicta obcaecati deserunt nobis suscipit eaque?\"\n      />\n      <Box\n       header=\"I want to buy\"\n        content=\"Lorem, ipsum dolor sit amet consectetur adipisicing elit.Molestias aut, repellat ipsum facere voluptate dicta obcaecati deserunt nobis suscipit eaque?\"\n      />\n    </Wrapper>\n  </>\n);\n\nexport default RotaryBox;\n\n","export default __webpack_public_path__ + \"static/media/background.06d094c3.jpg\";","import styled, {css} from 'styled-components';\nimport Button from 'components/atoms/Button/Button'\nimport background from 'assets/images/background.jpg';\n\nexport const QuoteWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 300px;\n  margin: 120px auto 50px;\n  padding: 50px;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadow};\n  position: relative;\n  justify-content: center;\n  background: linear-gradient(-45deg, rgba(174, 0, 70, 0.9), rgba(0, 0, 0, 0.7)),\n    url(${background}) center center / cover no-repeat;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    padding: 30px 20px;\n    margin: 60px auto 40px;\n  }\n`;\nexport const QuoteSource = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  font-size: 1rem;\n  font-style: italic;\n  padding: 20px 50px 0 0;\n  gap: 10px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    padding: 20px 30px 40px 0;\n    gap: 0;\n  }\n`;\n\nexport const StyledQuote = styled.h2`\n  color: ${({ theme }) => theme.colors.white};\n  line-height: 1.3;\n  margin: 0;\n  text-align: center;\n  font-family: 'Caveat', cursive;\n  font-size: 2.7rem;\n  font-weight: 200;\n\n  ${({ secondary }) =>\n    secondary &&\n    css`\n      font-size: 2.2rem;\n      line-height:1;\n\n    `}\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    padding: 0 0 10px;\n    margin: 0;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  position: absolute;\n  font-weight: 600;\n  left: 50px;\n  bottom: 50px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    left: 20px;\n    bottom: 20px;\n  }\n`;\n\n","import React, { useState, useEffect } from 'react';\n\nimport api from 'api';\n// import Button from 'components/atoms/Button/Button';\n\nimport { QuoteWrapper, QuoteSource, StyledQuote, StyledButton } from './styled.js';\n\nconst QuotesBox = () => {\n  const [quotes, setQuotes] = useState({\n    fields: {\n      content: '',\n      author: '',\n      title: '',\n    },\n  });\n\n  const getQuote = async () => {\n    const data = await api.get('/quotes');\n    let randomNumber = Math.floor(Math.random() * data.records.length);\n    setQuotes(data.records[randomNumber]);\n  };\n\n  useEffect(() => {\n    getQuote();\n    return () => {\n      setQuotes();\n    };\n  }, []);\n\n  return (\n    <QuoteWrapper>\n      <StyledQuote>{quotes.fields.quote}</StyledQuote>\n      <QuoteSource>\n        <StyledQuote secondary>{quotes.fields.title}</StyledQuote>\n        <StyledQuote secondary>{quotes.fields.author}</StyledQuote>\n      </QuoteSource>\n      <StyledButton onClick={getQuote}>Get new quote</StyledButton>\n    </QuoteWrapper>\n  );\n};\n\nexport default QuotesBox;\n","export const capitalizeFirstLetter = string => {\n  const firstLetter = string.charAt(0).toUpperCase();\n  const restString = string.slice(1).toLowerCase();\n\n  return `${firstLetter}${restString}`;\n};\n","import styled, { css } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport UserPageTemplate from './UserPageTemplate';\nimport Header from 'components/atoms/Header/Header';\nimport { Container } from 'components/atoms/Container';\nimport withContext from 'hoc/withContext';\nimport RotaryBox from 'components/molecules/RotaryBox/RotaryBox';\nimport QuotesBox from 'components/organisms/QuotesBox';\nimport { capitalizeFirstLetter } from 'helpers/capitalizeFirstLetter';\n\nconst StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 200px);\n  grid-gap: 2rem;\n  margin: 4rem auto 4rem ;\n  justify-items: center;\n  justify-content: center;\n  position: relative;\n  padding-bottom: 120px;\n\n  ${({ notes }) =>\n    notes &&\n    css`\n      grid-template-columns: repeat(auto-fill, 340px);\n    `}\n\n  ${({ quotes }) =>\n    quotes &&\n    css`\n      grid-template-columns: 1fr;\n    `}\n`;\n\nconst GridTemplate = ({ children, pageContext }) => (\n  <UserPageTemplate>\n    <Container>\n      {pageContext === 'home' ? (\n        <>\n          <QuotesBox />\n          <RotaryBox />\n\n          <Header>Last added books</Header>\n        </>\n      ) : (\n        <Header>{capitalizeFirstLetter(pageContext)}</Header>\n      )}\n\n      {pageContext === 'notes' ? (\n        <StyledGrid notes>{children}</StyledGrid>\n      ) : pageContext === 'quotes' ? (\n        <StyledGrid quotes>{children}</StyledGrid>\n      ) : (\n        <StyledGrid>{children}</StyledGrid>\n      )}\n    </Container>\n  </UserPageTemplate>\n);\n\nGridTemplate.propTypes = {\n  children: PropTypes.node,\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'notes', 'quotes']),\n};\n\nGridTemplate.defaultProps = {\n  pageContext: 'home',\n};\n\nexport default withContext(GridTemplate);\n","import styled, { css } from \"styled-components\";\n\nexport const StyledArrow = styled.svg`\n    ${({ showMore }) => showMore && css`\n        transform: rotate(180deg);  \n    `}\n`;","import { StyledArrow } from \"./styled\";\nimport PropTypes from 'prop-types';\n\nexport const Arrow = ({ showMore }) => (\n    <StyledArrow\n        showMore={showMore}\n        width=\"12\"\n        height=\"12\"\n        fill=\"currentColor\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"M979.0208 301.99808l-47.104-47.04768-419.98848 419.9424-419.89632-419.9424-47.0528 47.0528 419.89632 419.93728v0.00512l47.09888 47.104 47.04256-47.0528z\"\n        />\n    </StyledArrow>\n);\n\nArrow.propTypes = {\n    showMore: PropTypes.bool,\n}\n\n\n\n\n\n","import styled, { css } from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-content: space-between;\n  width: 200px;\n  padding: 20px;\n  margin: 0;\n  transition: transform 0.3s;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadow};\n  background-color: ${({ theme }) => theme.colors.white};\n  position: relative;\n\n  &:hover {\n    transform: scale(1.03);\n    background-color: ${({ theme }) => theme.colors.lipstick};\n  }\n\n  ${({ notes }) =>\n    notes &&\n    css`\n      width: 340px;\n      &:hover {\n        background-color: ${({ theme }) => theme.colors.silver};\n      }\n    `}\n`;\n\nexport default Wrapper;","export default __webpack_public_path__ + \"static/media/mblSmall.d7646728.svg\";","import styled from 'styled-components';\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\nimport Wrapper from 'components/atoms/Wrapper';\nimport LogoSmall from 'assets/icons/mblSmall.svg';\n\nexport const StyledImage = styled.img`\n  width: 165px;\n  height: 225px;\n  background-color: ${({ theme }) => theme.colors.silver};\n  background-image: url(${LogoSmall});\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n  background-size: 45%;\n  margin-bottom: 10px;\n  cursor: pointer;\n\n  ${Wrapper}:hover & {\n    background-color: ${({ theme }) => theme.colors.lipstick};\n  }\n`;\n\nexport const StyledTitle = styled.h1`\n  color: ${({ theme }) => theme.colors.black};\n  font-size: 1.6rem;\n  font-weight: ${({ theme }) => theme.font.bold};\n  text-align: center;\n  margin-top: 10px 0 0;\n  text-decoration: none;\n\n  ${Wrapper}:hover & {\n    color: white;\n  }\n`;\n\nexport const StyledAuthor = styled.h2`\n  color: ${({ theme }) => theme.colors.black};\n  font-size: 1.4rem;\n  font-weight: ${({ theme }) => theme.font.regular};\n  margin: 0;\n  text-align: center;\n  text-decoration: none;\n\n  ${Wrapper}:hover & {\n    color: white;\n  }\n`;\n\nexport const StyledParagraph = styled(Paragraph)`\n  font-size: 1rem;\n  color: ${({ theme }) => theme.colors.grey};\n  ${Wrapper}:hover & {\n    color: white;\n  }\n`;\n\nexport const InnerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const StyledDate = styled.p``;\n\nexport const ShowMore = styled.button`\n  display: block;\n  border: none;\n  background: none;\n  padding: 2px;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 500;\n  margin: 0 auto 0;\n  color: ${({ theme }) => theme.colors.lipstick};\n  padding: 10px;\n\n  ${Wrapper}:hover & {\n    color: white;\n  }\n`;\n\nexport const ButtonContentWrapper = styled.span`\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-gap: 6px;\n  align-items: center;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Arrow } from 'components/atoms/Arrow';\nimport { Link } from 'react-router-dom';\nimport {\n  StyledImage,\n  StyledTitle,\n  StyledAuthor,\n  InnerWrapper,\n  StyledDate,\n  ButtonContentWrapper,\n  ShowMore,\n} from './styled';\nimport Wrapper from 'components/atoms/Wrapper';\nimport withContext from 'hoc/withContext';\n\nconst CardSmall = ({ book, author, note, pageContext }) => {\n  const [showMore, setShowMore] = useState(false);\n  return (\n    <>\n      {(pageContext === 'home' || pageContext === 'books') && (\n        <Wrapper>\n          <InnerWrapper>\n            <Link to={`books/${book.id}`}>\n              <StyledImage src={book.fields.imageUrl} />\n            </Link>\n            <StyledTitle>{book.fields.title}</StyledTitle>\n            <StyledAuthor>\n              {book.fields.firstName} {book.fields.lastName}\n            </StyledAuthor>\n          </InnerWrapper>\n        </Wrapper>\n      )}\n      {pageContext === 'authors' && (\n        <Wrapper>\n          <InnerWrapper>\n            <Link to={`authors/${author.id}`}>\n              <StyledImage src={author.fields.imageUrl} />\n            </Link>\n            <StyledTitle>\n              {author.fields.firstName} {author.fields.lastName}\n            </StyledTitle>\n          </InnerWrapper>\n        </Wrapper>\n      )}\n\n      {pageContext === 'notes' && (\n        <Wrapper notes>\n          <InnerWrapper>\n            <>\n              <StyledImage src={note.fields.imageUrl} />\n              <StyledTitle>{note.fields.title} </StyledTitle>\n              <StyledDate>{note.fields.date}</StyledDate>\n              {note.fields.content.length > 300 ? (\n                <>\n                  {showMore ? note.fields.content : `${note.fields.content.slice(0, 300)}...`}\n                  <ShowMore onClick={() => setShowMore(!showMore)}>\n                    <ButtonContentWrapper>\n                      <span>\n                        {showMore ? 'Show less' : 'Show more'}\n                        <Arrow showMore={showMore} />\n                      </span>\n                    </ButtonContentWrapper>\n                  </ShowMore>\n                </>\n              ) : (\n                <>{note.fields.content}</>\n              )}\n            </>\n          </InnerWrapper>\n        </Wrapper>\n      )}\n    </>\n  );\n};\n\nCardSmall.propTypes = {\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'notes', 'quotes']),\n  book: PropTypes.object,\n  author: PropTypes.object,\n  note: PropTypes.object,\n  handleDelete: PropTypes.func,\n};\n\nCardSmall.defaultProps = {\n  book: {},\n  author: {},\n  note: {},\n};\n\nexport default withContext(CardSmall);\n","import { useState, useEffect } from 'react';\n\nimport GridTemplate from 'templates/GridTemplate';\nimport CardSmall from 'components/molecules/Card/CardSmall';\nimport {useFetchData} from 'customHooks';\n\nconst Authors = () => {\n  const table = 'authors';\n  const pageSize = 12;\n  const sort = [{ field: 'lastName' }];\n  const { items: authors } = useFetchData(pageSize, sort, table);\n  console.log('data from Authors:', authors);\n\n  return (\n    <GridTemplate pageType=\"authors\">\n      {authors && authors.map(author => <CardSmall author={author} key={author.id} />)}\n    </GridTemplate>\n  );\n};\n\nexport default Authors;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport GridTemplate from 'templates/GridTemplate';\nimport CardSmall from 'components/molecules/Card/CardSmall';\nimport {useFetchData} from 'customHooks';\n\nconst Notes = () => {\n  const table = 'notes';\n  const pageSize = 6;\n  const sort = [{ field: 'date', direction: 'asc' }];\n  const { items: notes } = useFetchData(pageSize, sort, table);\n  console.log('data from Notes:', notes);\n\n  return (\n    <GridTemplate pageType=\"notes\">\n      {notes && notes.map(note => <CardSmall note={note} key={note.id} />)}\n    </GridTemplate>\n  );\n};\n\nNotes.propTypes = {\n  notes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      date: PropTypes.string,\n      imageUrl: PropTypes.string,\n    }),\n  ),\n};\n\nNotes.defaultProps = {\n  date: '',\n  imageUrl: '',\n};\n\nexport default Notes;\n","import { useState, useEffect } from 'react';\n\nimport GridTemplate from 'templates/GridTemplate';\nimport CardSmall from 'components/molecules/Card/CardSmall';\nimport {useFetchData} from 'customHooks';\n\nconst Books = () => {\n  const table = 'books';\n  const pageSize = 50;\n  const sort = [{ field: 'title', direction: 'asc' }];\n  const { items: books } = useFetchData(pageSize, sort, table);\n\n  return (\n    <GridTemplate pageType=\"books\">\n      {books &&\n        books.map((book, index) => (\n          <>\n            <CardSmall key={book.id} book={book} index={index} />\n          </>\n        ))}\n    </GridTemplate>\n  );\n};\n\nexport default Books;\n","import { useState, useEffect } from 'react';\n\nimport CardSmall from 'components/molecules/Card/CardSmall';\nimport {useFetchData} from 'customHooks';\n\nconst LastAddedBooks = () => {\n  const table = 'books';\n  const pageSize = 5;\n  const sort = [{ field: 'createdTime', direction: 'desc' }];\n  const { items: books } = useFetchData(pageSize, sort, table);\n  console.log('data from LastAddedBooks:', books);\n\n  return <>{books && books.map(book => <CardSmall book={book} key={book.id} />)}</>;\n};\n\nexport default LastAddedBooks;\n","import GridTemplate from 'templates/GridTemplate';\nimport PropTypes from 'prop-types';\nimport LastAddedBooks from 'components/molecules/LastAddedBooks';\n\nconst Home = () => (\n  <>\n    <GridTemplate pageType=\"home\">\n      <LastAddedBooks />\n    </GridTemplate>\n  </>\n);\n\nHome.propTypes = {\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'notes', 'quotes']),\n};\n\nHome.defaultProps = {\n  pageContext: 'home',\n};\n\nexport default Home;\n","import * as Yup from 'yup';\n\nYup.addMethod(Yup.date, 'stripEmptySDate', function () {\n  return this.transform(value => (value === '' ? undefined : value));\n});\n\nexport const validationSchema = Yup.object().shape({\n  quote: Yup.string().required('Required field is empty'),\n  author: Yup.string().min(2, 'Too Short!'),\n  title: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!'),\n  checked:  Yup.boolean().oneOf([true, false]),\n});\n","import styled, { css } from 'styled-components';\nimport { Form, Field } from 'formik';\nimport Button from 'components/atoms/Button/Button';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n  justify-content: center;\n  gap: 1rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    width: 100%;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  margin: 20px auto 30px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: inline-block;\n    margin: 10px auto 20px;\n  }\n`;\n\nexport const InputField = styled(Field)`\n  color: ${({ theme }) => theme.colors.lipstick};\n  font-size: 1.5rem;\n  border: none;\n  line-height: 2.5;\n  border: 1px solid ${({ theme }) => theme.colors.silver};\n  border-radius: 5px;\n  outline: none;\n  padding: 5px 0 2px 10px;\n  font-weight: bold;\n  height: 4rem;\n\n  ::placeholder {\n    font-size: 1.2rem;\n    color: ${({ theme }) => theme.colors.grey};\n    :focus {\n      color: transparent;\n    }\n  }\n\n  :active {\n    outline: 1px solid ${({ theme }) => theme.colors.lipstick};\n  }\n\n  ${({ textarea }) =>\n    textarea &&\n    css`\n      height: 12rem;\n\n      line-height: 1.5;\n\n      resize: none;\n      outline: none;\n      width: 100%;\n      font-weight: 400;\n    `}\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 1.2rem;\n  color: ${({ theme }) => theme.colors.grey};\n  padding: 3px;\n  background-color: white;\n  display: inline-block;\n  max-width: 120px;\n  margin: 0 0 -20px 10px;\n  z-index: 2;\n`;\n\nexport const Label = styled.label`\n  width: 3rem;\n  height: 3rem;\n  font-size: 3rem;\n  color: ${({ theme }) => theme.colors.lipstick};\n`;\n\nexport const Checkbox = styled.input.attrs({ type: 'checkbox' })`\n  width: 3rem;\n  height: 3rem;\n  display: none;\n`;\n"," export const initialValues = {\n  quote: '',\n  author: '',\n  title: '',\n  checked: false,\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Formik, ErrorMessage } from 'formik';\n\nimport api from 'api';\nimport { validationSchema } from './validationSchema';\nimport RequiredBox from 'components/molecules/RequredBox/RequiredBox';\nimport ErrorPopup from 'components/molecules/Popups/ErrorPopup';\nimport SuccessPopup from 'components/molecules/Popups/SuccessPopup';\nimport { StyledForm, StyledButton, InputField, StyledLabel, Checkbox, Label } from './styled';\nimport { initialValues } from 'components/molecules/NewQuoteForm/initialValues';\nimport { AiFillHeart, AiOutlineHeart } from 'react-icons/ai';\n\nconst NewQuoteForm = (...props) => {\n  const [popup, setPopup] = useState(false);\n  const [errorPopup, setErrorPopup] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [state, setState] = useState();\n\n\n  const toggleCheckbox = () => {\n    setChecked(!checked);\n  };\n\n  const history = useHistory();\n\n  const handlePopupClose = () => {\n    setPopup(false);\n    setErrorPopup(false);\n    console.log('Close popup');\n  };\n\n  const handleSuccess = () => {\n    history.push('/');\n    history.replace('quotes');\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={async (values, { resetForm }) => {\n        handleSuccess();\n        console.log('Values from formik', values);\n\n        const quote = {\n          records: [\n            {\n              fields: {\n                quote: values.quote,\n                title: values.title,\n                author: values.author,\n                checked: values.checked,\n              },\n            },\n          ],\n        };\n\n        api\n          .post('/quotes', quote)\n          .then(response => {\n            setPopup(true);\n            resetForm();\n            console.log('Response from API in formik', response);\n            console.log('Successfully submitted.');\n          })\n          .catch(err => {\n            setErrorPopup(true);\n            console.error(err);\n            console.log('The form could not be sent.');\n          });\n      }}\n    >\n      {({ values, handleChange, handleBlur, handleSubmit, handleReset }) => (\n        <StyledForm method=\"POST\" autoComplete=\"off\" onSubmit={handleSubmit}>\n          <>\n            {errorPopup && (\n              <ErrorPopup handlePopupClose={handlePopupClose} handleReset={handleReset} />\n            )}\n            {popup && (\n              <SuccessPopup handlePopupClose={handlePopupClose} handleReset={handleReset} />\n            )}\n          </>\n          <>\n            <StyledLabel as=\"label\" htmlFor=\"quote\">\n              quote\n            </StyledLabel>\n            <InputField\n              textarea\n              type=\"text\"\n              name=\"quote\"\n              as=\"textarea\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              values={values.quote}\n            />\n            <ErrorMessage name=\"quote\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            <StyledLabel as=\"label\" htmlFor=\"title\">\n              title\n            </StyledLabel>\n            <InputField\n              as=\"input\"\n              type=\"text\"\n              name=\"title\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.title}\n              autoComplete=\"given-name\"\n            />\n            <ErrorMessage name=\"title\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            <StyledLabel as=\"label\" htmlFor=\"author\">\n              author\n            </StyledLabel>\n            <InputField\n              as=\"input\"\n              type=\"text\"\n              name=\"author\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.author}\n              autoComplete=\"given-name\"\n            />\n            <ErrorMessage name=\"author\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            <Label forHtml=\"checked\">\n              {checked ? <AiFillHeart /> : <AiOutlineHeart />}\n              <Checkbox\n                type=\"checkbox\"\n                name=\"checked\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.checked}\n                checked={checked}\n                onClick={toggleCheckbox}\n              />\n            </Label>\n          </>\n          <StyledButton type=\"submit\">Add new quote</StyledButton>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewQuoteForm;\n","import * as Yup from 'yup';\n\nYup.addMethod(Yup.date, 'stripEmptySDate', function () {\n  return this.transform(value => (value === '' ? undefined : value));\n});\n\nexport const validationSchema = Yup.object().shape({\n  quote: Yup.string().required('Required field is empty'),\n  author: Yup.string(),\n  title: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!'),\n  checked: Yup.boolean().oneOf([false, true]),\n});\n","export const initialValues = {\n  quote: '',\n  author: '',\n  title: '',\n  checked: false,\n};\n","import styled, { css } from 'styled-components';\nimport Button from 'components/atoms/Button/Button.js';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon.js';\n\nexport const Top = styled.div`\n  height: 0.7rem;\n  background-color: ${({ theme }) => theme.colors.lipstick};\n`;\nexport const StyledWrapper = styled.div`\n  display: grid;\n  padding-bottom: 2rem;\n  border-radius: 1rem;\n  overflow: hidden;\n  background-color: ${({ theme }) => theme.colors.lightGrey};\n  box-shadow: ${({ theme }) => theme.shadows.quoteBoxShadow};\n  &:hover {\n    ${Top} {\n      background-color: ${({ theme }) => theme.colors.lightLipstick};\n    }\n  }\n`;\n\nexport const QuoteWrapper = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr;\n`;\n\nexport const Quote = styled.p`\n  padding: 0 1.5rem 1rem;\n  margin: 1rem 1rem;\n  font-sie: 2rem;\n  line-height: 1.5;\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.mainShaft};\n`;\n\nexport const Text = styled.h1`\n  font-size: 1.3rem;\n  color: ${({ theme }) => theme.colors.lipstick};\n  padding: 0 1.5rem;\n  text-align: right;\n  font-weight: 600;\n`;\n\nexport const ButtonSmall = styled.button`\n  width: 50px;\n  height: 30px;\n  margin: 5px 0 5px 20px;\n  border-radius: 0.5rem;\n  font-size: 1.3rem;\n  font-weight: 600;\n  padding: 0.5rem 1rem;\n  color: ${({ theme }) => theme.colors.white};\n  border: 1px solid ${({ theme }) => theme.colors.lipstick};\n  background-color: ${({ theme }) => theme.colors.lipstick};\n  ${({ secondary }) =>\n    secondary &&\n    css`\n      width: 70px;\n      border: 1px solid ${({ theme }) => theme.colors.grey};\n      background-color: ${({ theme }) => theme.colors.grey};\n    `};\n`;\n\nexport const StyledButtonIcon = styled(ButtonIcon)`\n  position: absolute;\n  top: 20px;\n  right: 60px;\n  width: 50px;\n  border-radius: 50%;\n  color: ${({ theme }) => theme.colors.white};\n  border: 1px solid ${({ theme }) => theme.colors.lipstick};\n  background: ${({ theme }) => theme.colors.lipstick};\n`;\n\nexport const Wrapper = styled.div`\n  display: grid;\n  justify-content: end;\n  padding: 10px 10px 0 0;\n  margin: 0;\n`;\n\nexport const Checkbox = styled.input.attrs({ type: 'checkbox' })`\n  width: 3rem;\n  height: 3rem;\n`;\n\nexport const Label = styled.label`\n  width: 3rem;\n  height: 3rem;\n  font-size: 3rem;\n  color: ${({ theme }) => theme.colors.lipstick};\n`;\n\nexport const Icon = styled.div`\n`;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Formik, Form, Field } from 'formik';\n\nimport api from 'api';\nimport { validationSchema } from './validationSchema.js';\nimport { initialValues } from './initialValues.js';\nimport {\n  StyledWrapper,\n  Top,\n  Text,\n  Quote,\n  ButtonSmall,\n  QuoteWrapper,\n} from './styled.js';\nimport { AiFillHeart, AiOutlineHeart } from 'react-icons/ai';\nimport EditQuotePopup from 'components/molecules/Popups/EditQuotePopup/index.js';\n\nconst Label = styled.label`\n  width: 3rem;\n  height: 3rem;\n  font-size: 3rem;\n  color: ${({ theme }) => theme.colors.lipstick};\n  display: block;\n`;\n\nconst Checkbox = styled.input.attrs({ type: 'submit' })`\n  width: 3rem;\n  height: 3rem;\n  display: none;\n`;\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n  justify-content: center;\n  gap: 1rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    width: 100%;\n  }\n`;\n\nconst QuoteCard = ({ quote }) => {\n  const [checked, setChecked] = useState(false);\n\n  const toggleCheckbox = () => {\n    setChecked(!checked);\n  };\n\n\n  // const [isEditPopupOpen, setEditPopupOpen] = useState(true);\n\n  // const toggleEditPopup = () => {\n  //     setEditPopupOpen(!isEditPopupOpen);\n  //     console.log('Edit popup is open');\n  // };\n\n  // const handleEditQuotePopupClose = () => {\n  //   setEditQuotePopupOpen(false);\n  //   console.log('Close EditQuotePopup');\n  // };\n\n\n  return (\n    <StyledWrapper>\n      <Top />\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async values => {\n          // handleSuccess();\n          console.log('Values from formik', values);\n\n          const quote = {\n            records: [\n              {\n                fields: {\n                  checked: values.checked,\n                },\n              },\n            ],\n          };\n\n          api\n            .post('/quotes', quote)\n            .then(response => {\n              // setPopup(true);\n              // resetForm();\n              console.log('Response from API in formik', response);\n              console.log('Successfully submitted.');\n            })\n            .catch(err => {\n              // setErrorPopup(true);\n              console.error(err);\n              console.log('The form could not be sent.');\n            });\n        }}\n      >\n        {({ values, handleChange, handleBlur, handleSubmit, handleReset }) => (\n          <StyledForm method=\"POST\" autoComplete=\"off\" onSubmit={handleSubmit}>\n            <Label forHtml=\"checked\">\n              {checked ? <AiFillHeart  /> : <AiOutlineHeart type=\"submit\" />}\n              <Checkbox \n                type=\"checkbox\"\n                name=\"checked\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.checked}\n                checked={checked}\n                onClick={toggleCheckbox}\n              />\n            </Label>\n          </StyledForm>\n        )}\n      </Formik>\n      <Quote>{quote.fields.quote}</Quote>\n      <QuoteWrapper>\n        <ButtonSmall>edit</ButtonSmall>\n        <Text>{quote.fields.title}</Text>\n      </QuoteWrapper>\n      <QuoteWrapper>\n        <ButtonSmall secondary>delete</ButtonSmall>\n        <Text>{quote.fields.author}</Text>\n      </QuoteWrapper>\n\n      {/* <EditQuotePopup isVisible={isEditPopupOpen} toggleEditPopup={toggleEditPopup} /> */}\n    </StyledWrapper>\n  );\n};\n\nQuoteCard.propTypes = {\n  quote: PropTypes.object.isRequired,\n};\n\nexport default QuoteCard;\n","import styled, {css} from \"styled-components\";\nimport {Form, Field } from 'formik';\nimport Button from \"components/atoms/Button/Button\";\n\nexport const StyledWrapper = styled.div`\n  transform: translateY(-50%);\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  left: 0;\n  right: 0;\n  top: 50%;\n  margin: 20px auto;\n  width: 400px;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.colors.white};\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n  z-index: 99999;\n  padding: 40px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    max-width: 90%;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n  justify-content: center;\n  gap: 1rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    width: 100%;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  margin: 20px auto 30px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    display: inline-block;\n    margin: 10px auto 20px;\n  }\n`;\n\nexport const InputField = styled(Field)`\n  color: ${({ theme }) => theme.colors.lipstick};\n  font-size: 1.5rem;\n  border: none;\n  line-height: 2.5;\n  border: 1px solid ${({ theme }) => theme.colors.silver};\n  border-radius: 5px;\n  outline: none;\n  padding: 5px 0 2px 10px;\n  font-weight: bold;\n  height: 4rem;\n\n  ::placeholder {\n    font-size: 1.2rem;\n    color: ${({ theme }) => theme.colors.grey};\n    :focus {\n      color: transparent;\n    }\n  }\n\n  :active {\n    outline: 1px solid ${({ theme }) => theme.colors.lipstick};\n  }\n\n  ${({ textarea }) =>\n    textarea &&\n    css`\n      height: 12rem;\n\n      line-height: 1.5;\n\n      resize: none;\n      outline: none;\n      width: 100%;\n      font-weight: 400;\n    `}\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 1.2rem;\n  color: ${({ theme }) => theme.colors.grey};\n  padding: 3px;\n  background-color: white;\n  display: inline-block;\n  max-width: 120px;\n  margin: 0 0 -20px 10px;\n  z-index: 2;\n`;\n\n\n\n","import { useState } from 'react';\n\nimport { StyledWrapper } from './styled';\nimport styled from 'styled-components';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport api from 'api';\nimport { validationSchema } from 'components/molecules/Card/QuoteCard/validationSchema.js';\nimport { initialValues } from 'components/molecules/Card/QuoteCard/initialValues.js';\nimport RequiredBox from 'components/molecules/RequredBox/RequiredBox';\nimport ErrorPopup from 'components/molecules/Popups/ErrorPopup';\nimport SuccessPopup from 'components/molecules/Popups/SuccessPopup';\nimport { StyledForm, StyledButton, InputField, StyledLabel } from './styled';\n\nimport { AiFillHeart, AiOutlineHeart } from 'react-icons/ai';\n\nexport const Checkbox = styled.input.attrs({ type: 'checkbox' })`\n  width: 3rem;\n  height: 3rem;\n`;\n\nexport const Label = styled.label`\n  width: 3rem;\n  height: 3rem;\n  font-size: 3rem;\n  color: ${({ theme }) => theme.colors.lipstick};\n`;\n\nconst EditQuotePopup = ({isVisible, toggleEditPopup}) => {\n  const [isChecked, setChecked] = useState(false);\n\n  const handleChecked = () => {\n    setChecked(!isChecked);\n  };\n\n  return (\n    <StyledWrapper>\n        <button onClick={toggleEditPopup}>close</button> \n      <p>To jest popup do edycji cytatów</p>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async values => {\n          console.log(values);\n\n          const quote = {\n            records: [\n              {\n                fields: {\n                  quote: values.quote,\n                  title: values.title,\n                  author: values.author,\n                  checked: values.checked,\n                },\n              },\n            ],\n          };\n\n          api\n            .update('/quotes', quote)\n            .then(response => {\n              // setPopup(true);\n              // resetForm();\n              // handleClicked();\n              console.log(response);\n              console.log('Successfully submitted.');\n            })\n            .catch(err => {\n              // setErrorPopup(true);\n              console.error(err);\n              console.log('The form could not be sent.');\n            });\n        }}\n      >\n        {({ values, handleChange, handleBlur, handleSubmit }) => (\n          <Form method=\"POST\" autoComplete=\"off\" onSubmit={handleSubmit}>\n            {/* <>\n              {errorPopup && (\n                <ErrorPopup handlePopupClose={handlePopupClose} handleReset={handleReset} />\n              )}\n              {popup && (\n                <SuccessPopup handlePopupClose={handlePopupClose} handleReset={handleReset} />\n              )}\n            </> */}\n            <>\n              <StyledLabel as=\"label\" htmlFor=\"quote\">\n                quote\n              </StyledLabel>\n              <InputField\n                textarea\n                type=\"text\"\n                name=\"quote\"\n                as=\"textarea\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                values={values.quote}\n              />\n              <ErrorMessage name=\"quote\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            </>\n            <>\n              <StyledLabel as=\"label\" htmlFor=\"title\">\n                title\n              </StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"text\"\n                name=\"title\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.title}\n                autoComplete=\"given-name\"\n              />\n              <ErrorMessage name=\"title\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            </>\n            <>\n              <StyledLabel as=\"label\" htmlFor=\"author\">\n                author\n              </StyledLabel>\n              <InputField\n                as=\"input\"\n                type=\"text\"\n                name=\"author\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.author}\n                autoComplete=\"given-name\"\n              />\n\n              <ErrorMessage name=\"author\">{msg => <RequiredBox msg={msg} />}</ErrorMessage>\n            </>\n\n            <Label forHtml=\"checked\" checked={isChecked}>\n              {isChecked ? <AiFillHeart /> : <AiOutlineHeart />}\n            </Label>\n            <Checkbox\n              type=\"checkbox\"\n              name=\"checked\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.checked}\n              checked={isChecked}\n              onClick={handleChecked}\n            />\n          </Form>\n        )}\n      </Formik>\n      <StyledButton type=\"submit\">\n        Update quote\n      </StyledButton>\n    </StyledWrapper>\n  );\n};\n\nexport default EditQuotePopup;\n","import styled from \"styled-components\";\n\nexport const MasonryWrapper = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(${({ columns }) => columns}, 1fr);\n  grid-gap: ${({ gridGap }) => gridGap};\n  list-style: none;\n  padding: 0;\n  margin: 0;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.large}px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const MasonryColumn = styled.li`\n  display: grid;\n  grid-gap: ${({ gridGap }) => gridGap};\n  grid-auto-rows: max-content;\n`;","import React, { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { MasonryWrapper, MasonryColumn } from './styled';\n\nconst Masonry = ({ columns = 3, gridGap = '2.3rem', isProvideLi = true, children }) => {\n  const output = Children.toArray(children).reduce((acc, child, i) => {\n    acc[i % columns] = [\n      ...acc[i % columns],\n      isProvideLi ? <li key={child.key}>{child}</li> : child,\n    ];\n    return acc;\n  }, new Array(columns).fill([]));\n\n  return (\n    <MasonryWrapper columns={columns} gridGap={gridGap}>\n      {output.map((column, i) => (\n        <MasonryColumn key={i} gridGap={gridGap}>\n          {column}\n        </MasonryColumn>\n      ))}\n    </MasonryWrapper>\n  );\n};\n\nMasonry.propTypes = {\n  columns: PropTypes.number,\n  gridGap: PropTypes.string,\n  isProvideLi: PropTypes.bool,\n  children: PropTypes.any,\n};\n\nexport default Masonry;\n","import { useState, useEffect } from 'react';\n\nimport GridTemplate from 'templates/GridTemplate';\nimport NewQuoteForm from 'components/molecules/NewQuoteForm';\nimport QuoteCard from 'components/molecules/Card/QuoteCard';\nimport Masonry from 'components/molecules/Masonry';\nimport { useFetchData } from 'customHooks';\n\nconst Quotes = () => {\n  const table = 'quotes';\n  const pageSize = 100;\n  const sort = [{ field: 'author', direction: 'asc' }];\n  const { items: quotes } = useFetchData(pageSize, sort, table);\n  console.log('data from Quotes:', quotes);\n\n  return (\n      <GridTemplate pageType=\"quotes\">\n        <NewQuoteForm />\n        <Masonry column={3}>\n          {quotes && quotes.map(quote => <QuoteCard quote={quote} key={quote.id} />)}\n        </Masonry>\n      </GridTemplate>\n  );\n};\n\nexport default Quotes;\n","import PropTypes from 'prop-types';\nimport UserPageTemplate from 'templates/UserPageTemplate';\nimport withContext from 'hoc/withContext';\nimport { Container } from 'components/atoms/Container';\n\nconst DetailsPageTemplate = ({ children, pageContext }) => (\n  <UserPageTemplate pageContext={pageContext}>\n    <Container>{children}</Container>\n  </UserPageTemplate>\n);\n\nDetailsPageTemplate.propTypes = {\n  pageContext: PropTypes.oneOf(['home','books', 'authors', 'notes', 'quotes']),\n  children: PropTypes.object,\n};\n\nexport default withContext(DetailsPageTemplate);\n\n\n","import styled, { keyframes } from 'styled-components';\n\nconst animationLeft = keyframes`\n0%{left:20%;}\n\t50%{left:50%;}\n\t100%{left:20%;}\n`;\n\nconst animationRight = keyframes`\n\t0%{left:80%;}\n\t50%{left:50%;}\n\t100%{left:80%;}\n`;\n\nexport const Centred = styled.div`\n  width: 400px;\n  height: 400px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: ${({ theme }) => theme.colors.white};\n  /* filter: contrast(10); */\n`;\n\nexport const BlobLeft = styled.div`\n  width: 70px;\n  height: 70px;\n  position: absolute;\n  background: ${({ theme }) => theme.colors.lipstick};\n  border-radius: 50%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  left: 20%;\n  animation: ${animationLeft} 2.5s ease infinite;\n`;\n\nexport const BlobRight = styled.div`\n  width: 70px;\n  height: 70px;\n  position: absolute;\n  background: #fff;\n  border-radius: 50%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  left: 80%;\n  animation: ${animationRight} 2.5s ease infinite;\n  background: ${({ theme }) => theme.colors.black};\n`;\n\nexport const StyledParagraph = styled.p`\n  font-size: 2rem;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.grey};\n`;\n","import { Centred, StyledParagraph, BlobLeft, BlobRight } from './styled';\nimport Header from 'components/atoms/Header/Header';\n\n\nconst Loader = () => (\n  <Centred>\n    <Header>Loading data...</Header>\n    <StyledParagraph>Please wait.</StyledParagraph>\n    <BlobLeft />\n    <BlobRight />\n  </Centred>\n);\n\nexport default Loader;\n","import styled from 'styled-components';\nimport Header from '../Header/Header';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 200px auto;\n  align-items: center;\n  justify-content: center;\n\n`;\n\nexport const ErrorIcon = styled.img`\n  width: 100px;\n  margin-bottom: 5rem;\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    width: 80px;\n  }\n`;\n\nexport const Title = styled(Header)`\n  font-size: 3rem;\n  margin-bottom: 2.5rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    font-size: 2rem;\n    margin-bottom: 1.5rem;\n  }\n`;\nexport const Subtitle = styled.p`\n  font-size: 2rem;\n  color: ${({ theme }) => theme.colors.grey};\n  text-align: center;\n  padding-bottom: 5rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    font-size: 1.6rem;\n    padding-bottom: 3rem;\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: inline-block;\n  margin-top: 24px;\n  padding: 16px 24px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.colors.lipstick};\n  color: ${({ theme }) => theme.colors.white};\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 19px;\n  font-family: 'Open Sans', sans-serif;\n  text-decoration: none;\n  outline: none;\n\n  &:hover {\n    box-shadow: 2px -2px 0px #8cc2ff, -2px 2px 0px #8cc2ff, 2px 2px 0px #8cc2ff,\n      -2px -2px 0px #8cc2ff;\n  }\n\n  &:active {\n    box-shadow: inset 0px 2px 0px rgba(20, 70, 32, 0.2);\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    padding: 12px 16px;\n    font-size: 12px;\n  }\n`;","export default __webpack_public_path__ + \"static/media/error.46513cbc.svg\";","import PropTypes from 'prop-types';\nimport { ErrorIcon, Subtitle, Title, Wrapper } from './styled';\nimport errorIcon from 'assets/icons/error.svg';\nimport Button from '../Button/Button';\nimport { Link } from 'react-router-dom';\n\nconst Error = ({ reloadButton }) => {\n  const reloadPage = () => {\n    window.location.reload();\n  };\n\n  return (\n    <Wrapper>\n      <ErrorIcon src={errorIcon} alt='error'/>\n      <Title>Ooops! Something went wrong... </Title>\n      <Subtitle>Please check your network connection and try again.</Subtitle>\n\n      {reloadButton ? (\n        <Button type=\"button\" onClick={reloadPage}>\n          Reload page\n        </Button>\n      \n      ) : (\n        <Button as={Link} to=\"/books\">Back to Books</Button>\n        // <StyledNavLink to=\"/\">Back to homepage</StyledNavLink>\n      )}\n    </Wrapper>\n  );\n};\n\nError.propTypes = {\n  reloadButton: PropTypes.bool,\n};\n\nexport default Error;\n","import styled, { css } from 'styled-components';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport LogoSmall from 'assets/icons/mblSmall.svg';\nimport Header from 'components/atoms/Header/Header';\nimport Button from 'components/atoms/Button/Button';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  min-height: 500px;\n  justify-content: center;\n  margin: 120px auto 50px;\n  padding: 50px;\n  background-color: ${({ theme }) => theme.colors.white};\n  position: relative;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadow};\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    padding: 50px 20px;\n    margin: 80px auto 40px;\n  }\n`;\n\nexport const InnerWrapper = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-rows: auto 1fr;\n  gap: 20px;\n`;\n\nexport const UpperContainer = styled.div`\n  display: grid;\n  align-items: start;\n  grid-template-columns: auto 1fr auto;\n  line-height: 2;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.large}px) {\n    grid-template-columns: auto 1fr;\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    grid-template-columns: 1fr;\n    justify-items: center;\n  }\n`;\n\nexport const LowerContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  line-height: 1.5;\n`;\n\nexport const Details = styled.div``;\n\nexport const StyledImage = styled.img`\n  width: 250px;\n  height: 350px;\n  background-color: ${({ theme }) => theme.colors.silver};\n  background-image: url(${LogoSmall});\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n  background-size: 45%;\n  margin-right: 40px;\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    width: 200px;\n    height: 280px;\n  }\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    align-self: center;\n    width: 250px;\n    height: 350px;\n    margin: 0 0 20px;\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    max-width: 150px;\n    height: 200px;\n  }\n`;\n\nexport const StyledTitle = styled(Header)`\n  font-size: 3rem;\n  text-align: left;\n  margin: 0;\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    text-align: center;\n  }\n`;\n\nexport const StyledAuthor = styled.h2`\n  color: ${({ theme }) => theme.colors.black};\n  font-size: 2.5rem;\n  font-weight: ${({ theme }) => theme.font.bold};\n  text-align: left;\n  color: ${({ theme }) => theme.colors.black};\n  margin: 0;\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    text-align: center;\n  }\n`;\n\nexport const StyledParagraph = styled.p`\n  font-size: 1rem;\n  color: ${({ theme }) => theme.colors.grey};\n`;\n\nexport const DataWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 200px auto;\n  align-items: start;\n  margin-top: 10px;\n  column-gap: 20px;\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    grid-template-columns: auto;\n  }\n`;\n\nexport const Label = styled.p`\n  text-transform: uppercase;\n\n  font-size: 1.5rem;\n  margin: 0;\n  padding: 0;\n  color: ${({ theme }) => theme.colors.grey};\n  @media (max-width: ${({ theme }) => theme.breakpoints.large}px) {\n    display: none;\n  }\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    display: block;\n  }\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    display: none;\n  }\n`;\n\nexport const StyledData = styled.p`\n  font-size: 1.5rem;\n  margin: 0;\n  @media (max-width: ${({ theme }) => theme.breakpoints.xsmall}px) {\n    text-align: center;\n  }\n`;\n\nexport const ShowMore = styled.button`\n  display: block;\n  border: none;\n  background: none;\n  padding: 2px;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: ${({ theme }) => theme.font.bold};\n  margin: 0 auto 0;\n  color: ${({ theme }) => theme.colors.lipstick};\n  padding-top: 20px;\n\n  /* ${Wrapper}:hover & {\n    color: grey;\n  } */\n`;\n\nexport const ButtonContentWrapper = styled.span`\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-gap: 6px;\n  align-items: center;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    flex-direction: row;\n    justify-content: center;\n    margin-top: 20px;\n  }\n`;\n\nexport const Icon = styled(ButtonIcon)`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n`;\n\nexport const DeleteIcon = styled(ButtonIcon)`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n`;\n\n\nexport const Status = styled(Button)`\n  background-color: unset;\n  color: black;\n  border: none;\n  display: flex;\n  width: 50px;\n  height: 50px;\n  margin: 50px 0 0;\n  border-radius: 50%;\n  justify-content: center;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\n    margin: 0;\n  }\n\n  ${({ read }) =>\n    read &&\n    css`\n      background-color: ${({ theme }) => theme.colors.japaneseLaurel};\n    `};\n\n  ${({ borrowed }) =>\n    borrowed &&\n    css`\n      background-color: ${({ theme }) => theme.colors.toreaBay};\n    `}\n\n  ${({ toRead }) =>\n    toRead &&\n    css`\n      background-color: ${({ theme }) => theme.colors.torchRed};\n    `};\n\n  ${({ toBuy }) =>\n    toBuy &&\n    css`\n      background-color: ${({ theme }) => theme.colors.vividViolet};\n    `};\n\n  ${({ inProgress }) =>\n    inProgress &&\n    css`\n      background-color: ${({ theme }) => theme.colors.webOrange};\n    `};\n`;\n\nexport const StatusParagraph = styled.p`\n  margin: -15px 0 50px;\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.grey};\n`;\n\nexport const ExtraWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    grid-template-columns: unset;\n    grid-template-rows: 1fr auto;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/trash.3dbc8c55.svg\";","export default __webpack_public_path__ + \"static/media/lcLogo.d8002aa1.svg\";","export default __webpack_public_path__ + \"static/media/link.99466d54.svg\";","import styled from 'styled-components';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\n\nexport const StyledWrapper = styled.div`\n  transform: translateY(-50%);\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  left: 0;\n  right: 0;\n  top: 50%;\n  margin: 0 auto;\n  width: 70vw;\n  max-width: 500px;\n  height: 50vh;\n  min-height: 100px;\n  max-height: 250px;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.colors.white};\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n  z-index: 99999;\n  padding: 40px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    width: 90%;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 30px;\n  justify-content: center;\n  padding: 10px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    gap: 20px;\n  }\n`;\n\nexport const StyledParagraph = styled.p`\n  font-size: 2rem;\n  color: ${({ theme }) => theme.colors.grey};\n  text-align: center;\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}px) {\n    font-size: 1.7rem;\n  }\n`;\n\nexport const CloseButton = styled(ButtonIcon)`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  z-index: 99999;\n  width: 32px;\n  height: 32px;\n  box-shadow: ${({ theme }) => theme.shadows.boxShadowDark};\n`;\n","import PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nimport Button from 'components/atoms/Button/Button';\nimport closeIcon from 'assets/icons/close.svg';\nimport { StyledWrapper, ButtonWrapper, StyledParagraph, CloseButton } from './styled';\nimport { base } from 'airtable/base';\nimport trashIcon from 'assets/icons/trash.svg';\nimport withContext from 'hoc/withContext';\n\nconst ConfirmationPopup = ({ handleDeleteFalse, itemId, pageContext }) => {\n  const DeleteButton = () => {\n    const history = useHistory();\n    const deleteItem = () => {\n      base(pageContext).destroy(itemId, function (err, deleteItem) {\n        if (err) {\n          console.error(err);\n\n          return;\n        }\n        return console.log('Deleted record with id', itemId), history.goBack();\n      });\n    };\n    return (\n      <div className=\"position-absolute\">\n        <Button type=\"submit\" icon={trashIcon} onClick={deleteItem}>\n          Yes\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <StyledWrapper>\n      <StyledParagraph>Do you want to delete this item?</StyledParagraph>\n      <CloseButton icon={closeIcon} onClick={handleDeleteFalse} />\n      <ButtonWrapper>\n        <DeleteButton>Yes</DeleteButton>\n        <Button secondary onClick={handleDeleteFalse}>\n          No\n        </Button>\n      </ButtonWrapper>\n    </StyledWrapper>\n  );\n};\n\nConfirmationPopup.propTypes = {\n  handleDeleteTrue: PropTypes.func,\n  handleDeleteFalse: PropTypes.func,\n  itemId: PropTypes.string.isRequired,\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'note', 'quotes']),\n};\n\nexport default withContext(ConfirmationPopup);\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyledImage,\n  StyledTitle,\n  StyledAuthor,\n  InnerWrapper,\n  Icon,\n  Wrapper,\n  UpperContainer,\n  LowerContainer,\n  DataWrapper,\n  Label,\n  StyledData,\n  Details,\n  ButtonsWrapper,\n  Status,\n  ExtraWrapper,\n  ShowMore,\n  ButtonContentWrapper,\n  StatusParagraph,\n} from './styled';\nimport trashIcon from 'assets/icons/trash.svg';\nimport lcLogo from 'assets/icons/lcLogo.svg';\nimport linkIcon from 'assets/icons/link.svg';\nimport { Arrow } from 'components/atoms/Arrow';\nimport ConfirmationPopup from 'components/molecules/Popups/ConfirmationPopup';\nimport withContext from 'hoc/withContext';\n\nconst CardBig = ({ item, pageContext }) => {\n  const [showMore, setShowMore] = useState(false);\n  const [popup, setPopup] = useState({\n    show: false,\n    id: null,\n  });\n\n  const itemId = item.id;\n\n  const handleDelete = id => {\n    setPopup({\n      show: true,\n      id,\n    });\n    console.log('open popup');\n  };\n\n  const handleDeleteFalse = () => {\n    setPopup({\n      show: false,\n      id: null,\n    });\n    console.log('Close popup');\n  };\n\n  const {\n    status,\n    imageUrl,\n    firstName,\n    lastName,\n    title,\n    series,\n    date,\n    isbn,\n    numberOfPages,\n    translation,\n    publishing,\n    LClink,\n    oficialWebsite,\n    content,\n  } = item.fields;\n\n  return (\n    <>\n      <Wrapper>\n        <InnerWrapper>\n          <UpperContainer>\n            <StyledImage src={imageUrl} />\n            <ExtraWrapper>\n              <div>\n                {pageContext === 'authors' ? (\n                  <>\n                    <StyledTitle>\n                      {firstName} {lastName}\n                    </StyledTitle>\n                  </>\n                ) : (\n                  <StyledTitle>{title}</StyledTitle>\n                )}\n                {pageContext === 'authors' ? null : (\n                  <StyledAuthor>\n                    {firstName} {lastName}\n                  </StyledAuthor>\n                )}\n                {pageContext === 'books' && (\n                  <Details>\n                    <DataWrapper>\n                      <Label>series:</Label>\n                      <StyledData>{series}</StyledData>\n                    </DataWrapper>\n\n                    <DataWrapper>\n                      <Label>date of publication:</Label>\n                      <StyledData>{date}</StyledData>\n                    </DataWrapper>\n\n                    <DataWrapper>\n                      <Label>ISBN:</Label>\n                      <StyledData>{isbn}</StyledData>\n                    </DataWrapper>\n\n                    <DataWrapper>\n                      <Label>pages:</Label>\n                      <StyledData>{numberOfPages}</StyledData>\n                    </DataWrapper>\n\n                    <DataWrapper>\n                      <Label>translate:</Label>\n                      <StyledData>{translation}</StyledData>\n                    </DataWrapper>\n\n                    <DataWrapper>\n                      <Label>publisher:</Label>\n                      <StyledData>{publishing}</StyledData>\n                    </DataWrapper>\n                  </Details>\n                )}\n              </div>\n              <div>\n                <ButtonsWrapper>\n                  {status && status === 'to read' && <Status toRead />}\n                  {status && status === 'read' && <Status read />}\n                  {status && status === 'to buy' && <Status toBuy />}\n                  {status && status === 'borrowed' && <Status borrowed />}\n                  {status && status === 'in progress' && <Status inProgress />}\n                  <StatusParagraph>{status}</StatusParagraph>\n\n                  <Icon target=\"_blank\" rel=\"noreferrer\" href={LClink} icon={lcLogo} />\n                  {pageContext === 'authors' && oficialWebsite ? (\n                    <Icon target=\"_blank\" rel=\"noreferrer\" href={oficialWebsite} icon={linkIcon} />\n                  ) : null}\n                  <Icon icon={trashIcon} onClick={handleDelete} />\n                </ButtonsWrapper>\n              </div>\n            </ExtraWrapper>\n          </UpperContainer>\n          {content && content.length > 400 ? (\n            <LowerContainer>\n              {showMore ? content : `${content.slice(0, 400)}...`}\n              <ShowMore onClick={() => setShowMore(!showMore)}>\n                <ButtonContentWrapper>\n                  <span>\n                    {showMore ? 'Show less' : 'Show more'}\n                    <Arrow showMore={showMore} />\n                  </span>\n                </ButtonContentWrapper>\n              </ShowMore>\n            </LowerContainer>\n          ) : (\n            <LowerContainer>{content}</LowerContainer>\n          )}\n        </InnerWrapper>\n        {popup.show && (\n          <ConfirmationPopup handleDeleteFalse={handleDeleteFalse} item={item} itemId={itemId} />\n        )}\n      </Wrapper>\n    </>\n  );\n};\n\nCardBig.propTypes = {\n  item: PropTypes.object,\n  author: PropTypes.object,\n  note: PropTypes.object,\n  handleDelete: PropTypes.func,\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'notes', 'quotes']),\n};\n\nCardBig.defaultProps = {\n  book: {},\n  author: {},\n  note: {},\n};\n\nexport default withContext(CardBig);\n","import { useState, useEffect } from 'react';\nimport api from 'api';\n\nconst useFetchDetailsData = endpoint => {\n  const [itemData, setItemData] = useState({\n    status: 'loading',\n    data: null,\n  });\n\n  const getItemData = async () => {\n   \n      try {\n        const data = await api.get(endpoint);\n        setItemData({\n          status: 'success',\n          data,\n        });\n        \n      } catch (error) {\n        setItemData({\n          status: 'error',\n        });\n      }\n    }\n\n  useEffect(() => {\n    const delayGetData = setTimeout(getItemData, 3_000);\n    return () => clearTimeout(delayGetData);\n  }, []);\n\n  return {\n    itemData, \n    setItemData\n  };\n};\n\nexport default useFetchDetailsData;\n","import { useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { base } from 'airtable/base';\n\n\nconst useFetchBooksData = () => {\n  const [books, setBooks] = useState({\n    status: 'loading',\n    data: null,\n  });\n\n  // const filterByFormula = '{lastName}=\"Miller\"';\n  // const sort =  [{ field: 'createdTime', direction: 'desc' }]\n\n  const getData = useMemo(() => {\n    return  ( \n  base('books')\n      .select({\n        view: 'Grid view',\n        pageSize: 3,\n        // sort,\n        // filterByFormula,\n      })\n      .eachPage(\n        records => {\n          setBooks(records);\n          console.log(records);\n        },\n        function (err) {\n          if (err) {\n            console.error(err);\n            return;\n          }\n        },\n      )\n      )\n  }, []);\n\n  useEffect(() => {\n    const delayGetData = setTimeout(getData, 3_000);\n    return () => clearTimeout(delayGetData);\n  }, []);\n\n  return {\n    books,\n    setBooks,\n   \n  };\n};\n\nexport default useFetchBooksData;\n","import PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport DetailsPageTemplate from 'templates/DetailsPageTemplate';\nimport Header from 'components/atoms/Header/Header';\nimport Loader from 'components/atoms/Loader';\nimport Error from 'components/atoms/Error';\nimport CardBig from 'components/molecules/Card/CardBig';\nimport CardSmall from 'components/molecules/Card/CardSmall';\n// import LastAddedBooks from 'components/molecules/LastAddedBooks';\nimport Button from 'components/atoms/Button/Button';\nimport useFetchDetailsData from 'actions/useFetchDetailsData';\nimport withContext from 'hoc/withContext';\nimport useFetchBooksData from 'actions/useFetchBooksData';\nimport { useFetchData } from 'customHooks';\nimport { useGetCurrentPage } from 'customHooks';\n\nconst StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 200px);\n  grid-gap: 2rem;\n  margin: 4rem auto;\n  justify-items: center;\n  justify-content: center;\n  position: relative;\n`;\n\nconst DetailsPage = pageContext => {\n  const endpoint = pageContext.location.pathname;\n  const { itemData } = useFetchDetailsData(endpoint);\n  const history = useHistory();\n\n  const { books } = useFetchBooksData();\n\n  // console.log(books.data);\n\n  return (\n    <>\n      <DetailsPageTemplate>\n        {itemData.status === 'loading' ? (\n          // || books.status === 'loading'\n          <Loader />\n        ) : itemData.status === 'error' ? (\n          // || books.status === 'error'\n          <Error reloadButton />\n        ) : (\n          <>\n            {itemData &&\n              [itemData.data].map((item, index) => (\n                <CardBig key={item.id} item={item} index={index} endpoint={endpoint} />\n              ))}\n            <>\n              <Header>Other books by this author</Header>\n              {/* <StyledGrid>\n                {books && [books].map(book => <CardSmall key={book.id} book={book} id={book.id}  />)}\n              </StyledGrid> */}\n            </>\n\n            <Button\n              onClick={() => {\n                history.goBack();\n              }}\n            >\n              Back\n            </Button>\n          </>\n        )}\n      </DetailsPageTemplate>\n    </>\n  );\n};\n\nDetailsPage.propTypes = {\n  pageContext: PropTypes.oneOf(['home', 'books', 'authors', 'books', 'quotes']),\n};\n\nexport default withContext(DetailsPage);\n","export const routes = {\n  home: '/home',\n  notes: '/notes',\n  note: '/notes/:id',\n  books: '/books',\n  book: '/books/:id',\n  authors: '/authors',\n  author: '/authors/:id',\n  quotes: '/quotes',\n};\n","import React from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport MainTemplate from 'templates/MainTemplate';\nimport Authors from 'views/Authors';\nimport Notes from 'views/Notes';\nimport Books from 'views/Books';\nimport Home from 'views/Home';\nimport Quotes from 'views/Quotes';\nimport DetailsPage from 'views/DetailsPage';\nimport { routes } from 'routes';\n\nconst Root = () => (\n    <HashRouter>\n      <MainTemplate>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Redirect to={routes.home} />} />\n          <Route exact path={routes.home} component={Home} />\n          <Route exact path={routes.books} component={Books} />\n          <Route path={routes.book} component={DetailsPage} />\n          <Route exact path={routes.authors} component={Authors} />\n          <Route path={routes.author} component={DetailsPage} />\n          <Route exact path={routes.notes} component={Notes} />\n          <Route path={routes.note} component={DetailsPage} />\n          <Route exact path={routes.quotes} component={Quotes} />\n        </Switch>\n      </MainTemplate>\n    </HashRouter>\n);\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'views/Root';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}